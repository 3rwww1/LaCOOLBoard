.TH "ExternalSensor< T >" 3 "Mon Jul 3 2017" "CoolAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ExternalSensor< T > \- template<class SensorClass> class External Sensor: Derived class from \fBBaseExternalSensor\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ExternalSensor\&.h>\fP
.PP
Inherits \fBBaseExternalSensor\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBExternalSensor\fP ()"
.br
.ti -1c
.RI "virtual uint8_t \fBbegin\fP ()"
.br
.ti -1c
.RI "virtual int \fBread\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "T \fBsensor\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<class T>
.br
class ExternalSensor< T >"
template<class SensorClass> class External Sensor: Derived class from \fBBaseExternalSensor\fP\&. 

This is the generic Template for an external sensor This class works automatically with sensors that provide the following methods :
.IP "\(bu" 2
constructor(void);
.IP "\(bu" 2
uint8_t/bool \fBbegin(void)\fP;
.IP "\(bu" 2
int \fBread(void)\fP;
.PP
.PP
If your sensor doesn't provide these methods or is not present in the specialized templates feel free to implement your own specializiation, following the provided generic template , or contact us and we will be glad to expand our list of supported external sensors 
.PP
Definition at line 87 of file ExternalSensor\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "template<class T > \fBExternalSensor\fP< T >::\fBExternalSensor\fP ()\fC [inline]\fP"
Generic Constructor 
.PP
Definition at line 93 of file ExternalSensor\&.h\&.
.PP
References ExternalSensor< T >::sensor\&.
.PP
.nf
94     {
95         sensor();
96     }
.fi
.SH "Member Function Documentation"
.PP 
.SS "template<class T > virtual uint8_t \fBExternalSensor\fP< T >::begin (void)\fC [inline]\fP, \fC [virtual]\fP"
Generic begin method 
.PP
Reimplemented from \fBBaseExternalSensor\fP\&.
.PP
Definition at line 103 of file ExternalSensor\&.h\&.
.PP
References ExternalSensor< T >::sensor\&.
.PP
.nf
104     {
105 
106         return(sensor\&.begin() ); 
107     }
.fi
.SS "template<class T > virtual int \fBExternalSensor\fP< T >::read (void)\fC [inline]\fP, \fC [virtual]\fP"
Generic read method 
.PP
Reimplemented from \fBBaseExternalSensor\fP\&.
.PP
Definition at line 112 of file ExternalSensor\&.h\&.
.PP
.nf
113     {
114 
115         return(0);
116     }
.fi
.SH "Member Data Documentation"
.PP 
.SS "template<class T > T \fBExternalSensor\fP< T >::sensor\fC [private]\fP"

.PP
Definition at line 122 of file ExternalSensor\&.h\&.
.PP
Referenced by ExternalSensor< T >::begin(), ExternalSensor< NDIR_I2C >::begin(), ExternalSensor< DallasTemperature >::begin(), ExternalSensor< T >::ExternalSensor(), ExternalSensor< NDIR_I2C >::ExternalSensor(), ExternalSensor< DallasTemperature >::ExternalSensor(), ExternalSensor< NDIR_I2C >::read(), and ExternalSensor< DallasTemperature >::read()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CoolAPI from the source code\&.
