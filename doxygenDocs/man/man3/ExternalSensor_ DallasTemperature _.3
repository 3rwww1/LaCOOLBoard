.TH "ExternalSensor< DallasTemperature >" 3 "Wed Jul 5 2017" "CoolAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
ExternalSensor< DallasTemperature > \- DallasTemperature Specialization Class This is the template specialization for the Dallas Temperature sensor\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <ExternalSensor\&.h>\fP
.PP
Inherits \fBBaseExternalSensor\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBExternalSensor\fP ()"
.br
.ti -1c
.RI "virtual uint8_t \fBbegin\fP ()"
.br
.ti -1c
.RI "virtual float \fBread\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "DallasTemperature \fBsensor\fP =NULL"
.br
.ti -1c
.RI "DeviceAddress \fBdallasAddress\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 

.SS "template<>
.br
class ExternalSensor< DallasTemperature >"
DallasTemperature Specialization Class This is the template specialization for the Dallas Temperature sensor\&. 
.PP
Definition at line 235 of file ExternalSensor\&.h\&.
.SH "Constructor & Destructor Documentation"
.PP 
.SS "\fBExternalSensor\fP< DallasTemperature >::\fBExternalSensor\fP ()\fC [inline]\fP"
\fBExternalSensor()\fP: DallasTemperature specific constructor 
.PP
Definition at line 242 of file ExternalSensor\&.h\&.
.PP
References ExternalSensor< T >::sensor\&.
.PP
.nf
243     {
244         Serial\&.println("ExternalSensor <DallasTemperature> constructor");
245         Serial\&.println();
246 
247         OneWire oneWire(0);
248         
249         sensor=DallasTemperature(&oneWire);
250     }
.fi
.SH "Member Function Documentation"
.PP 
.SS "virtual uint8_t \fBExternalSensor\fP< DallasTemperature >::begin (void)\fC [inline]\fP, \fC [virtual]\fP"
\fBbegin()\fP: DallasTemperature specific begin method
.PP
\fBReturns:\fP
.RS 4
true if successful 
.RE
.PP

.PP
Reimplemented from \fBBaseExternalSensor\fP\&.
.PP
Definition at line 258 of file ExternalSensor\&.h\&.
.PP
References ExternalSensor< T >::sensor\&.
.PP
.nf
259     {
260         Serial\&.println("ExternalSensor <DallasTemperature> begin()");
261         Serial\&.println();
262         
263         sensor\&.begin(); 
264         delay(5);
265         sensor\&.getAddress(this->dallasAddress, 1);   
266         return(true);
267     }
.fi
.SS "virtual float \fBExternalSensor\fP< DallasTemperature >::read (void)\fC [inline]\fP, \fC [virtual]\fP"
\fBread()\fP: DallasTemperature specific read method
.PP
\fBReturns:\fP
.RS 4
the temperature in °C 
.RE
.PP

.PP
Reimplemented from \fBBaseExternalSensor\fP\&.
.PP
Definition at line 274 of file ExternalSensor\&.h\&.
.PP
References ExternalSensor< T >::sensor\&.
.PP
.nf
275     {
276         Serial\&.println("ExternalSensor <DallasTemperature> read()");
277         Serial\&.println();
278 
279         Serial\&.print("temperature : ");
280         Serial\&.print( (float) sensor\&.getTempC(this->dallasAddress) );
281         Serial\&.print("°C");
282         Serial\&.println();
283         
284         return( (float) sensor\&.getTempC(this->dallasAddress) );
285     }
.fi
.SH "Member Data Documentation"
.PP 
.SS "DeviceAddress \fBExternalSensor\fP< DallasTemperature >::dallasAddress\fC [private]\fP"

.PP
Definition at line 290 of file ExternalSensor\&.h\&.
.SS "DallasTemperature \fBExternalSensor\fP< DallasTemperature >::sensor =NULL\fC [private]\fP"

.PP
Definition at line 289 of file ExternalSensor\&.h\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CoolAPI from the source code\&.
