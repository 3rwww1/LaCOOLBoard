.TH "CoolBoardLed" 3 "Wed Jul 5 2017" "CoolAPI" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CoolBoardLed \- This class handles the led in the Sensor Board\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <CoolBoardLed\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBbegin\fP ()"
.br
.ti -1c
.RI "void \fBwrite\fP (int R, int G, int B)"
.br
.ti -1c
.RI "void \fBend\fP ()"
.br
.ti -1c
.RI "bool \fBconfig\fP ()"
.br
.ti -1c
.RI "void \fBprintConf\fP ()"
.br
.ti -1c
.RI "void \fBcolorFade\fP (int R, int G, int B, int T)"
.br
.ti -1c
.RI "void \fBblink\fP (int R, int G, int B, int T)"
.br
.ti -1c
.RI "void \fBfadeIn\fP (int R, int G, int B, int T)"
.br
.ti -1c
.RI "void \fBfadeOut\fP (int R, int G, int B, int T)"
.br
.ti -1c
.RI "void \fBstrobe\fP (int R, int G, int B, int T)"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "NeoPixelBus< NeoGrbFeature, Neo800KbpsMethod > * \fBneoPixelLed\fP = NULL"
.br
.ti -1c
.RI "byte \fBledActive\fP =0"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class handles the led in the Sensor Board\&. 
.PP
Definition at line 20 of file CoolBoardLed\&.h\&.
.SH "Member Function Documentation"
.PP 
.SS "void CoolBoardLed::begin ()"
\fBCoolBoardLed::begin()\fP: This method is provided to start the Led Object by setting the correct pin and creating a dynamic neoPixelBus 
.PP
Definition at line 162 of file CoolBoardLed\&.cpp\&.
.PP
References neoPixelLed\&.
.PP
Referenced by CoolBoard::begin()\&.
.PP
.nf
163 {
164     Serial\&.println("Entering CoolBoardLed\&.begin() ");
165 
166     pinMode(5,OUTPUT);
167     digitalWrite(5,HIGH);
168     neoPixelLed = new NeoPixelBus<NeoGrbFeature, Neo800KbpsMethod>(1,2); 
169     neoPixelLed->Begin();
170     neoPixelLed->Show();
171 } 
.fi
.SS "void CoolBoardLed::blink (int R, int G, int B, int T)"
CoolBoardLed::blink( Red , Green , Blue , Time in seconds ): Blink animation: Led On for T seconds Led off 
.PP
Definition at line 52 of file CoolBoardLed\&.cpp\&.
.PP
References neoPixelLed\&.
.PP
.nf
53 {
54     Serial\&.println("Entering CoolBoardLed\&.blink()");
55     Serial\&.println();
56 
57     Serial\&.print("R : ");Serial\&.println(R);
58     Serial\&.print("G  : ");Serial\&.println(G);
59     Serial\&.print("B  : ");Serial\&.println(B);
60     Serial\&.print("Time :");Serial\&.println(T);
61     Serial\&.println();    
62 
63     neoPixelLed->SetPixelColor(0, RgbColor(R, G, B));
64     neoPixelLed->Show();
65     delay(T);
66     neoPixelLed->SetPixelColor(0, RgbColor(0, 0, 0));
67     neoPixelLed->Show();
68 }
.fi
.SS "void CoolBoardLed::colorFade (int R, int G, int B, int T)"
\fBCoolBoardLed::colorFade\fP ( Red , Green , Blue, Time in seconds ): colorFade animation: Fade In over T(seconds) Fade Out over T(seconds) 
.PP
Definition at line 22 of file CoolBoardLed\&.cpp\&.
.PP
References neoPixelLed\&.
.PP
.nf
23 {
24     Serial\&.println("Entering CoolBoardLed\&.colorFade()");
25     Serial\&.println();
26 
27     Serial\&.print("R : ");Serial\&.println(R);
28     Serial\&.print("G  : ");Serial\&.println(G);
29     Serial\&.print("B  : ");Serial\&.println(B);
30     Serial\&.print("Time :");Serial\&.println(T);
31     Serial\&.println();    
32 
33     for (int k = 0; k < 1000; k++) 
34     {
35         neoPixelLed->SetPixelColor(0, RgbColor(k * R / 1000, k * G / 1000, k * B / 1000));
36         neoPixelLed->Show();
37         delay(T);
38     }
39     for (int k = 1000; k >= 0; k--) 
40     {
41         neoPixelLed->SetPixelColor(0, RgbColor(k * R / 1000, k * G / 1000, k * B / 1000));
42         neoPixelLed->Show();
43         delay(T);
44     }
45 }
.fi
.SS "bool CoolBoardLed::config ()"
\fBCoolBoardLed::config()\fP: This method is provided to configure the Led Object : -ledActive=0 : deactivated -ledActive=1 : activated 
.PP
\fBReturns:\fP
.RS 4
true if the configuration done, false otherwise 
.RE
.PP

.PP
Definition at line 201 of file CoolBoardLed\&.cpp\&.
.PP
References ledActive\&.
.PP
Referenced by CoolBoard::begin(), and CoolBoard::update()\&.
.PP
.nf
202 {
203     Serial\&.println("Entering CoolBoardLed\&.config()");
204     Serial\&.println();
205     
206     File coolBoardLedConfig = SPIFFS\&.open("/coolBoardLedConfig\&.json", "r");
207 
208     if (!coolBoardLedConfig) 
209     {
210         Serial\&.println("failed to read /coolBoardLedConfig\&.json");
211         Serial\&.println();
212         return(false);
213     }
214     else
215     {
216         size_t size = coolBoardLedConfig\&.size();
217         // Allocate a buffer to store contents of the file\&.
218         std::unique_ptr<char[]> buf(new char[size]);
219 
220         coolBoardLedConfig\&.readBytes(buf\&.get(), size);
221         DynamicJsonBuffer jsonBuffer;
222         JsonObject& json = jsonBuffer\&.parseObject(buf\&.get());
223         if (!json\&.success()) 
224         {
225             Serial\&.println("failed to parse json");
226             Serial\&.println();
227             return(false);
228         } 
229         else
230         {   
231             Serial\&.println("read configuration file : ");
232             json\&.printTo(Serial);
233             Serial\&.println();
234   
235             if(json["ledActive"]\&.success() )
236             {
237                 this->ledActive = json["ledActive"]; 
238             }
239             else
240             {
241                 this->ledActive=this->ledActive;            
242             }
243             
244             json["ledActive"]=this->ledActive;
245             coolBoardLedConfig\&.close();
246             
247             coolBoardLedConfig = SPIFFS\&.open("/coolBoardLedConfig\&.json", "w");
248             if(!coolBoardLedConfig)
249             {
250                 Serial\&.println("failed to write to /coolBoardLedConfig\&.json");
251                 Serial\&.println();
252                 return(false);          
253             }
254 
255             json\&.printTo(coolBoardLedConfig);
256             coolBoardLedConfig\&.close();
257 
258             Serial\&.println("saved Led Config is : ");
259             json\&.printTo(Serial);
260             Serial\&.println();
261 
262             return(true); 
263         }
264     }   
265 
266 }               
.fi
.SS "void CoolBoardLed::end ()"
\fBCoolBoardLed::end()\fP : this method is provided to delete the dynamically created neoPixelLed 
.PP
Definition at line 148 of file CoolBoardLed\&.cpp\&.
.PP
References neoPixelLed\&.
.PP
.nf
149 {
150     Serial\&.println("Entering CoolBoardLed\&.end()");
151 
152     delete neoPixelLed;
153 }
.fi
.SS "void CoolBoardLed::fadeIn (int R, int G, int B, int T)"
CoolBoardLed::fadeIn(Red , Green , Blue , Time in seconds) Fade In animation: gradual increase over T(seconds) 
.PP
Definition at line 74 of file CoolBoardLed\&.cpp\&.
.PP
References neoPixelLed\&.
.PP
.nf
75 {
76     Serial\&.println("Entering CoolBoardLed\&.fadeIn()");
77     Serial\&.println();
78 
79     Serial\&.print("R : ");Serial\&.println(R);
80     Serial\&.print("G  : ");Serial\&.println(G);
81     Serial\&.print("B  : ");Serial\&.println(B);
82     Serial\&.print("Time :");Serial\&.println(T);
83     Serial\&.println();    
84 
85     for (int k = 0; k < 1000; k++) 
86     {
87         neoPixelLed->SetPixelColor(0, RgbColor(k * R / 1000, k * G / 1000, k * B / 1000));
88         neoPixelLed->Show();
89         delay(T);
90     }
91 }
.fi
.SS "void CoolBoardLed::fadeOut (int R, int G, int B, int T)"
CoolBoardLed::fadeOut( Red , Green , Blue , Time in seconds) Fade Out animation: gradual decrease over T(seconds) 
.PP
Definition at line 97 of file CoolBoardLed\&.cpp\&.
.PP
References neoPixelLed\&.
.PP
.nf
98 {
99     Serial\&.println("Entering CoolBoardLed\&.fadeOut()");
100     Serial\&.println();
101 
102     Serial\&.print("R : ");Serial\&.println(R);
103     Serial\&.print("G  : ");Serial\&.println(G);
104     Serial\&.print("B  : ");Serial\&.println(B);
105     Serial\&.print("Time :");Serial\&.println(T);
106     Serial\&.println();    
107 
108 
109     for (int k = 1000; k >= 0; k--) 
110     {
111         neoPixelLed->SetPixelColor(0, RgbColor(k * R / 1000, k * G / 1000, k * B / 1000));
112         neoPixelLed->Show();
113         delay(T);
114     }
115 }
.fi
.SS "void CoolBoardLed::printConf ()"
\fBCoolBoardLed::printConf()\fP: This method is provided to print the Led Object Configuration to the Serial Monitor 
.PP
Definition at line 274 of file CoolBoardLed\&.cpp\&.
.PP
References ledActive\&.
.PP
Referenced by CoolBoard::begin()\&.
.PP
.nf
275 {
276     Serial\&.println("Entering CoolBoardLed\&.printConf()");
277     Serial\&.println();
278 
279     Serial\&.println("Led Conf");
280 
281     Serial\&.print("ledActive : ");
282     Serial\&.println(ledActive);
283 
284     Serial\&.println();    
285 }
.fi
.SS "void CoolBoardLed::strobe (int R, int G, int B, int T)"
CoolBoardLed::strobe(Red , Green , Blue , Time in seconds) Strobe animation: blinks over T(seconds) 
.PP
Definition at line 121 of file CoolBoardLed\&.cpp\&.
.PP
References neoPixelLed\&.
.PP
.nf
122 {
123     Serial\&.println("Entering CoolBoardLed\&.strobe()");
124     Serial\&.println();
125 
126     Serial\&.print("R : ");Serial\&.println(R);
127     Serial\&.print("G  : ");Serial\&.println(G);
128     Serial\&.print("B  : ");Serial\&.println(B);
129     Serial\&.print("Time :");Serial\&.println(T);
130     Serial\&.println();    
131 
132     
133     for (int k = 1000; k >= 0; k--) 
134     {
135         neoPixelLed->SetPixelColor(0, RgbColor(R, G, B));
136         neoPixelLed->Show();
137         delay(T);
138         neoPixelLed->SetPixelColor(0, RgbColor(0, 0, 0));
139         neoPixelLed->Show();
140         delay(T);
141     }
142 }
.fi
.SS "void CoolBoardLed::write (int R, int G, int B)"
CoolBoardLed::write(Red,Green,Blue): This method is provided to set the Color of the Led 
.PP
Definition at line 178 of file CoolBoardLed\&.cpp\&.
.PP
References neoPixelLed\&.
.PP
.nf
179 {
180     Serial\&.println("Entering CoolBoardLed\&.write()");
181     Serial\&.println();
182 
183     Serial\&.print("R : ");Serial\&.println(R);
184     Serial\&.print("G  : ");Serial\&.println(G);
185     Serial\&.print("B  : ");Serial\&.println(B);
186     Serial\&.println();    
187 
188 
189     neoPixelLed->SetPixelColor(0, RgbColor(R, G, B));
190     neoPixelLed->Show();
191 }
.fi
.SH "Member Data Documentation"
.PP 
.SS "byte CoolBoardLed::ledActive =0\fC [private]\fP"

.PP
Definition at line 54 of file CoolBoardLed\&.h\&.
.PP
Referenced by config(), and printConf()\&.
.SS "NeoPixelBus<NeoGrbFeature, Neo800KbpsMethod>* CoolBoardLed::neoPixelLed = NULL\fC [private]\fP"

.PP
Definition at line 52 of file CoolBoardLed\&.h\&.
.PP
Referenced by begin(), blink(), colorFade(), end(), fadeIn(), fadeOut(), strobe(), and write()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CoolAPI from the source code\&.
