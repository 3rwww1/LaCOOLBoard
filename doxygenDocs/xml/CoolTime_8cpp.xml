<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="CoolTime_8cpp" kind="file" language="C++">
    <compoundname>CoolTime.cpp</compoundname>
    <includes local="yes">FS.h</includes>
    <includes local="yes">Arduino.h</includes>
    <includes local="yes">DS1337.h</includes>
    <includes refid="CoolTime_8h" local="yes">CoolTime.h</includes>
    <includes local="yes">ArduinoJson.h</includes>
    <includes local="yes">Time.h</includes>
    <incdepgraph>
      <node id="122">
        <label>CoolTime.h</label>
        <link refid="CoolTime_8h"/>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="123" relation="include">
        </childnode>
      </node>
      <node id="119">
        <label>FS.h</label>
      </node>
      <node id="121">
        <label>DS1337.h</label>
      </node>
      <node id="123">
        <label>WiFiUdp.h</label>
      </node>
      <node id="118">
        <label>CoolTime.cpp</label>
        <link refid="CoolTime_8cpp"/>
        <childnode refid="119" relation="include">
        </childnode>
        <childnode refid="120" relation="include">
        </childnode>
        <childnode refid="121" relation="include">
        </childnode>
        <childnode refid="122" relation="include">
        </childnode>
        <childnode refid="124" relation="include">
        </childnode>
        <childnode refid="125" relation="include">
        </childnode>
      </node>
      <node id="125">
        <label>Time.h</label>
      </node>
      <node id="124">
        <label>ArduinoJson.h</label>
      </node>
      <node id="120">
        <label>Arduino.h</label>
      </node>
    </incdepgraph>
    <briefdescription>
<para><ref refid="classCoolTime" kindref="compound">CoolTime</ref> Source File. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Mehdi Zemzem </para></simplesect>
<simplesect kind="version"><para>1.0 </para></simplesect>
<simplesect kind="date"><para>27/06/2017 </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"></codeline>
<codeline lineno="11"><highlight class="preprocessor">#include<sp/>&quot;FS.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Arduino.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;DS1337.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="CoolTime_8h" kindref="compound">CoolTime.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;ArduinoJson.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;Time.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="17"><highlight class="normal"></highlight></codeline>
<codeline lineno="25" refid="classCoolTime_1a2b36c4009f083ece2d407fec077c4938" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCoolTime_1a2b36c4009f083ece2d407fec077c4938" kindref="member">CoolTime::begin</ref>()</highlight></codeline>
<codeline lineno="26"><highlight class="normal">{</highlight></codeline>
<codeline lineno="27"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/>trust<sp/>=<sp/></highlight><highlight class="keyword">true</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1afa77d58c0c21cfe8b7c27e34d82f07b9" kindref="member">rtc</ref>.init();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//initialise<sp/>DS1337</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!<ref refid="classCoolTime_1afa77d58c0c21cfe8b7c27e34d82f07b9" kindref="member">rtc</ref>.isRunning())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>ever<sp/>the<sp/>RTC<sp/>is<sp/>stopped</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trust<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//clock<sp/>is<sp/>not<sp/>ok</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1afa77d58c0c21cfe8b7c27e34d82f07b9" kindref="member">rtc</ref>.start();</highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<ref refid="classCoolTime_1afa77d58c0c21cfe8b7c27e34d82f07b9" kindref="member">rtc</ref>.hasStopped())<sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//if<sp/>the<sp/>clock<sp/>has<sp/>stoped<sp/>one<sp/>moment<sp/>or<sp/>another</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>trust<sp/>=<sp/></highlight><highlight class="keyword">false</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" kindref="member">Udp</ref>.begin(<ref refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" kindref="member">localPort</ref>);</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/><sp/>setSyncProvider(std::bind(&amp;<ref refid="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" kindref="member">CoolTime::getNtpTime</ref>,</highlight><highlight class="keyword">this</highlight><highlight class="normal">));</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(trust);</highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal">}</highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" kindref="member">CoolTime::update</ref>()</highlight></codeline>
<codeline lineno="55"><highlight class="normal">{</highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!this-&gt;<ref refid="classCoolTime_1a5ae038a4498602b189f76a10bf02adf8" kindref="member">isTimeSync</ref>()<sp/>)</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(timeStatus()<sp/>!=<sp/>timeNotSet<sp/>)</highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="60"><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1afa77d58c0c21cfe8b7c27e34d82f07b9" kindref="member">rtc</ref>.setDateTime(this-&gt;<ref refid="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" kindref="member">getNtpTime</ref>());</highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1a9d032e76c3470a15b3bbbc52af6463f7" kindref="member">timeSync</ref>=this-&gt;<ref refid="classCoolTime_1afa77d58c0c21cfe8b7c27e34d82f07b9" kindref="member">rtc</ref>.getTimestamp();</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1afa77d58c0c21cfe8b7c27e34d82f07b9" kindref="member">rtc</ref>.clearOSF();<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//since<sp/>the<sp/>sync<sp/>worked<sp/>fine<sp/>we<sp/>reset<sp/>eventual<sp/>error<sp/>flags<sp/>in<sp/>the<sp/>RTC</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="68"><highlight class="normal">}</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="classCoolTime_1ab81ea7fdaace111aa01cc1ec84c6d297" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCoolTime_1ab81ea7fdaace111aa01cc1ec84c6d297" kindref="member">CoolTime::setDateTime</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>year,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>month,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>day,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>hour,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minutes,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>seconds)</highlight></codeline>
<codeline lineno="76"><highlight class="normal">{</highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1afa77d58c0c21cfe8b7c27e34d82f07b9" kindref="member">rtc</ref>.setDateTime(<sp/>year,<sp/><sp/>month,<sp/><sp/>day,<sp/><sp/>hour,<sp/><sp/>minutes,<sp/><sp/>seconds);<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//set<sp/>RTC<sp/>to<sp/>new<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal">}</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="classCoolTime_1a52a1503ad5cb540c71c44cfeceaead8a" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCoolTime_1a52a1503ad5cb540c71c44cfeceaead8a" kindref="member">CoolTime::getTimeDate</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;year,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;month,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;day,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;hour,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;minute,<sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>&amp;second)</highlight></codeline>
<codeline lineno="88"><highlight class="normal">{<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="89"><highlight class="normal"><sp/>DS1337::getTime(<ref refid="classCoolTime_1afa77d58c0c21cfe8b7c27e34d82f07b9" kindref="member">rtc</ref>.getTimestamp(),<sp/><sp/>year,<sp/><sp/>month,<sp/><sp/>day,<sp/><sp/>hour,<sp/><sp/>minute,<sp/><sp/>second);</highlight></codeline>
<codeline lineno="90"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal">}</highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight></codeline>
<codeline lineno="102" refid="classCoolTime_1a5d17f707a9d337720493b2bce9d41c21" refkind="member"><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/><ref refid="classCoolTime_1a5d17f707a9d337720493b2bce9d41c21" kindref="member">CoolTime::getLastSyncTime</ref>()</highlight></codeline>
<codeline lineno="103"><highlight class="normal">{</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(this-&gt;<ref refid="classCoolTime_1a9d032e76c3470a15b3bbbc52af6463f7" kindref="member">timeSync</ref>);</highlight></codeline>
<codeline lineno="105"><highlight class="normal">}</highlight></codeline>
<codeline lineno="106"><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="117" refid="classCoolTime_1a5ae038a4498602b189f76a10bf02adf8" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCoolTime_1a5ae038a4498602b189f76a10bf02adf8" kindref="member">CoolTime::isTimeSync</ref>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>seconds)</highlight></codeline>
<codeline lineno="118"><highlight class="normal">{</highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="comment">//default<sp/>is<sp/>once<sp/>per<sp/>week<sp/>we<sp/>try<sp/>to<sp/>get<sp/>a<sp/>time<sp/>update</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(this-&gt;<ref refid="classCoolTime_1a5d17f707a9d337720493b2bce9d41c21" kindref="member">getLastSyncTime</ref>()<sp/>+<sp/>seconds<sp/>&lt;<sp/><ref refid="classCoolTime_1afa77d58c0c21cfe8b7c27e34d82f07b9" kindref="member">rtc</ref>.getTimestamp())<sp/></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="126"><highlight class="normal">}</highlight></codeline>
<codeline lineno="127"><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"></highlight></codeline>
<codeline lineno="137" refid="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" refkind="member"><highlight class="normal">time_t<sp/><ref refid="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" kindref="member">CoolTime::getNtpTime</ref>()</highlight></codeline>
<codeline lineno="138"><highlight class="normal">{</highlight></codeline>
<codeline lineno="139"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(<ref refid="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" kindref="member">Udp</ref>.parsePacket()<sp/>&gt;<sp/>0)<sp/>;<sp/></highlight><highlight class="comment">//<sp/>discard<sp/>any<sp/>previously<sp/>received<sp/>packets</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1a236a38d120dc53bc67456d763838c5a1" kindref="member">sendNTPpacket</ref>(<ref refid="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" kindref="member">timeServer</ref>);</highlight></codeline>
<codeline lineno="142"><highlight class="normal"><sp/><sp/><sp/><sp/>uint32_t<sp/>beginWait<sp/>=<sp/>millis();</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">while</highlight><highlight class="normal"><sp/>(millis()<sp/>-<sp/>beginWait<sp/>&lt;<sp/>1500)<sp/></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>this-&gt;<ref refid="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" kindref="member">Udp</ref>.parsePacket();</highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(size<sp/>&gt;=<sp/><ref refid="CoolTime_8h_1a56a6ea64006651b4f42adf713e244f06" kindref="member">NTP_PACKET_SIZE</ref>)<sp/></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" kindref="member">Udp</ref>.read(<ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>,<sp/><ref refid="CoolTime_8h_1a56a6ea64006651b4f42adf713e244f06" kindref="member">NTP_PACKET_SIZE</ref>);<sp/><sp/></highlight><highlight class="comment">//<sp/>read<sp/>packet<sp/>into<sp/>the<sp/>buffer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">long</highlight><highlight class="normal"><sp/>secsSince1900;</highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>convert<sp/>four<sp/>bytes<sp/>starting<sp/>at<sp/>location<sp/>40<sp/>to<sp/>a<sp/>long<sp/>integer</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secsSince1900<sp/>=<sp/><sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[40]<sp/>&lt;&lt;<sp/>24;</highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secsSince1900<sp/>|=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[41]<sp/>&lt;&lt;<sp/>16;</highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secsSince1900<sp/>|=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[42]<sp/>&lt;&lt;<sp/>8;</highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>secsSince1900<sp/>|=<sp/>(</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/>long)<ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[43];</highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>secsSince1900<sp/>-<sp/>2208988800UL;</highlight></codeline>
<codeline lineno="156"><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="160"><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>0;<sp/></highlight><highlight class="comment">//<sp/>return<sp/>0<sp/>if<sp/>unable<sp/>to<sp/>get<sp/>the<sp/>time</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal">}</highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight></codeline>
<codeline lineno="169" refid="classCoolTime_1a236a38d120dc53bc67456d763838c5a1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCoolTime_1a236a38d120dc53bc67456d763838c5a1" kindref="member">CoolTime::sendNTPpacket</ref>(IPAddress<sp/>&amp;address)</highlight></codeline>
<codeline lineno="170"><highlight class="normal">{</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>set<sp/>all<sp/>bytes<sp/>in<sp/>the<sp/>buffer<sp/>to<sp/>0</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><sp/>memset(<ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>,<sp/>0,<sp/><ref refid="CoolTime_8h_1a56a6ea64006651b4f42adf713e244f06" kindref="member">NTP_PACKET_SIZE</ref>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Initialize<sp/>values<sp/>needed<sp/>to<sp/>form<sp/>NTP<sp/>request</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[0]<sp/>=<sp/>0b11100011;<sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>LI,<sp/>Version,<sp/>Mode</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[1]<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Stratum,<sp/>or<sp/>type<sp/>of<sp/>clock</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[2]<sp/>=<sp/>6;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Polling<sp/>Interval</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[3]<sp/>=<sp/>0xEC;<sp/><sp/></highlight><highlight class="comment">//<sp/>Peer<sp/>Clock<sp/>Precision</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>8<sp/>bytes<sp/>of<sp/>zero<sp/>for<sp/>Root<sp/>Delay<sp/>&amp;<sp/>Root<sp/>Dispersion</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[12]<sp/><sp/>=<sp/>49;</highlight></codeline>
<codeline lineno="181"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[13]<sp/><sp/>=<sp/>0x4E;</highlight></codeline>
<codeline lineno="182"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[14]<sp/><sp/>=<sp/>49;</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>[15]<sp/><sp/>=<sp/>52;</highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>all<sp/>NTP<sp/>fields<sp/>have<sp/>been<sp/>given<sp/>values,<sp/>now</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="185"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>you<sp/>can<sp/>send<sp/>a<sp/>packet<sp/>requesting<sp/>a<sp/>timestamp:<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" kindref="member">Udp</ref>.beginPacket(address,<sp/>123);<sp/></highlight><highlight class="comment">//NTP<sp/>requests<sp/>are<sp/>to<sp/>port<sp/>123</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" kindref="member">Udp</ref>.write(<ref refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" kindref="member">packetBuffer</ref>,<sp/><ref refid="CoolTime_8h_1a56a6ea64006651b4f42adf713e244f06" kindref="member">NTP_PACKET_SIZE</ref>);</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><sp/><ref refid="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" kindref="member">Udp</ref>.endPacket();</highlight></codeline>
<codeline lineno="189"><highlight class="normal">}</highlight></codeline>
<codeline lineno="190"><highlight class="normal"></highlight></codeline>
<codeline lineno="196" refid="classCoolTime_1ae5528ed0ba9e78c711084968054950e0" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCoolTime_1a87c28260c1bc77091162cbcf1ee2e129" kindref="member">CoolTime::config</ref>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>timeZone,IPAddress<sp/>timeServer,</highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>localPort)</highlight></codeline>
<codeline lineno="197"><highlight class="normal">{</highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timeZone=<ref refid="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" kindref="member">timeZone</ref>;</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;timeServer=<ref refid="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" kindref="member">timeServer</ref>;</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/>this-&gt;localPort=<ref refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" kindref="member">localPort</ref>;</highlight></codeline>
<codeline lineno="201"><highlight class="normal">}<sp/></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="classCoolTime_1a87c28260c1bc77091162cbcf1ee2e129" refkind="member"><highlight class="keywordtype">bool</highlight><highlight class="normal"><sp/><ref refid="classCoolTime_1a87c28260c1bc77091162cbcf1ee2e129" kindref="member">CoolTime::config</ref>()</highlight></codeline>
<codeline lineno="212"><highlight class="normal">{</highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/><sp/>File<sp/>rtcConfig<sp/>=<sp/>SPIFFS.open(</highlight><highlight class="stringliteral">&quot;/rtcConfig.json&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;r&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!rtcConfig)<sp/></highlight></codeline>
<codeline lineno="216"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>size<sp/>=<sp/>rtcConfig.size();</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">//<sp/>Allocate<sp/>a<sp/>buffer<sp/>to<sp/>store<sp/>contents<sp/>of<sp/>the<sp/>file.</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>std::unique_ptr&lt;char[]&gt;<sp/>buf(</highlight><highlight class="keyword">new</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">[size]);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtcConfig.readBytes(buf.get(),<sp/>size);</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>DynamicJsonBuffer<sp/>jsonBuffer;</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>JsonObject&amp;<sp/>json<sp/>=<sp/>jsonBuffer.parseObject(buf.get());</highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(!json.success())<sp/></highlight></codeline>
<codeline lineno="229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="230"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/></highlight></codeline>
<codeline lineno="232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/>String<sp/>ip;</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(json[</highlight><highlight class="stringliteral">&quot;timeZone&quot;</highlight><highlight class="normal">].success()<sp/>)</highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" kindref="member">timeZone</ref>=json[</highlight><highlight class="stringliteral">&quot;timeZone&quot;</highlight><highlight class="normal">]<sp/>;</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" kindref="member">timeZone</ref>=this-&gt;<ref refid="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" kindref="member">timeZone</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="243"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json[</highlight><highlight class="stringliteral">&quot;timeZone&quot;</highlight><highlight class="normal">]=this-&gt;<ref refid="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" kindref="member">timeZone</ref>;</highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(json[</highlight><highlight class="stringliteral">&quot;timeServer&quot;</highlight><highlight class="normal">].success()<sp/>)</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ip=json[</highlight><highlight class="stringliteral">&quot;timeServer&quot;</highlight><highlight class="normal">].as&lt;String&gt;();</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" kindref="member">timeServer</ref>.fromString(ip);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="251"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" kindref="member">timeServer</ref>=this-&gt;<ref refid="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" kindref="member">timeServer</ref>;</highlight></codeline>
<codeline lineno="254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json[</highlight><highlight class="stringliteral">&quot;timeServer&quot;</highlight><highlight class="normal">]=ip;</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(json[</highlight><highlight class="stringliteral">&quot;localPort&quot;</highlight><highlight class="normal">].success()<sp/>)</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" kindref="member">localPort</ref>=json[</highlight><highlight class="stringliteral">&quot;localPort&quot;</highlight><highlight class="normal">];</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="261"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>this-&gt;<ref refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" kindref="member">localPort</ref>=this-&gt;<ref refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" kindref="member">localPort</ref>;</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json[</highlight><highlight class="stringliteral">&quot;localPort&quot;</highlight><highlight class="normal">]=this-&gt;<ref refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" kindref="member">localPort</ref>;</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtcConfig.close();</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtcConfig=<sp/>SPIFFS.open(</highlight><highlight class="stringliteral">&quot;/rtcConfig.json&quot;</highlight><highlight class="normal">,<sp/></highlight><highlight class="stringliteral">&quot;w&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(!rtcConfig)</highlight></codeline>
<codeline lineno="271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">false</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="275"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>json.printTo(rtcConfig);</highlight></codeline>
<codeline lineno="276"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rtcConfig.close();</highlight></codeline>
<codeline lineno="277"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal">(</highlight><highlight class="keyword">true</highlight><highlight class="normal">);<sp/></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/></highlight></codeline>
<codeline lineno="281"><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal">}</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="292" refid="classCoolTime_1af355e7f9b3898211cd2ff25eab5933b1" refkind="member"><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="classCoolTime_1af355e7f9b3898211cd2ff25eab5933b1" kindref="member">CoolTime::printConf</ref>()</highlight></codeline>
<codeline lineno="293"><highlight class="normal">{</highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(</highlight><highlight class="stringliteral">&quot;RTC<sp/>Config&quot;</highlight><highlight class="normal">)<sp/>;</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(<ref refid="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" kindref="member">timeZone</ref>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(<ref refid="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" kindref="member">timeServer</ref>);</highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/><sp/>Serial.println(<ref refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" kindref="member">localPort</ref>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal">}</highlight></codeline>
    </programlisting>
    <location file="CoolTime.cpp"/>
  </compounddef>
</doxygen>
