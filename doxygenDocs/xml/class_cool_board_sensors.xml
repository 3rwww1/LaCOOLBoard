<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_cool_board_sensors" kind="class" language="C++" prot="public">
    <compoundname>CoolBoardSensors</compoundname>
    <includes refid="_cool_board_sensors_8h" local="no">CoolBoardSensors.h</includes>
    <innerclass refid="struct_cool_board_sensors_1_1air_active" prot="private">CoolBoardSensors::airActive</innerclass>
    <innerclass refid="struct_cool_board_sensors_1_1light_active" prot="private">CoolBoardSensors::lightActive</innerclass>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="class_cool_board_sensors_1a3e397300fb707dd193e909a757bf6102" prot="public" static="no" mutable="no">
        <type>SI114X</type>
        <definition>SI114X CoolBoardSensors::lightSensor</definition>
        <argsstring></argsstring>
        <name>lightSensor</name>
        <initializer>= SI114X()</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="75" column="1" bodyfile="CoolBoardSensors.h" bodystart="75" bodyend="-1"/>
        <referencedby refid="class_cool_board_sensors_1a97095823ef7c8f5290812f1405b966b3" compoundref="_cool_board_sensors_8cpp" startline="85" endline="101">begin</referencedby>
        <referencedby refid="class_cool_board_sensors_1a4902b69f6e628bd6557193758fdd2bae" compoundref="_cool_board_sensors_8cpp" startline="108" endline="113">end</referencedby>
        <referencedby refid="class_cool_board_sensors_1a91badb2539d91fda8679f2a597874c48" compoundref="_cool_board_sensors_8cpp" startline="123" endline="185">read</referencedby>
      </memberdef>
      <memberdef kind="variable" id="class_cool_board_sensors_1a868e38985e9a2412829fa2790ca13e2e" prot="public" static="no" mutable="no">
        <type>BME280</type>
        <definition>BME280 CoolBoardSensors::envSensor</definition>
        <argsstring></argsstring>
        <name>envSensor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="77" column="1" bodyfile="CoolBoardSensors.h" bodystart="77" bodyend="-1"/>
        <referencedby refid="class_cool_board_sensors_1a97095823ef7c8f5290812f1405b966b3" compoundref="_cool_board_sensors_8cpp" startline="85" endline="101">begin</referencedby>
        <referencedby refid="class_cool_board_sensors_1a91badb2539d91fda8679f2a597874c48" compoundref="_cool_board_sensors_8cpp" startline="123" endline="185">read</referencedby>
        <referencedby refid="class_cool_board_sensors_1a406307ffd70272282d91479c7ed8d66f" compoundref="_cool_board_sensors_8cpp" startline="390" endline="412">setEnvSensorSettings</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="class_cool_board_sensors_1ac4deb1cf41bac8b91c780c92fab00ba4" prot="private" static="no" mutable="no">
        <type>struct CoolBoardSensors::lightActive</type>
        <definition>struct CoolBoardSensors::lightActive CoolBoardSensors::lightDataActive</definition>
        <argsstring></argsstring>
        <name>lightDataActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="87" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cool_board_sensors_1abff8dfeccb2f7689847bb64d5f1cd31e" prot="private" static="no" mutable="no">
        <type>struct CoolBoardSensors::airActive</type>
        <definition>struct CoolBoardSensors::airActive CoolBoardSensors::airDataActive</definition>
        <argsstring></argsstring>
        <name>airDataActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="98" column="1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cool_board_sensors_1a6177d02e14a057a2f171a2e930b5038d" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int CoolBoardSensors::EnMoisture</definition>
        <argsstring></argsstring>
        <name>EnMoisture</name>
        <initializer>= 13</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="100" column="1" bodyfile="CoolBoardSensors.h" bodystart="100" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cool_board_sensors_1a12ef28b1046219e0aee10bf64e28c4a5" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int CoolBoardSensors::AnMplex</definition>
        <argsstring></argsstring>
        <name>AnMplex</name>
        <initializer>= 12</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="101" column="1" bodyfile="CoolBoardSensors.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cool_board_sensors_1aaa6b5dbf3a6633bffd9d204d961096dc" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int CoolBoardSensors::EnI2C</definition>
        <argsstring></argsstring>
        <name>EnI2C</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="102" column="1" bodyfile="CoolBoardSensors.h" bodystart="102" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cool_board_sensors_1af5039ad760b0ff0aa7eee16c55e81702" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte CoolBoardSensors::vbatActive</definition>
        <argsstring></argsstring>
        <name>vbatActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="104" column="1" bodyfile="CoolBoardSensors.h" bodystart="104" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cool_board_sensors_1a46dfddb8a12720e92cd2825ef09023c8" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte CoolBoardSensors::earthMoistureActive</definition>
        <argsstring></argsstring>
        <name>earthMoistureActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="105" column="1" bodyfile="CoolBoardSensors.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="class_cool_board_sensors_1a05a40dc80bfff14ffb830f549b876f8d" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CoolBoardSensors::jsonSize</definition>
        <argsstring></argsstring>
        <name>jsonSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="107" column="1" bodyfile="CoolBoardSensors.h" bodystart="107" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cool_board_sensors_1a91ff2a02f5486f90cf2413a1cf8a9ed4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CoolBoardSensors::CoolBoardSensors</definition>
        <argsstring>()</argsstring>
        <name>CoolBoardSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1a91ff2a02f5486f90cf2413a1cf8a9ed4" kindref="member">CoolBoardSensors::CoolBoardSensors()</ref>: This Constructor is provided to start the I2C interface and Init the different used pins </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="30" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="23" bodyend="32"/>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1a97095823ef7c8f5290812f1405b966b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoardSensors::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1a97095823ef7c8f5290812f1405b966b3" kindref="member">CoolBoardSensors::begin()</ref>: This method is provided to start the sensors that are on the sensor board </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="34" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="85" bodyend="101"/>
        <references refid="class_cool_board_sensors_1acad6a8418c66d36868caca23c844ecb6" compoundref="_cool_board_sensors_8cpp" startline="192" endline="197">initReadI2C</references>
        <references refid="class_cool_board_sensors_1a3e397300fb707dd193e909a757bf6102" compoundref="_cool_board_sensors_8h" startline="75">lightSensor</references>
        <references refid="class_cool_board_sensors_1a406307ffd70272282d91479c7ed8d66f" compoundref="_cool_board_sensors_8cpp" startline="390" endline="412">setEnvSensorSettings</references>
        <references refid="class_cool_board_sensors_1a868e38985e9a2412829fa2790ca13e2e" compoundref="_cool_board_sensors_8h" startline="77">envSensor</references>
        <referencedby refid="class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="_cool_board_8cpp" startline="24" endline="67">CoolBoard::begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1a91badb2539d91fda8679f2a597874c48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String CoolBoardSensors::read</definition>
        <argsstring>()</argsstring>
        <name>read</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1a91badb2539d91fda8679f2a597874c48" kindref="member">CoolBoardSensors::read()</ref>: This method is provided to return the data read by the sensor board</para><para><simplesect kind="return"><para>a json string containing the sensors data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="39" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="123" bodyend="185"/>
        <references refid="class_cool_board_sensors_1acad6a8418c66d36868caca23c844ecb6" compoundref="_cool_board_sensors_8cpp" startline="192" endline="197">initReadI2C</references>
        <references refid="class_cool_board_sensors_1a3e397300fb707dd193e909a757bf6102" compoundref="_cool_board_sensors_8h" startline="75">lightSensor</references>
        <references refid="class_cool_board_sensors_1a868e38985e9a2412829fa2790ca13e2e" compoundref="_cool_board_sensors_8h" startline="77">envSensor</references>
        <references refid="class_cool_board_sensors_1a6944b6ea7bce8e2fce1b434acfd9d5f3" compoundref="_cool_board_sensors_8cpp" startline="422" endline="433">readVBat</references>
        <references refid="class_cool_board_sensors_1a8761bff50373c485f4465c8db47d0633" compoundref="_cool_board_sensors_8cpp" startline="443" endline="458">readMoisture</references>
        <referencedby refid="class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="_cool_board_8cpp" startline="105" endline="151">CoolBoard::onLineMode</referencedby>
        <referencedby refid="class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="_cool_board_8cpp" startline="160" endline="180">CoolBoard::offLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1ab82c2a1633768ccd12a589320fa31a14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CoolBoardSensors::getJsonSize</definition>
        <argsstring>()</argsstring>
        <name>getJsonSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1ab82c2a1633768ccd12a589320fa31a14" kindref="member">CoolBoardSensors::getJsonSize()</ref>: This method is provided to get the sensor board answer size</para><para><simplesect kind="return"><para>json data size </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="41" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="41" bodyend="44"/>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1ab76e6dbd6efbcc25ff460535badd8d45" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoardSensors::setJsonSize</definition>
        <argsstring>(int jsonSize)</argsstring>
        <name>setJsonSize</name>
        <param>
          <type>int</type>
          <declname>jsonSize</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolBoardSensors::setJsonSize( JSON size): This method is provided to set the sensor board answer size </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="42" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="51" bodyend="54"/>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1aa432c5aac88f89c31a10766390f23e0b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoardSensors::allActive</definition>
        <argsstring>()</argsstring>
        <name>allActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1aa432c5aac88f89c31a10766390f23e0b" kindref="member">CoolBoardSensors::allActive()</ref>: This method is provided to allow activation of all the sensor board sensors without passing by the configuration file/method </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="43" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="62" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1acad6a8418c66d36868caca23c844ecb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoardSensors::initReadI2C</definition>
        <argsstring>()</argsstring>
        <name>initReadI2C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1acad6a8418c66d36868caca23c844ecb6" kindref="member">CoolBoardSensors::initReadI2C()</ref>: This method is provided to enable the I2C Interface on the sensor board. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="45" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="192" bodyend="197"/>
        <referencedby refid="class_cool_board_sensors_1a97095823ef7c8f5290812f1405b966b3" compoundref="_cool_board_sensors_8cpp" startline="85" endline="101">begin</referencedby>
        <referencedby refid="class_cool_board_sensors_1a91badb2539d91fda8679f2a597874c48" compoundref="_cool_board_sensors_8cpp" startline="123" endline="185">read</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1ab67b900b9e5e7c18d52d2d9107ba171b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoardSensors::stopReadI2C</definition>
        <argsstring>()</argsstring>
        <name>stopReadI2C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1ab67b900b9e5e7c18d52d2d9107ba171b" kindref="member">CoolBoardSensors::stopReadI2C()</ref>: This method is provided to disable the I2C Interface on the sensor board </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="47" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="204" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1a4902b69f6e628bd6557193758fdd2bae" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoardSensors::end</definition>
        <argsstring>()</argsstring>
        <name>end</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1a4902b69f6e628bd6557193758fdd2bae" kindref="member">CoolBoardSensors::end()</ref>: This method is provided to end the sensors on the sensor board </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="50" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="108" bodyend="113"/>
        <references refid="class_cool_board_sensors_1a3e397300fb707dd193e909a757bf6102" compoundref="_cool_board_sensors_8h" startline="75">lightSensor</references>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1a9a218895c5423375c33c08f2c56fb23a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolBoardSensors::config</definition>
        <argsstring>()</argsstring>
        <name>config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1a9a218895c5423375c33c08f2c56fb23a" kindref="member">CoolBoardSensors::config()</ref>: This method is provided to configure the sensor board : -activate 1 -deactivate 0</para><para><simplesect kind="return"><para>true if configuration is successful, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="52" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="221" bodyend="359"/>
        <referencedby refid="class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="_cool_board_8cpp" startline="24" endline="67">CoolBoard::begin</referencedby>
        <referencedby refid="class_cool_board_1a8612756d3f73198cdde857a66f0fe690" compoundref="_cool_board_8cpp" startline="339" endline="382">CoolBoard::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1af6fd79505815b204c178617ecf54c873" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoardSensors::printConf</definition>
        <argsstring>()</argsstring>
        <name>printConf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1af6fd79505815b204c178617ecf54c873" kindref="member">CoolBoardSensors::printConf()</ref>: This method is provided to print the configuration to the Serial Monitor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="53" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="367" bodyend="381"/>
        <referencedby refid="class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="_cool_board_8cpp" startline="24" endline="67">CoolBoard::begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1a406307ffd70272282d91479c7ed8d66f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoardSensors::setEnvSensorSettings</definition>
        <argsstring>(uint8_t commInterface=I2C_MODE, uint8_t I2CAddress=0x76, uint8_t runMode=3, uint8_t tStandby=0, uint8_t filter=0, uint8_t tempOverSample=1, uint8_t pressOverSample=1, uint8_t humidOverSample=1)</argsstring>
        <name>setEnvSensorSettings</name>
        <param>
          <type>uint8_t</type>
          <declname>commInterface</declname>
          <defval>I2C_MODE</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>I2CAddress</declname>
          <defval>0x76</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>runMode</declname>
          <defval>3</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tStandby</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>filter</declname>
          <defval>0</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>tempOverSample</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>pressOverSample</declname>
          <defval>1</defval>
        </param>
        <param>
          <type>uint8_t</type>
          <declname>humidOverSample</declname>
          <defval>1</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolBoardSensors::setEnvSensorSetting(): This method is provided to set the enviornment sensor settings , if argument is ommitted , default value will be assigned </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="60" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="390" bodyend="412"/>
        <references refid="class_cool_board_sensors_1a868e38985e9a2412829fa2790ca13e2e" compoundref="_cool_board_sensors_8h" startline="77">envSensor</references>
        <referencedby refid="class_cool_board_sensors_1a97095823ef7c8f5290812f1405b966b3" compoundref="_cool_board_sensors_8cpp" startline="85" endline="101">begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1a6944b6ea7bce8e2fce1b434acfd9d5f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float CoolBoardSensors::readVBat</definition>
        <argsstring>()</argsstring>
        <name>readVBat</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1a6944b6ea7bce8e2fce1b434acfd9d5f3" kindref="member">CoolBoardSensors::readVBat()</ref>: This method is provided to read the Battery Voltage.</para><para><simplesect kind="return"><para>a float representing the battery voltage </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="68" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="422" bodyend="433"/>
        <referencedby refid="class_cool_board_sensors_1a91badb2539d91fda8679f2a597874c48" compoundref="_cool_board_sensors_8cpp" startline="123" endline="185">read</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cool_board_sensors_1a8761bff50373c485f4465c8db47d0633" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>float</type>
        <definition>float CoolBoardSensors::readMoisture</definition>
        <argsstring>()</argsstring>
        <name>readMoisture</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_board_sensors_1a8761bff50373c485f4465c8db47d0633" kindref="member">CoolBoardSensors::readMoisture()</ref>: This method is provided to red the Soil Moisture</para><para><simplesect kind="return"><para>a float represnting the soil moisture </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoardSensors.h" line="72" column="1" bodyfile="CoolBoardSensors.cpp" bodystart="443" bodyend="458"/>
        <referencedby refid="class_cool_board_sensors_1a91badb2539d91fda8679f2a597874c48" compoundref="_cool_board_sensors_8cpp" startline="123" endline="185">read</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class handles the On-Board Sensors. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="CoolBoardSensors.h" line="25" column="1" bodyfile="CoolBoardSensors.h" bodystart="24" bodyend="108"/>
    <listofallmembers>
      <member refid="class_cool_board_sensors_1abff8dfeccb2f7689847bb64d5f1cd31e" prot="private" virt="non-virtual"><scope>CoolBoardSensors</scope><name>airDataActive</name></member>
      <member refid="class_cool_board_sensors_1aa432c5aac88f89c31a10766390f23e0b" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>allActive</name></member>
      <member refid="class_cool_board_sensors_1a12ef28b1046219e0aee10bf64e28c4a5" prot="private" virt="non-virtual"><scope>CoolBoardSensors</scope><name>AnMplex</name></member>
      <member refid="class_cool_board_sensors_1a97095823ef7c8f5290812f1405b966b3" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>begin</name></member>
      <member refid="class_cool_board_sensors_1a9a218895c5423375c33c08f2c56fb23a" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>config</name></member>
      <member refid="class_cool_board_sensors_1a91ff2a02f5486f90cf2413a1cf8a9ed4" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>CoolBoardSensors</name></member>
      <member refid="class_cool_board_sensors_1a46dfddb8a12720e92cd2825ef09023c8" prot="private" virt="non-virtual"><scope>CoolBoardSensors</scope><name>earthMoistureActive</name></member>
      <member refid="class_cool_board_sensors_1a4902b69f6e628bd6557193758fdd2bae" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>end</name></member>
      <member refid="class_cool_board_sensors_1aaa6b5dbf3a6633bffd9d204d961096dc" prot="private" virt="non-virtual"><scope>CoolBoardSensors</scope><name>EnI2C</name></member>
      <member refid="class_cool_board_sensors_1a6177d02e14a057a2f171a2e930b5038d" prot="private" virt="non-virtual"><scope>CoolBoardSensors</scope><name>EnMoisture</name></member>
      <member refid="class_cool_board_sensors_1a868e38985e9a2412829fa2790ca13e2e" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>envSensor</name></member>
      <member refid="class_cool_board_sensors_1ab82c2a1633768ccd12a589320fa31a14" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>getJsonSize</name></member>
      <member refid="class_cool_board_sensors_1acad6a8418c66d36868caca23c844ecb6" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>initReadI2C</name></member>
      <member refid="class_cool_board_sensors_1a05a40dc80bfff14ffb830f549b876f8d" prot="private" virt="non-virtual"><scope>CoolBoardSensors</scope><name>jsonSize</name></member>
      <member refid="class_cool_board_sensors_1ac4deb1cf41bac8b91c780c92fab00ba4" prot="private" virt="non-virtual"><scope>CoolBoardSensors</scope><name>lightDataActive</name></member>
      <member refid="class_cool_board_sensors_1a3e397300fb707dd193e909a757bf6102" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>lightSensor</name></member>
      <member refid="class_cool_board_sensors_1af6fd79505815b204c178617ecf54c873" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>printConf</name></member>
      <member refid="class_cool_board_sensors_1a91badb2539d91fda8679f2a597874c48" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>read</name></member>
      <member refid="class_cool_board_sensors_1a8761bff50373c485f4465c8db47d0633" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>readMoisture</name></member>
      <member refid="class_cool_board_sensors_1a6944b6ea7bce8e2fce1b434acfd9d5f3" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>readVBat</name></member>
      <member refid="class_cool_board_sensors_1a406307ffd70272282d91479c7ed8d66f" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>setEnvSensorSettings</name></member>
      <member refid="class_cool_board_sensors_1ab76e6dbd6efbcc25ff460535badd8d45" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>setJsonSize</name></member>
      <member refid="class_cool_board_sensors_1ab67b900b9e5e7c18d52d2d9107ba171b" prot="public" virt="non-virtual"><scope>CoolBoardSensors</scope><name>stopReadI2C</name></member>
      <member refid="class_cool_board_sensors_1af5039ad760b0ff0aa7eee16c55e81702" prot="private" virt="non-virtual"><scope>CoolBoardSensors</scope><name>vbatActive</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
