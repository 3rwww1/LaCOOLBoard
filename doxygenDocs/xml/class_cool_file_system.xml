<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="class_cool_file_system" kind="class" language="C++" prot="public">
    <compoundname>CoolFileSystem</compoundname>
    <includes refid="_cool_file_system_8h" local="no">CoolFileSystem.h</includes>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="class_cool_file_system_1a6ba6f666ed4c530174f8569d2c636748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolFileSystem::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="class_cool_file_system_1a6ba6f666ed4c530174f8569d2c636748" kindref="member">CoolFileSystem::begin()</ref>: This method is provided to start the SPIFFS object. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolFileSystem.h" line="23" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolFileSystem.cpp" bodystart="21" bodyend="25"/>
        <referencedby refid="class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="_cool_board_8cpp" startline="24" endline="67">CoolBoard::begin</referencedby>
        <referencedby refid="class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="_cool_board_8cpp" startline="193" endline="307">CoolBoard::config</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cool_file_system_1a32dad79ae80182a83e2e8f52286b7c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolFileSystem::updateConfigFiles</definition>
        <argsstring>(String answer, int JSON_SIZE)</argsstring>
        <name>updateConfigFiles</name>
        <param>
          <type>String</type>
          <declname>answer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>JSON_SIZE</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolFileSyste::updateConfigFiles( mqtt answer, answer size): This method is provided to update the configuration files when the appropriate mqtt answer is received: -update : 1 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolFileSystem.h" line="25" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolFileSystem.cpp" bodystart="54" bodyend="285"/>
        <references refid="_irene3000_8h_1a5905d48604152cf57aa6bfa087b49173" compoundref="_irene3000_8h" startline="22">temp</references>
        <referencedby refid="class_cool_board_1a8612756d3f73198cdde857a66f0fe690" compoundref="_cool_board_8cpp" startline="335" endline="378">CoolBoard::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="class_cool_file_system_1a4c560c2ddd40b74b7758e6ceb2c58957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolFileSystem::saveSensorData</definition>
        <argsstring>(const char *data, int Sensor_JSON_SIZE)</argsstring>
        <name>saveSensorData</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Sensor_JSON_SIZE</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolFileSystem::saveSensorData( data, data size ): This method is provided to save the data on the local memory when there is no internet available </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolFileSystem.h" line="27" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolFileSystem.cpp" bodystart="32" bodyend="47"/>
        <referencedby refid="class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="_cool_board_8cpp" startline="159" endline="179">CoolBoard::offLineMode</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolFileSystem.h" line="20" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolFileSystem.h" bodystart="19" bodyend="29"/>
    <listofallmembers>
      <member refid="class_cool_file_system_1a6ba6f666ed4c530174f8569d2c636748" prot="public" virt="non-virtual"><scope>CoolFileSystem</scope><name>begin</name></member>
      <member refid="class_cool_file_system_1a4c560c2ddd40b74b7758e6ceb2c58957" prot="public" virt="non-virtual"><scope>CoolFileSystem</scope><name>saveSensorData</name></member>
      <member refid="class_cool_file_system_1a32dad79ae80182a83e2e8f52286b7c7b" prot="public" virt="non-virtual"><scope>CoolFileSystem</scope><name>updateConfigFiles</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
