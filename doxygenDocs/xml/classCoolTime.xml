<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classCoolTime" kind="class" language="C++" prot="public">
    <compoundname>CoolTime</compoundname>
    <includes refid="CoolTime_8h" local="no">CoolTime.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCoolTime_1a9d032e76c3470a15b3bbbc52af6463f7" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CoolTime::timeSync</definition>
        <argsstring></argsstring>
        <name>timeSync</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="63" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" bodystart="63" bodyend="-1"/>
        <referencedby refid="classCoolTime_1a5d17f707a9d337720493b2bce9d41c21" compoundref="CoolTime_8cpp" startline="172" endline="181">getLastSyncTime</referencedby>
        <referencedby refid="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" compoundref="CoolTime_8cpp" startline="43" endline="58">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CoolTime::timeZone</definition>
        <argsstring></argsstring>
        <name>timeZone</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="65" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="classCoolTime_1ae5528ed0ba9e78c711084968054950e0" compoundref="CoolTime_8cpp" startline="295" endline="304">config</referencedby>
        <referencedby refid="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" compoundref="CoolTime_8cpp" startline="217" endline="259">getNtpTime</referencedby>
        <referencedby refid="classCoolTime_1af355e7f9b3898211cd2ff25eab5933b1" compoundref="CoolTime_8cpp" startline="416" endline="431">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" prot="private" static="no" mutable="no">
        <type>IPAddress</type>
        <definition>IPAddress CoolTime::timeServer</definition>
        <argsstring></argsstring>
        <name>timeServer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="67" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" bodystart="67" bodyend="-1"/>
        <referencedby refid="classCoolTime_1ae5528ed0ba9e78c711084968054950e0" compoundref="CoolTime_8cpp" startline="295" endline="304">config</referencedby>
        <referencedby refid="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" compoundref="CoolTime_8cpp" startline="217" endline="259">getNtpTime</referencedby>
        <referencedby refid="classCoolTime_1af355e7f9b3898211cd2ff25eab5933b1" compoundref="CoolTime_8cpp" startline="416" endline="431">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" prot="private" static="no" mutable="no">
        <type>WiFiUDP</type>
        <definition>WiFiUDP CoolTime::Udp</definition>
        <argsstring></argsstring>
        <name>Udp</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="69" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" bodystart="69" bodyend="-1"/>
        <referencedby refid="classCoolTime_1ab1976cf718b950bc31e003c3323b8adb" compoundref="CoolTime_8cpp" startline="29" endline="36">begin</referencedby>
        <referencedby refid="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" compoundref="CoolTime_8cpp" startline="217" endline="259">getNtpTime</referencedby>
        <referencedby refid="classCoolTime_1a236a38d120dc53bc67456d763838c5a1" compoundref="CoolTime_8cpp" startline="266" endline="288">sendNTPpacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" prot="private" static="no" mutable="no">
        <type>unsigned int</type>
        <definition>unsigned int CoolTime::localPort</definition>
        <argsstring></argsstring>
        <name>localPort</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="71" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" bodystart="71" bodyend="-1"/>
        <referencedby refid="classCoolTime_1ab1976cf718b950bc31e003c3323b8adb" compoundref="CoolTime_8cpp" startline="29" endline="36">begin</referencedby>
        <referencedby refid="classCoolTime_1ae5528ed0ba9e78c711084968054950e0" compoundref="CoolTime_8cpp" startline="295" endline="304">config</referencedby>
        <referencedby refid="classCoolTime_1af355e7f9b3898211cd2ff25eab5933b1" compoundref="CoolTime_8cpp" startline="416" endline="431">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte CoolTime::packetBuffer[NTP_PACKET_SIZE]</definition>
        <argsstring>[NTP_PACKET_SIZE]</argsstring>
        <name>packetBuffer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="73" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" bodystart="73" bodyend="-1"/>
        <referencedby refid="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" compoundref="CoolTime_8cpp" startline="217" endline="259">getNtpTime</referencedby>
        <referencedby refid="classCoolTime_1a236a38d120dc53bc67456d763838c5a1" compoundref="CoolTime_8cpp" startline="266" endline="288">sendNTPpacket</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolTime_1ad33c2713c903ff064ad09c46406ae088" prot="private" static="no" mutable="no">
        <type>tmElements_t</type>
        <definition>tmElements_t CoolTime::tmSet</definition>
        <argsstring></argsstring>
        <name>tmSet</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="75" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" bodystart="75" bodyend="-1"/>
        <referencedby refid="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" compoundref="CoolTime_8cpp" startline="43" endline="58">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolTime_1abd38f2384ff90692b1568d9db869412e" prot="private" static="no" mutable="no">
        <type>DS1337RTC</type>
        <definition>DS1337RTC CoolTime::rtc</definition>
        <argsstring></argsstring>
        <name>rtc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="77" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" bodystart="77" bodyend="-1"/>
        <referencedby refid="classCoolTime_1a7a7501c5ca77dd1248bea704c44f986c" compoundref="CoolTime_8cpp" startline="109" endline="133">getTimeDate</referencedby>
        <referencedby refid="classCoolTime_1ab81ea7fdaace111aa01cc1ec84c6d297" compoundref="CoolTime_8cpp" startline="65" endline="100">setDateTime</referencedby>
        <referencedby refid="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" compoundref="CoolTime_8cpp" startline="43" endline="58">update</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCoolTime_1ab1976cf718b950bc31e003c3323b8adb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolTime::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolTime_1ab1976cf718b950bc31e003c3323b8adb" kindref="member">CoolTime::begin()</ref>: This method is provided to init the udp connection </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="35" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="29" bodyend="36"/>
        <references refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" compoundref="CoolTime_8h" startline="71">localPort</references>
        <references refid="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" compoundref="CoolTime_8h" startline="69">Udp</references>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="21" endline="74">CoolBoard::begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolTime::update</definition>
        <argsstring>()</argsstring>
        <name>update</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" kindref="member">CoolTime::update()</ref>: This method is provided to correct the rtc Time when it drifts,once every week. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="37" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="43" bodyend="58"/>
        <references refid="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" compoundref="CoolTime_8cpp" startline="217" endline="259">getNtpTime</references>
        <references refid="classCoolTime_1a5ae038a4498602b189f76a10bf02adf8" compoundref="CoolTime_8cpp" startline="193" endline="206">isTimeSync</references>
        <references refid="classCoolTime_1abd38f2384ff90692b1568d9db869412e" compoundref="CoolTime_8h" startline="77">rtc</references>
        <references refid="classCoolTime_1a9d032e76c3470a15b3bbbc52af6463f7" compoundref="CoolTime_8h" startline="63">timeSync</references>
        <references refid="classCoolTime_1ad33c2713c903ff064ad09c46406ae088" compoundref="CoolTime_8h" startline="75">tmSet</references>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="134" endline="259">CoolBoard::onLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1a87c28260c1bc77091162cbcf1ee2e129" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolTime::config</definition>
        <argsstring>()</argsstring>
        <name>config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolTime_1a87c28260c1bc77091162cbcf1ee2e129" kindref="member">CoolTime::config()</ref>: This method is provided to configure the <ref refid="classCoolTime" kindref="compound">CoolTime</ref> object through a configuration file.</para><para><simplesect kind="return"><para>true if successful,false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="39" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="314" bodyend="408"/>
        <references refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" compoundref="CoolTime_8h" startline="71">localPort</references>
        <references refid="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" compoundref="CoolTime_8h" startline="67">timeServer</references>
        <references refid="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" compoundref="CoolTime_8h" startline="65">timeZone</references>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="21" endline="74">CoolBoard::begin</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="534" endline="635">CoolBoard::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1ae5528ed0ba9e78c711084968054950e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolTime::config</definition>
        <argsstring>(int timeZone, IPAddress timeServer, unsigned int localPort)</argsstring>
        <name>config</name>
        <param>
          <type>int</type>
          <declname>timeZone</declname>
        </param>
        <param>
          <type>IPAddress</type>
          <declname>timeServer</declname>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>localPort</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolTime::config(time Zone, Time server IP , udp Port): This method is provided to do manual configuration. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="41" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="295" bodyend="304"/>
        <references refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" compoundref="CoolTime_8h" startline="71">localPort</references>
        <references refid="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" compoundref="CoolTime_8h" startline="67">timeServer</references>
        <references refid="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" compoundref="CoolTime_8h" startline="65">timeZone</references>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1af355e7f9b3898211cd2ff25eab5933b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolTime::printConf</definition>
        <argsstring>()</argsstring>
        <name>printConf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolTime_1af355e7f9b3898211cd2ff25eab5933b1" kindref="member">CoolTime::printConf()</ref>: This method is provided to print the <ref refid="classCoolTime" kindref="compound">CoolTime</ref> configuration to the Serial Monitor </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="43" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="416" bodyend="431"/>
        <references refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" compoundref="CoolTime_8h" startline="71">localPort</references>
        <references refid="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" compoundref="CoolTime_8h" startline="67">timeServer</references>
        <references refid="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" compoundref="CoolTime_8h" startline="65">timeZone</references>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="21" endline="74">CoolBoard::begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1ab81ea7fdaace111aa01cc1ec84c6d297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolTime::setDateTime</definition>
        <argsstring>(int year, int month, int day, int hour, int minutes, int seconds)</argsstring>
        <name>setDateTime</name>
        <param>
          <type>int</type>
          <declname>year</declname>
        </param>
        <param>
          <type>int</type>
          <declname>month</declname>
        </param>
        <param>
          <type>int</type>
          <declname>day</declname>
        </param>
        <param>
          <type>int</type>
          <declname>hour</declname>
        </param>
        <param>
          <type>int</type>
          <declname>minutes</declname>
        </param>
        <param>
          <type>int</type>
          <declname>seconds</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolTime::setDateTime(year,month,dat,hour,minutes,seconds): This method is provided to manually set the RTc Time </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="45" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="65" bodyend="100"/>
        <references refid="classCoolTime_1acd537cd4210d7bde4e1f5c47d2ac0456" compoundref="CoolTime_8cpp" startline="441" endline="456">formatDigits</references>
        <references refid="classCoolTime_1ac4f32ee513c1328d984306645e8785a4" compoundref="CoolTime_8cpp" startline="143" endline="162">getESDate</references>
        <references refid="classCoolTime_1abd38f2384ff90692b1568d9db869412e" compoundref="CoolTime_8h" startline="77">rtc</references>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1a7a7501c5ca77dd1248bea704c44f986c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>tmElements_t</type>
        <definition>tmElements_t CoolTime::getTimeDate</definition>
        <argsstring>()</argsstring>
        <name>getTimeDate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolTime_1a7a7501c5ca77dd1248bea704c44f986c" kindref="member">CoolTime::getTimeDate()</ref>: This method is provided to get the RTC Time</para><para><simplesect kind="return"><para>a tmElements_t structre that has the time in it </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="47" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="109" bodyend="133"/>
        <references refid="classCoolTime_1acd537cd4210d7bde4e1f5c47d2ac0456" compoundref="CoolTime_8cpp" startline="441" endline="456">formatDigits</references>
        <references refid="classCoolTime_1abd38f2384ff90692b1568d9db869412e" compoundref="CoolTime_8h" startline="77">rtc</references>
        <referencedby refid="classCoolTime_1ac4f32ee513c1328d984306645e8785a4" compoundref="CoolTime_8cpp" startline="143" endline="162">getESDate</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1ac4f32ee513c1328d984306645e8785a4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String CoolTime::getESDate</definition>
        <argsstring>()</argsstring>
        <name>getESDate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolTime::getESD(): This method is provided to return an Elastic Search compatible date Format</para><para><simplesect kind="return"><para>date String in Elastic Search format </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="49" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="143" bodyend="162"/>
        <references refid="classCoolTime_1acd537cd4210d7bde4e1f5c47d2ac0456" compoundref="CoolTime_8cpp" startline="441" endline="456">formatDigits</references>
        <references refid="classCoolTime_1a7a7501c5ca77dd1248bea704c44f986c" compoundref="CoolTime_8cpp" startline="109" endline="133">getTimeDate</references>
        <referencedby refid="classCoolTime_1ab81ea7fdaace111aa01cc1ec84c6d297" compoundref="CoolTime_8cpp" startline="65" endline="100">setDateTime</referencedby>
        <referencedby refid="classCoolBoard_1ae7358fb6e623cfc81b775f5f1734909b" compoundref="CoolBoard_8cpp" startline="709" endline="738">CoolBoard::userData</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1a5d17f707a9d337720493b2bce9d41c21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long CoolTime::getLastSyncTime</definition>
        <argsstring>()</argsstring>
        <name>getLastSyncTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolTime_1a5d17f707a9d337720493b2bce9d41c21" kindref="member">CoolTime::getLastSyncTime()</ref>: This method is provided to get the last time we syncronised the time</para><para><simplesect kind="return"><para>unsigned long representation of last syncronisation time in seconds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="51" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="172" bodyend="181"/>
        <references refid="classCoolTime_1a9d032e76c3470a15b3bbbc52af6463f7" compoundref="CoolTime_8h" startline="63">timeSync</references>
        <referencedby refid="classCoolTime_1a5ae038a4498602b189f76a10bf02adf8" compoundref="CoolTime_8cpp" startline="193" endline="206">isTimeSync</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1a5ae038a4498602b189f76a10bf02adf8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolTime::isTimeSync</definition>
        <argsstring>(unsigned long seconds=604800)</argsstring>
        <name>isTimeSync</name>
        <param>
          <type>unsigned long</type>
          <declname>seconds</declname>
          <defval>604800</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolTime::isTimeSync( time in seconds): This method is provided to test if the time is syncronised or not. By default we test once per week.</para><para><simplesect kind="return"><para>true if time is syncronised,false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="53" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="193" bodyend="206"/>
        <references refid="classCoolTime_1a5d17f707a9d337720493b2bce9d41c21" compoundref="CoolTime_8cpp" startline="172" endline="181">getLastSyncTime</references>
        <referencedby refid="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" compoundref="CoolTime_8cpp" startline="43" endline="58">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>time_t</type>
        <definition>time_t CoolTime::getNtpTime</definition>
        <argsstring>()</argsstring>
        <name>getNtpTime</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolTime::getNtopTime(): This method is provided to get the Time through an NTP request to a Time Server</para><para><simplesect kind="return"><para>a time_t (unsigned long ) timestamp in seconds </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="55" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="217" bodyend="259"/>
        <references refid="CoolTime_8h_1a56a6ea64006651b4f42adf713e244f06" compoundref="CoolTime_8h" startline="22">NTP_PACKET_SIZE</references>
        <references refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" compoundref="CoolTime_8h" startline="73">packetBuffer</references>
        <references refid="classCoolTime_1a236a38d120dc53bc67456d763838c5a1" compoundref="CoolTime_8cpp" startline="266" endline="288">sendNTPpacket</references>
        <references refid="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" compoundref="CoolTime_8h" startline="67">timeServer</references>
        <references refid="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" compoundref="CoolTime_8h" startline="65">timeZone</references>
        <references refid="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" compoundref="CoolTime_8h" startline="69">Udp</references>
        <referencedby refid="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" compoundref="CoolTime_8cpp" startline="43" endline="58">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1a236a38d120dc53bc67456d763838c5a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolTime::sendNTPpacket</definition>
        <argsstring>(IPAddress &amp;address)</argsstring>
        <name>sendNTPpacket</name>
        <param>
          <type>IPAddress &amp;</type>
          <declname>address</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolTime::sendNTPpacket( Time Server IP address): This method is provided to send an NTP request to the time server at the given address </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="57" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="266" bodyend="288"/>
        <references refid="CoolTime_8h_1a56a6ea64006651b4f42adf713e244f06" compoundref="CoolTime_8h" startline="22">NTP_PACKET_SIZE</references>
        <references refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" compoundref="CoolTime_8h" startline="73">packetBuffer</references>
        <references refid="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" compoundref="CoolTime_8h" startline="69">Udp</references>
        <referencedby refid="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" compoundref="CoolTime_8cpp" startline="217" endline="259">getNtpTime</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolTime_1acd537cd4210d7bde4e1f5c47d2ac0456" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String CoolTime::formatDigits</definition>
        <argsstring>(int digits)</argsstring>
        <name>formatDigits</name>
        <param>
          <type>int</type>
          <declname>digits</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolTime::printDigits(digit)</para><para>utility function for digital clock display adds leading 0</para><para><simplesect kind="return"><para>formatted string of the input digit </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="59" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.cpp" bodystart="441" bodyend="456"/>
        <referencedby refid="classCoolTime_1ac4f32ee513c1328d984306645e8785a4" compoundref="CoolTime_8cpp" startline="143" endline="162">getESDate</referencedby>
        <referencedby refid="classCoolTime_1a7a7501c5ca77dd1248bea704c44f986c" compoundref="CoolTime_8cpp" startline="109" endline="133">getTimeDate</referencedby>
        <referencedby refid="classCoolTime_1ab81ea7fdaace111aa01cc1ec84c6d297" compoundref="CoolTime_8cpp" startline="65" endline="100">setDateTime</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class manages the DS1337 RTC . </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="35">
        <label>CoolTime</label>
        <link refid="classCoolTime"/>
      </node>
    </collaborationgraph>
    <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" line="32" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolTime.h" bodystart="31" bodyend="79"/>
    <listofallmembers>
      <member refid="classCoolTime_1ab1976cf718b950bc31e003c3323b8adb" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>begin</name></member>
      <member refid="classCoolTime_1a87c28260c1bc77091162cbcf1ee2e129" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>config</name></member>
      <member refid="classCoolTime_1ae5528ed0ba9e78c711084968054950e0" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>config</name></member>
      <member refid="classCoolTime_1acd537cd4210d7bde4e1f5c47d2ac0456" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>formatDigits</name></member>
      <member refid="classCoolTime_1ac4f32ee513c1328d984306645e8785a4" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>getESDate</name></member>
      <member refid="classCoolTime_1a5d17f707a9d337720493b2bce9d41c21" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>getLastSyncTime</name></member>
      <member refid="classCoolTime_1a41fbbbfd651c2079f54d4b2911e4c705" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>getNtpTime</name></member>
      <member refid="classCoolTime_1a7a7501c5ca77dd1248bea704c44f986c" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>getTimeDate</name></member>
      <member refid="classCoolTime_1a5ae038a4498602b189f76a10bf02adf8" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>isTimeSync</name></member>
      <member refid="classCoolTime_1a2f777da44d7ba678be8185299e9b49d1" prot="private" virt="non-virtual"><scope>CoolTime</scope><name>localPort</name></member>
      <member refid="classCoolTime_1a27e6abc82a5c2f72161956967005bec7" prot="private" virt="non-virtual"><scope>CoolTime</scope><name>packetBuffer</name></member>
      <member refid="classCoolTime_1af355e7f9b3898211cd2ff25eab5933b1" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>printConf</name></member>
      <member refid="classCoolTime_1abd38f2384ff90692b1568d9db869412e" prot="private" virt="non-virtual"><scope>CoolTime</scope><name>rtc</name></member>
      <member refid="classCoolTime_1a236a38d120dc53bc67456d763838c5a1" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>sendNTPpacket</name></member>
      <member refid="classCoolTime_1ab81ea7fdaace111aa01cc1ec84c6d297" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>setDateTime</name></member>
      <member refid="classCoolTime_1ad2b9858f399108cb440dd1e908916f04" prot="private" virt="non-virtual"><scope>CoolTime</scope><name>timeServer</name></member>
      <member refid="classCoolTime_1a9d032e76c3470a15b3bbbc52af6463f7" prot="private" virt="non-virtual"><scope>CoolTime</scope><name>timeSync</name></member>
      <member refid="classCoolTime_1a1916d98810c2a4e9ba72867e8c1b9a99" prot="private" virt="non-virtual"><scope>CoolTime</scope><name>timeZone</name></member>
      <member refid="classCoolTime_1ad33c2713c903ff064ad09c46406ae088" prot="private" virt="non-virtual"><scope>CoolTime</scope><name>tmSet</name></member>
      <member refid="classCoolTime_1a4e23216a8121ca79d0fb019f30884b92" prot="private" virt="non-virtual"><scope>CoolTime</scope><name>Udp</name></member>
      <member refid="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" prot="public" virt="non-virtual"><scope>CoolTime</scope><name>update</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
