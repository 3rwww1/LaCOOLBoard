<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classCoolFileSystem" kind="class" language="C++" prot="public">
    <compoundname>CoolFileSystem</compoundname>
    <includes refid="CoolFileSystem_8h" local="no">CoolFileSystem.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCoolFileSystem_1ad398e0c5c41a0c88acdf5d672aa71351" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolFileSystem::savedData</definition>
        <argsstring></argsstring>
        <name>savedData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolFileSystem.h" line="38" column="1" bodyfile="CoolFileSystem.h" bodystart="38" bodyend="-1"/>
        <referencedby refid="classCoolFileSystem_1a5c58bca3735c0ed3efb268d70ef998ef" compoundref="CoolFileSystem_8cpp" startline="305" endline="362">getSensorSavedData</referencedby>
        <referencedby refid="classCoolFileSystem_1a5a7eaeea7a9fbf8aaef651d862fa3b5b" compoundref="CoolFileSystem_8cpp" startline="292" endline="295">isDataSaved</referencedby>
        <referencedby refid="classCoolFileSystem_1a4c560c2ddd40b74b7758e6ceb2c58957" compoundref="CoolFileSystem_8cpp" startline="38" endline="55">saveSensorData</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCoolFileSystem_1a6ba6f666ed4c530174f8569d2c636748" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolFileSystem::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolFileSystem_1a6ba6f666ed4c530174f8569d2c636748" kindref="member">CoolFileSystem::begin()</ref>: This method is provided to start the SPIFFS object.</para><para><simplesect kind="return"><para>true if SPIFFS was initialized correctly, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolFileSystem.h" line="26" column="1" bodyfile="CoolFileSystem.cpp" bodystart="22" bodyend="26"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="21" endline="62">CoolBoard::begin</referencedby>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="232" endline="378">CoolBoard::config</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolFileSystem_1a32dad79ae80182a83e2e8f52286b7c7b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolFileSystem::updateConfigFiles</definition>
        <argsstring>(String answer, int JSON_SIZE)</argsstring>
        <name>updateConfigFiles</name>
        <param>
          <type>String</type>
          <declname>answer</declname>
        </param>
        <param>
          <type>int</type>
          <declname>JSON_SIZE</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolFileSyste::updateConfigFiles( mqtt answer, answer size): This method is provided to update the configuration files when the appropriate mqtt answer is received: -update : 1</para><para><simplesect kind="return"><para>true if the files are updated correctly, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolFileSystem.h" line="28" column="1" bodyfile="CoolFileSystem.cpp" bodystart="65" bodyend="281"/>
        <references refid="Irene3000_8h_1a5905d48604152cf57aa6bfa087b49173" compoundref="Irene3000_8h" startline="25">temp</references>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="411" endline="487">CoolBoard::update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolFileSystem_1a4c560c2ddd40b74b7758e6ceb2c58957" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolFileSystem::saveSensorData</definition>
        <argsstring>(const char *data, int Sensor_JSON_SIZE)</argsstring>
        <name>saveSensorData</name>
        <param>
          <type>const char *</type>
          <declname>data</declname>
        </param>
        <param>
          <type>int</type>
          <declname>Sensor_JSON_SIZE</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolFileSystem::saveSensorData( data, data size ): This method is provided to save the data on the local memory when there is no internet available</para><para>sets the saved data flag to TRUE when successful</para><para><simplesect kind="return"><para>true if the data was saved, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolFileSystem.h" line="30" column="1" bodyfile="CoolFileSystem.cpp" bodystart="38" bodyend="55"/>
        <references refid="classCoolFileSystem_1ad398e0c5c41a0c88acdf5d672aa71351" compoundref="CoolFileSystem_8h" startline="38">savedData</references>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="187" endline="216">CoolBoard::offLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolFileSystem_1a5a7eaeea7a9fbf8aaef651d862fa3b5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolFileSystem::isDataSaved</definition>
        <argsstring>()</argsstring>
        <name>isDataSaved</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolFileSystem_1a5a7eaeea7a9fbf8aaef651d862fa3b5b" kindref="member">CoolFileSystem::isDataSaved()</ref>: This method is provided to report wether there is sensor data saved in the File System.</para><para><simplesect kind="return"><para>true if there is data saved, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolFileSystem.h" line="32" column="1" bodyfile="CoolFileSystem.cpp" bodystart="292" bodyend="295"/>
        <references refid="classCoolFileSystem_1ad398e0c5c41a0c88acdf5d672aa71351" compoundref="CoolFileSystem_8h" startline="38">savedData</references>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="97" endline="177">CoolBoard::onLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolFileSystem_1a5c58bca3735c0ed3efb268d70ef998ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String CoolFileSystem::getSensorSavedData</definition>
        <argsstring>()</argsstring>
        <name>getSensorSavedData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolFileSystem::getSensorData(): This method is provided to return the sensor data saved in the File System</para><para><simplesect kind="return"><para>string json of the saved sensor data file </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolFileSystem.h" line="34" column="1" bodyfile="CoolFileSystem.cpp" bodystart="305" bodyend="362"/>
        <references refid="classCoolFileSystem_1ad398e0c5c41a0c88acdf5d672aa71351" compoundref="CoolFileSystem_8h" startline="38">savedData</references>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="97" endline="177">CoolBoard::onLineMode</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class handles the file system. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="31">
        <label>CoolFileSystem</label>
        <link refid="classCoolFileSystem"/>
      </node>
    </collaborationgraph>
    <location file="CoolFileSystem.h" line="23" column="1" bodyfile="CoolFileSystem.h" bodystart="22" bodyend="40"/>
    <listofallmembers>
      <member refid="classCoolFileSystem_1a6ba6f666ed4c530174f8569d2c636748" prot="public" virt="non-virtual"><scope>CoolFileSystem</scope><name>begin</name></member>
      <member refid="classCoolFileSystem_1a5c58bca3735c0ed3efb268d70ef998ef" prot="public" virt="non-virtual"><scope>CoolFileSystem</scope><name>getSensorSavedData</name></member>
      <member refid="classCoolFileSystem_1a5a7eaeea7a9fbf8aaef651d862fa3b5b" prot="public" virt="non-virtual"><scope>CoolFileSystem</scope><name>isDataSaved</name></member>
      <member refid="classCoolFileSystem_1ad398e0c5c41a0c88acdf5d672aa71351" prot="private" virt="non-virtual"><scope>CoolFileSystem</scope><name>savedData</name></member>
      <member refid="classCoolFileSystem_1a4c560c2ddd40b74b7758e6ceb2c58957" prot="public" virt="non-virtual"><scope>CoolFileSystem</scope><name>saveSensorData</name></member>
      <member refid="classCoolFileSystem_1a32dad79ae80182a83e2e8f52286b7c7b" prot="public" virt="non-virtual"><scope>CoolFileSystem</scope><name>updateConfigFiles</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
