<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classCoolBoard" kind="class" language="C++" prot="public">
    <compoundname>CoolBoard</compoundname>
    <includes refid="CoolBoard_8h" local="no">CoolBoard.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCoolBoard_1a7b835fafd449e5282f7f91d787a2dc15" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String CoolBoard::answer</definition>
        <argsstring></argsstring>
        <name>answer</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="96" column="1" bodyfile="CoolBoard.h" bodystart="96" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1af2da1f85315b3d074a8b87d158094fb7" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CoolBoard::answerJsonSize</definition>
        <argsstring></argsstring>
        <name>answerJsonSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="88" column="1" bodyfile="CoolBoard.h" bodystart="88" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="193" endline="318">config</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="327" endline="339">printConf</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1abe31430e52476aff208dccf19a59c9b4" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte CoolBoard::cnxStatus</definition>
        <argsstring></argsstring>
        <name>cnxStatus</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="98" column="1" bodyfile="CoolBoard.h" bodystart="98" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" prot="private" static="no" mutable="no">
        <type><ref refid="classCoolBoardLed" kindref="compound">CoolBoardLed</ref></type>
        <definition>CoolBoardLed CoolBoard::coolBoardLed</definition>
        <argsstring></argsstring>
        <name>coolBoardLed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="66" column="1" bodyfile="CoolBoard.h" bodystart="66" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="24" endline="67">begin</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1af102be5288bd7f7a8e59b13f86e26a00" prot="private" static="no" mutable="no">
        <type><ref refid="classCoolBoardSensors" kindref="compound">CoolBoardSensors</ref></type>
        <definition>CoolBoardSensors CoolBoard::coolBoardSensors</definition>
        <argsstring></argsstring>
        <name>coolBoardSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="64" column="1" bodyfile="CoolBoard.h" bodystart="64" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="24" endline="67">begin</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="156" endline="176">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a427fb753dd8575bdf821c70a5c63d695" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String CoolBoard::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="94" column="1" bodyfile="CoolBoard.h" bodystart="94" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="156" endline="176">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a09e26264839c65873eb56af476eff6b2" prot="private" static="no" mutable="no">
        <type><ref refid="classExternalSensors" kindref="compound">ExternalSensors</ref></type>
        <definition>ExternalSensors CoolBoard::externalSensors</definition>
        <argsstring></argsstring>
        <name>externalSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="78" column="1" bodyfile="CoolBoard.h" bodystart="78" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="24" endline="67">begin</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="156" endline="176">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1af29860cc422622dc33614f9eabb58c40" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte CoolBoard::externalSensorsActive</definition>
        <argsstring></argsstring>
        <name>externalSensorsActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="84" column="1" bodyfile="CoolBoard.h" bodystart="84" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="24" endline="67">begin</referencedby>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="193" endline="318">config</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="156" endline="176">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="327" endline="339">printConf</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" prot="private" static="no" mutable="no">
        <type><ref refid="classCoolFileSystem" kindref="compound">CoolFileSystem</ref></type>
        <definition>CoolFileSystem CoolBoard::fileSystem</definition>
        <argsstring></argsstring>
        <name>fileSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="62" column="1" bodyfile="CoolBoard.h" bodystart="62" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="24" endline="67">begin</referencedby>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="193" endline="318">config</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="156" endline="176">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a6d5c2603e162dcd6e7626a5b90f30837" prot="private" static="no" mutable="no">
        <type>uint16_t</type>
        <definition>uint16_t CoolBoard::interval</definition>
        <argsstring></argsstring>
        <name>interval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="86" column="1" bodyfile="CoolBoard.h" bodystart="86" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="193" endline="318">config</referencedby>
        <referencedby refid="classCoolBoard_1a31cf73a70425114cd7ee49c6e5244199" compoundref="CoolBoard_8cpp" startline="397" endline="400">getInterval</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="327" endline="339">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1ad103718ce316006c4695b8eb312eaf11" prot="private" static="no" mutable="no">
        <type><ref refid="classIrene3000" kindref="compound">Irene3000</ref></type>
        <definition>Irene3000 CoolBoard::irene3000</definition>
        <argsstring></argsstring>
        <name>irene3000</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="76" column="1" bodyfile="CoolBoard.h" bodystart="76" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="24" endline="67">begin</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="156" endline="176">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a1de9b5516695b2e1668bf2e3a6701332" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte CoolBoard::ireneActive</definition>
        <argsstring></argsstring>
        <name>ireneActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="80" column="1" bodyfile="CoolBoard.h" bodystart="80" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="24" endline="67">begin</referencedby>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="193" endline="318">config</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="156" endline="176">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="327" endline="339">printConf</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a30b1357881b01ccbec676856a91e48e9" prot="private" static="no" mutable="no">
        <type><ref refid="classJetpack" kindref="compound">Jetpack</ref></type>
        <definition>Jetpack CoolBoard::jetPack</definition>
        <argsstring></argsstring>
        <name>jetPack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="74" column="1" bodyfile="CoolBoard.h" bodystart="74" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="24" endline="67">begin</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="156" endline="176">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a4dc6ff276ed178975bd8b459fa7421dc" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte CoolBoard::jetpackActive</definition>
        <argsstring></argsstring>
        <name>jetpackActive</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="82" column="1" bodyfile="CoolBoard.h" bodystart="82" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="24" endline="67">begin</referencedby>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="193" endline="318">config</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="156" endline="176">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="327" endline="339">printConf</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" prot="private" static="no" mutable="no">
        <type><ref refid="classCoolMQTT" kindref="compound">CoolMQTT</ref></type>
        <definition>CoolMQTT CoolBoard::mqtt</definition>
        <argsstring></argsstring>
        <name>mqtt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="72" column="1" bodyfile="CoolBoard.h" bodystart="72" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="24" endline="67">begin</referencedby>
        <referencedby refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" compoundref="CoolBoard_8cpp" startline="76" endline="93">connect</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a50d2a6716879d64a85f3c6b44ad63275" prot="private" static="no" mutable="no">
        <type><ref refid="classCoolTime" kindref="compound">CoolTime</ref></type>
        <definition>CoolTime CoolBoard::rtc</definition>
        <argsstring></argsstring>
        <name>rtc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="68" column="1" bodyfile="CoolBoard.h" bodystart="68" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="24" endline="67">begin</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a58e4b6072e3ac8b141ec0befb479208e" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CoolBoard::sensorJsonSize</definition>
        <argsstring></argsstring>
        <name>sensorJsonSize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="90" column="1" bodyfile="CoolBoard.h" bodystart="90" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="193" endline="318">config</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="156" endline="176">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="327" endline="339">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a7a8d8d3d316220cdd049cd63c1aa8fe6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CoolBoard::serverTimeOut</definition>
        <argsstring></argsstring>
        <name>serverTimeOut</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="92" column="1" bodyfile="CoolBoard.h" bodystart="92" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="193" endline="318">config</referencedby>
        <referencedby refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" compoundref="CoolBoard_8cpp" startline="76" endline="93">connect</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="327" endline="339">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a164c550df8424e32fe90bce460c7becf" prot="private" static="no" mutable="no">
        <type>byte</type>
        <definition>byte CoolBoard::station</definition>
        <argsstring></argsstring>
        <name>station</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="100" column="1" bodyfile="CoolBoard.h" bodystart="100" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="193" endline="318">config</referencedby>
        <referencedby refid="classCoolBoard_1a5caa34e713c0b138e34390ddc4208fd3" compoundref="CoolBoard_8cpp" startline="407" endline="417">sleep</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a55b28656e295140928557c47d7fff01e" prot="private" static="no" mutable="no">
        <type>WiFiManager</type>
        <definition>WiFiManager CoolBoard::wifiManager</definition>
        <argsstring></argsstring>
        <name>wifiManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="70" column="1" bodyfile="CoolBoard.h" bodystart="70" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" compoundref="CoolBoard_8cpp" startline="76" endline="93">connect</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" kindref="member">CoolBoard::begin()</ref>: This method is provided to configure, begin the used CoolKit Parts. If Serial is enabled,it prints the configuration of the used parts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="42" column="1" bodyfile="CoolBoard.cpp" bodystart="24" bodyend="67"/>
        <references refid="classCoolFileSystem_1a6ba6f666ed4c530174f8569d2c636748" compoundref="CoolFileSystem_8cpp" startline="22" endline="26">CoolFileSystem::begin</references>
        <references refid="classCoolBoardLed_1ae3cbde8affcc6f011cbd698c8ef911f6" compoundref="CoolBoardLed_8cpp" startline="113" endline="120">CoolBoardLed::begin</references>
        <references refid="classCoolMQTT_1ac9248808641ebf3054ed0620ea9d0100" compoundref="CoolMQTT_8cpp" startline="26" endline="33">CoolMQTT::begin</references>
        <references refid="classJetpack_1a5a53e1ebf7aaf3bf3e0d37ea64ca09a7" compoundref="Jetpack_8cpp" startline="22" endline="31">Jetpack::begin</references>
        <references refid="classExternalSensors_1a58ede0d786a86417254708870f04a21e" compoundref="ExternalSensors_8cpp" startline="30" endline="55">ExternalSensors::begin</references>
        <references refid="classCoolTime_1a2b36c4009f083ece2d407fec077c4938" compoundref="CoolTime_8cpp" startline="25" endline="47">CoolTime::begin</references>
        <references refid="classCoolBoardSensors_1a97095823ef7c8f5290812f1405b966b3" compoundref="CoolBoardSensors_8cpp" startline="85" endline="101">CoolBoardSensors::begin</references>
        <references refid="classIrene3000_1ad5891806c500ae1007afe52b9e304c2b" compoundref="irene3000_8cpp" startline="22" endline="25">Irene3000::begin</references>
        <references refid="classCoolBoardLed_1a1b60e5e30bea96c49ed62ed1bf1ffc8b" compoundref="CoolBoardLed_8cpp" startline="141" endline="189">CoolBoardLed::config</references>
        <references refid="classCoolMQTT_1a0158596b9a2297c8ba609b56ce6bace1" compoundref="CoolMQTT_8cpp" startline="312" endline="323">CoolMQTT::config</references>
        <references refid="classCoolTime_1a87c28260c1bc77091162cbcf1ee2e129" compoundref="CoolTime_8cpp" startline="211" endline="284">CoolTime::config</references>
        <references refid="classJetpack_1ab065ee83e244265a2223a22f3ee4a719" compoundref="Jetpack_8cpp" startline="116" endline="210">Jetpack::config</references>
        <references refid="classExternalSensors_1a862a4bd11346b37270d0244c2adabe5a" compoundref="ExternalSensors_8cpp" startline="113" endline="258">ExternalSensors::config</references>
        <references refid="classIrene3000_1afed5c35e4b23963c157847ef27c11e9c" compoundref="irene3000_8cpp" startline="74" endline="203">Irene3000::config</references>
        <references refid="classCoolBoardSensors_1a9a218895c5423375c33c08f2c56fb23a" compoundref="CoolBoardSensors_8cpp" startline="221" endline="359">CoolBoardSensors::config</references>
        <references refid="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="CoolBoard_8h" startline="66">coolBoardLed</references>
        <references refid="classCoolBoard_1af102be5288bd7f7a8e59b13f86e26a00" compoundref="CoolBoard_8h" startline="64">coolBoardSensors</references>
        <references refid="classCoolBoard_1a09e26264839c65873eb56af476eff6b2" compoundref="CoolBoard_8h" startline="78">externalSensors</references>
        <references refid="classCoolBoard_1af29860cc422622dc33614f9eabb58c40" compoundref="CoolBoard_8h" startline="84">externalSensorsActive</references>
        <references refid="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="CoolBoard_8h" startline="62">fileSystem</references>
        <references refid="classCoolBoard_1ad103718ce316006c4695b8eb312eaf11" compoundref="CoolBoard_8h" startline="76">irene3000</references>
        <references refid="classCoolBoard_1a1de9b5516695b2e1668bf2e3a6701332" compoundref="CoolBoard_8h" startline="80">ireneActive</references>
        <references refid="classCoolBoard_1a30b1357881b01ccbec676856a91e48e9" compoundref="CoolBoard_8h" startline="74">jetPack</references>
        <references refid="classCoolBoard_1a4dc6ff276ed178975bd8b459fa7421dc" compoundref="CoolBoard_8h" startline="82">jetpackActive</references>
        <references refid="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="CoolBoard_8h" startline="72">mqtt</references>
        <references refid="classCoolBoardLed_1a8ed3053a36f0ed4a131f43b5b17efb61" compoundref="CoolBoardLed_8cpp" startline="197" endline="202">CoolBoardLed::printConf</references>
        <references refid="classJetpack_1ac54a7bb4f9166bee32052253d9b1d306" compoundref="Jetpack_8cpp" startline="218" endline="229">Jetpack::printConf</references>
        <references refid="classCoolTime_1af355e7f9b3898211cd2ff25eab5933b1" compoundref="CoolTime_8cpp" startline="292" endline="298">CoolTime::printConf</references>
        <references refid="classExternalSensors_1a78c2bf55084435dd51d3c559b2d3c6f3" compoundref="ExternalSensors_8cpp" startline="265" endline="279">ExternalSensors::printConf</references>
        <references refid="classCoolMQTT_1a40553a0ad4b5ecf1cb4411ab54ca85fb" compoundref="CoolMQTT_8cpp" startline="330" endline="341">CoolMQTT::printConf</references>
        <references refid="classIrene3000_1a7bc2414100b5e19eacc6630fa34b2654" compoundref="irene3000_8cpp" startline="210" endline="221">Irene3000::printConf</references>
        <references refid="classCoolBoardSensors_1af6fd79505815b204c178617ecf54c873" compoundref="CoolBoardSensors_8cpp" startline="367" endline="381">CoolBoardSensors::printConf</references>
        <references refid="classCoolBoard_1a50d2a6716879d64a85f3c6b44ad63275" compoundref="CoolBoard_8h" startline="68">rtc</references>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolBoard::config</definition>
        <argsstring>()</argsstring>
        <name>config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" kindref="member">CoolBoard::config()</ref>: This method is provided to configure the <ref refid="classCoolBoard" kindref="compound">CoolBoard</ref> : -log interval -Size of the data to write -Size of the data to read -irene3000 activated/deactivated -jetpack activated/deactivated -external Sensors activated/deactivated -mqtt server timeout</para><para><simplesect kind="return"><para>true if configuration is done, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="44" column="1" bodyfile="CoolBoard.cpp" bodystart="193" bodyend="318"/>
        <references refid="classCoolBoard_1af2da1f85315b3d074a8b87d158094fb7" compoundref="CoolBoard_8h" startline="88">answerJsonSize</references>
        <references refid="classCoolFileSystem_1a6ba6f666ed4c530174f8569d2c636748" compoundref="CoolFileSystem_8cpp" startline="22" endline="26">CoolFileSystem::begin</references>
        <references refid="classCoolBoard_1af29860cc422622dc33614f9eabb58c40" compoundref="CoolBoard_8h" startline="84">externalSensorsActive</references>
        <references refid="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="CoolBoard_8h" startline="62">fileSystem</references>
        <references refid="classCoolBoard_1a6d5c2603e162dcd6e7626a5b90f30837" compoundref="CoolBoard_8h" startline="86">interval</references>
        <references refid="classCoolBoard_1a1de9b5516695b2e1668bf2e3a6701332" compoundref="CoolBoard_8h" startline="80">ireneActive</references>
        <references refid="classCoolBoard_1a4dc6ff276ed178975bd8b459fa7421dc" compoundref="CoolBoard_8h" startline="82">jetpackActive</references>
        <references refid="classCoolBoard_1a58e4b6072e3ac8b141ec0befb479208e" compoundref="CoolBoard_8h" startline="90">sensorJsonSize</references>
        <references refid="classCoolBoard_1a7a8d8d3d316220cdd049cd63c1aa8fe6" compoundref="CoolBoard_8h" startline="92">serverTimeOut</references>
        <references refid="classCoolBoard_1a164c550df8424e32fe90bce460c7becf" compoundref="CoolBoard_8h" startline="100">station</references>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CoolBoard::connect</definition>
        <argsstring>()</argsstring>
        <name>connect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" kindref="member">CoolBoard::connect()</ref>: This method is provided to manage the network connection and the mqtt connection.</para><para><simplesect kind="return"><para>mqtt client state </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="52" column="1" bodyfile="CoolBoard.cpp" bodystart="76" bodyend="93"/>
        <references refid="classCoolMQTT_1a58b0b1f64b269c2681685208262fba1d" compoundref="CoolMQTT_8cpp" startline="64" endline="92">CoolMQTT::connect</references>
        <references refid="classCoolBoard_1a31cf73a70425114cd7ee49c6e5244199" compoundref="CoolBoard_8cpp" startline="397" endline="400">getInterval</references>
        <references refid="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="CoolBoard_8h" startline="72">mqtt</references>
        <references refid="classCoolBoard_1a7a8d8d3d316220cdd049cd63c1aa8fe6" compoundref="CoolBoard_8h" startline="92">serverTimeOut</references>
        <references refid="classCoolMQTT_1a5d003307eff78efbd585e42b43b72b6d" compoundref="CoolMQTT_8cpp" startline="51" endline="54">CoolMQTT::state</references>
        <references refid="classCoolBoard_1a55b28656e295140928557c47d7fff01e" compoundref="CoolBoard_8h" startline="70">wifiManager</references>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a31cf73a70425114cd7ee49c6e5244199" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>uint16_t</type>
        <definition>uint16_t CoolBoard::getInterval</definition>
        <argsstring>()</argsstring>
        <name>getInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1a31cf73a70425114cd7ee49c6e5244199" kindref="member">CoolBoard::getInterval()</ref>: This method is provided to get the log interval <simplesect kind="return"><para>interval value in ms </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="54" column="1" bodyfile="CoolBoard.cpp" bodystart="397" bodyend="400"/>
        <references refid="classCoolBoard_1a6d5c2603e162dcd6e7626a5b90f30837" compoundref="CoolBoard_8h" startline="86">interval</references>
        <referencedby refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" compoundref="CoolBoard_8cpp" startline="76" endline="93">connect</referencedby>
        <referencedby refid="classCoolBoard_1a5caa34e713c0b138e34390ddc4208fd3" compoundref="CoolBoard_8cpp" startline="407" endline="417">sleep</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::offLineMode</definition>
        <argsstring>()</argsstring>
        <name>offLineMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolBoard::offlineMode(): This method is provided to manage the offLine mode: -read sensors -do actions -save data in the file system </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="48" column="1" bodyfile="CoolBoard.cpp" bodystart="156" bodyend="176"/>
        <references refid="classCoolBoard_1af102be5288bd7f7a8e59b13f86e26a00" compoundref="CoolBoard_8h" startline="64">coolBoardSensors</references>
        <references refid="classCoolBoard_1a427fb753dd8575bdf821c70a5c63d695" compoundref="CoolBoard_8h" startline="94">data</references>
        <references refid="classJetpack_1a86d2e83436ef4b85f4c3a6e85ac785b0" compoundref="Jetpack_8cpp" startline="89" endline="107">Jetpack::doAction</references>
        <references refid="classCoolBoard_1a09e26264839c65873eb56af476eff6b2" compoundref="CoolBoard_8h" startline="78">externalSensors</references>
        <references refid="classCoolBoard_1af29860cc422622dc33614f9eabb58c40" compoundref="CoolBoard_8h" startline="84">externalSensorsActive</references>
        <references refid="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="CoolBoard_8h" startline="62">fileSystem</references>
        <references refid="classCoolBoard_1ad103718ce316006c4695b8eb312eaf11" compoundref="CoolBoard_8h" startline="76">irene3000</references>
        <references refid="classCoolBoard_1a1de9b5516695b2e1668bf2e3a6701332" compoundref="CoolBoard_8h" startline="80">ireneActive</references>
        <references refid="classCoolBoard_1a30b1357881b01ccbec676856a91e48e9" compoundref="CoolBoard_8h" startline="74">jetPack</references>
        <references refid="classCoolBoard_1a4dc6ff276ed178975bd8b459fa7421dc" compoundref="CoolBoard_8h" startline="82">jetpackActive</references>
        <references refid="classExternalSensors_1a53177b81eca3be89508b5511ddcd00fc" compoundref="ExternalSensors_8cpp" startline="65" endline="90">ExternalSensors::read</references>
        <references refid="classCoolBoardSensors_1a91badb2539d91fda8679f2a597874c48" compoundref="CoolBoardSensors_8cpp" startline="123" endline="185">CoolBoardSensors::read</references>
        <references refid="classIrene3000_1a852a170feea994ea1df01c6b245b5d9a" compoundref="irene3000_8cpp" startline="35" endline="65">Irene3000::read</references>
        <references refid="classCoolFileSystem_1a4c560c2ddd40b74b7758e6ceb2c58957" compoundref="CoolFileSystem_8cpp" startline="36" endline="51">CoolFileSystem::saveSensorData</references>
        <references refid="classCoolBoard_1a58e4b6072e3ac8b141ec0befb479208e" compoundref="CoolBoard_8h" startline="90">sensorJsonSize</references>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::onLineMode</definition>
        <argsstring>()</argsstring>
        <name>onLineMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" kindref="member">CoolBoard::onLineMode()</ref>: This method is provided to manage the online mode: -update clock -read sensors -do actions -publish data -read answer -update config </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="50" column="1" bodyfile="CoolBoard.cpp" bodystart="105" bodyend="147"/>
        <references refid="classCoolBoard_1a7b835fafd449e5282f7f91d787a2dc15" compoundref="CoolBoard_8h" startline="96">answer</references>
        <references refid="classCoolBoard_1af102be5288bd7f7a8e59b13f86e26a00" compoundref="CoolBoard_8h" startline="64">coolBoardSensors</references>
        <references refid="classCoolBoard_1a427fb753dd8575bdf821c70a5c63d695" compoundref="CoolBoard_8h" startline="94">data</references>
        <references refid="classJetpack_1a86d2e83436ef4b85f4c3a6e85ac785b0" compoundref="Jetpack_8cpp" startline="89" endline="107">Jetpack::doAction</references>
        <references refid="classCoolBoard_1a09e26264839c65873eb56af476eff6b2" compoundref="CoolBoard_8h" startline="78">externalSensors</references>
        <references refid="classCoolBoard_1af29860cc422622dc33614f9eabb58c40" compoundref="CoolBoard_8h" startline="84">externalSensorsActive</references>
        <references refid="classCoolBoard_1ad103718ce316006c4695b8eb312eaf11" compoundref="CoolBoard_8h" startline="76">irene3000</references>
        <references refid="classCoolBoard_1a1de9b5516695b2e1668bf2e3a6701332" compoundref="CoolBoard_8h" startline="80">ireneActive</references>
        <references refid="classCoolBoard_1a30b1357881b01ccbec676856a91e48e9" compoundref="CoolBoard_8h" startline="74">jetPack</references>
        <references refid="classCoolBoard_1a4dc6ff276ed178975bd8b459fa7421dc" compoundref="CoolBoard_8h" startline="82">jetpackActive</references>
        <references refid="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="CoolBoard_8h" startline="72">mqtt</references>
        <references refid="classCoolMQTT_1aa5eaae967b562b62cbcf2b8d81f6e5d5" compoundref="CoolMQTT_8cpp" startline="121" endline="125">CoolMQTT::mqttLoop</references>
        <references refid="classCoolMQTT_1ace977b3e90ab14b1199fe5c4fb0a13ec" compoundref="CoolMQTT_8cpp" startline="102" endline="111">CoolMQTT::publish</references>
        <references refid="classCoolMQTT_1ae3c18f6ae9723746d32765f1c8f176ca" compoundref="CoolMQTT_8cpp" startline="160" endline="169">CoolMQTT::read</references>
        <references refid="classExternalSensors_1a53177b81eca3be89508b5511ddcd00fc" compoundref="ExternalSensors_8cpp" startline="65" endline="90">ExternalSensors::read</references>
        <references refid="classCoolBoardSensors_1a91badb2539d91fda8679f2a597874c48" compoundref="CoolBoardSensors_8cpp" startline="123" endline="185">CoolBoardSensors::read</references>
        <references refid="classIrene3000_1a852a170feea994ea1df01c6b245b5d9a" compoundref="irene3000_8cpp" startline="35" endline="65">Irene3000::read</references>
        <references refid="classCoolBoard_1a50d2a6716879d64a85f3c6b44ad63275" compoundref="CoolBoard_8h" startline="68">rtc</references>
        <references refid="classCoolBoard_1a58e4b6072e3ac8b141ec0befb479208e" compoundref="CoolBoard_8h" startline="90">sensorJsonSize</references>
        <references refid="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" compoundref="CoolTime_8cpp" startline="54" endline="68">CoolTime::update</references>
        <references refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="346" endline="389">update</references>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::printConf</definition>
        <argsstring>()</argsstring>
        <name>printConf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" kindref="member">CoolBoard::printConf()</ref>: This method is provided to print the configuration to the Serial Monitor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="56" column="1" bodyfile="CoolBoard.cpp" bodystart="327" bodyend="339"/>
        <references refid="classCoolBoard_1af2da1f85315b3d074a8b87d158094fb7" compoundref="CoolBoard_8h" startline="88">answerJsonSize</references>
        <references refid="classCoolBoard_1af29860cc422622dc33614f9eabb58c40" compoundref="CoolBoard_8h" startline="84">externalSensorsActive</references>
        <references refid="classCoolBoard_1a6d5c2603e162dcd6e7626a5b90f30837" compoundref="CoolBoard_8h" startline="86">interval</references>
        <references refid="classCoolBoard_1a1de9b5516695b2e1668bf2e3a6701332" compoundref="CoolBoard_8h" startline="80">ireneActive</references>
        <references refid="classCoolBoard_1a4dc6ff276ed178975bd8b459fa7421dc" compoundref="CoolBoard_8h" startline="82">jetpackActive</references>
        <references refid="classCoolBoard_1a58e4b6072e3ac8b141ec0befb479208e" compoundref="CoolBoard_8h" startline="90">sensorJsonSize</references>
        <references refid="classCoolBoard_1a7a8d8d3d316220cdd049cd63c1aa8fe6" compoundref="CoolBoard_8h" startline="92">serverTimeOut</references>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a5caa34e713c0b138e34390ddc4208fd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::sleep</definition>
        <argsstring>()</argsstring>
        <name>sleep</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1a5caa34e713c0b138e34390ddc4208fd3" kindref="member">CoolBoard::sleep()</ref>: This method is provided to either use delay or set esp to deep sleep </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="58" column="1" bodyfile="CoolBoard.cpp" bodystart="407" bodyend="417"/>
        <references refid="classCoolBoard_1a31cf73a70425114cd7ee49c6e5244199" compoundref="CoolBoard_8cpp" startline="397" endline="400">getInterval</references>
        <references refid="classCoolBoard_1a164c550df8424e32fe90bce460c7becf" compoundref="CoolBoard_8h" startline="100">station</references>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::update</definition>
        <argsstring>(const char *answer)</argsstring>
        <name>update</name>
        <param>
          <type>const char *</type>
          <declname>answer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolBoard::update(mqtt answer): This method is provided to handle the configuration update of the different parts </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="CoolBoard.h" line="46" column="1" bodyfile="CoolBoard.cpp" bodystart="346" bodyend="389"/>
        <references refid="classCoolBoard_1af2da1f85315b3d074a8b87d158094fb7" compoundref="CoolBoard_8h" startline="88">answerJsonSize</references>
        <references refid="classCoolBoardLed_1a1b60e5e30bea96c49ed62ed1bf1ffc8b" compoundref="CoolBoardLed_8cpp" startline="141" endline="189">CoolBoardLed::config</references>
        <references refid="classCoolMQTT_1a0158596b9a2297c8ba609b56ce6bace1" compoundref="CoolMQTT_8cpp" startline="312" endline="323">CoolMQTT::config</references>
        <references refid="classCoolTime_1a87c28260c1bc77091162cbcf1ee2e129" compoundref="CoolTime_8cpp" startline="211" endline="284">CoolTime::config</references>
        <references refid="classExternalSensors_1a862a4bd11346b37270d0244c2adabe5a" compoundref="ExternalSensors_8cpp" startline="113" endline="258">ExternalSensors::config</references>
        <references refid="classJetpack_1ab065ee83e244265a2223a22f3ee4a719" compoundref="Jetpack_8cpp" startline="116" endline="210">Jetpack::config</references>
        <references refid="classIrene3000_1afed5c35e4b23963c157847ef27c11e9c" compoundref="irene3000_8cpp" startline="74" endline="203">Irene3000::config</references>
        <references refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="193" endline="318">config</references>
        <references refid="classCoolBoardSensors_1a9a218895c5423375c33c08f2c56fb23a" compoundref="CoolBoardSensors_8cpp" startline="221" endline="359">CoolBoardSensors::config</references>
        <references refid="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="CoolBoard_8h" startline="66">coolBoardLed</references>
        <references refid="classCoolBoard_1af102be5288bd7f7a8e59b13f86e26a00" compoundref="CoolBoard_8h" startline="64">coolBoardSensors</references>
        <references refid="classCoolBoard_1a09e26264839c65873eb56af476eff6b2" compoundref="CoolBoard_8h" startline="78">externalSensors</references>
        <references refid="classCoolBoard_1af29860cc422622dc33614f9eabb58c40" compoundref="CoolBoard_8h" startline="84">externalSensorsActive</references>
        <references refid="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="CoolBoard_8h" startline="62">fileSystem</references>
        <references refid="classCoolBoard_1ad103718ce316006c4695b8eb312eaf11" compoundref="CoolBoard_8h" startline="76">irene3000</references>
        <references refid="classCoolBoard_1a1de9b5516695b2e1668bf2e3a6701332" compoundref="CoolBoard_8h" startline="80">ireneActive</references>
        <references refid="classCoolBoard_1a30b1357881b01ccbec676856a91e48e9" compoundref="CoolBoard_8h" startline="74">jetPack</references>
        <references refid="classCoolBoard_1a4dc6ff276ed178975bd8b459fa7421dc" compoundref="CoolBoard_8h" startline="82">jetpackActive</references>
        <references refid="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="CoolBoard_8h" startline="72">mqtt</references>
        <references refid="classCoolBoard_1a50d2a6716879d64a85f3c6b44ad63275" compoundref="CoolBoard_8h" startline="68">rtc</references>
        <references refid="classCoolFileSystem_1a32dad79ae80182a83e2e8f52286b7c7b" compoundref="CoolFileSystem_8cpp" startline="61" endline="292">CoolFileSystem::updateConfigFiles</references>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="105" endline="147">onLineMode</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class manages the <ref refid="classCoolBoard" kindref="compound">CoolBoard</ref> and all of Its functions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="14">
        <label>CoolBoardSensors::lightActive</label>
        <link refid="structCoolBoardSensors_1_1lightActive"/>
      </node>
      <node id="9">
        <label>ExternalSensors</label>
        <link refid="classExternalSensors"/>
        <childnode refid="10" relation="usage">
          <edgelabel>-sensors</edgelabel>
        </childnode>
      </node>
      <node id="17">
        <label>Irene3000::parameters_T</label>
        <link refid="structIrene3000_1_1parameters__T"/>
      </node>
      <node id="11">
        <label>BaseExternalSensor</label>
        <link refid="classBaseExternalSensor"/>
      </node>
      <node id="10">
        <label>ExternalSensors::sensor</label>
        <link refid="structExternalSensors_1_1sensor"/>
        <childnode refid="11" relation="usage">
          <edgelabel>+exSensor</edgelabel>
        </childnode>
      </node>
      <node id="7">
        <label>CoolMQTT</label>
        <link refid="classCoolMQTT"/>
      </node>
      <node id="12">
        <label>CoolBoardSensors</label>
        <link refid="classCoolBoardSensors"/>
        <childnode refid="13" relation="usage">
          <edgelabel>-airDataActive</edgelabel>
        </childnode>
        <childnode refid="14" relation="usage">
          <edgelabel>-lightDataActive</edgelabel>
        </childnode>
      </node>
      <node id="15">
        <label>Irene3000</label>
        <link refid="classIrene3000"/>
        <childnode refid="16" relation="usage">
          <edgelabel>-waterTemp</edgelabel>
          <edgelabel>-phProbe</edgelabel>
          <edgelabel>-adc2</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>-params</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>Jetpack</label>
        <link refid="classJetpack"/>
        <childnode refid="20" relation="usage">
          <edgelabel>-actors</edgelabel>
        </childnode>
      </node>
      <node id="21">
        <label>CoolTime</label>
        <link refid="classCoolTime"/>
      </node>
      <node id="13">
        <label>CoolBoardSensors::airActive</label>
        <link refid="structCoolBoardSensors_1_1airActive"/>
      </node>
      <node id="16">
        <label>Irene3000::state</label>
        <link refid="structIrene3000_1_1state"/>
      </node>
      <node id="20">
        <label>Jetpack::state</label>
        <link refid="structJetpack_1_1state"/>
      </node>
      <node id="18">
        <label>CoolFileSystem</label>
        <link refid="classCoolFileSystem"/>
      </node>
      <node id="6">
        <label>CoolBoard</label>
        <link refid="classCoolBoard"/>
        <childnode refid="7" relation="usage">
          <edgelabel>-mqtt</edgelabel>
        </childnode>
        <childnode refid="8" relation="usage">
          <edgelabel>-coolBoardLed</edgelabel>
        </childnode>
        <childnode refid="9" relation="usage">
          <edgelabel>-externalSensors</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>-coolBoardSensors</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>-irene3000</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>-fileSystem</edgelabel>
        </childnode>
        <childnode refid="19" relation="usage">
          <edgelabel>-jetPack</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>-rtc</edgelabel>
        </childnode>
      </node>
      <node id="8">
        <label>CoolBoardLed</label>
        <link refid="classCoolBoardLed"/>
      </node>
    </collaborationgraph>
    <location file="CoolBoard.h" line="38" column="1" bodyfile="CoolBoard.h" bodystart="37" bodyend="102"/>
    <listofallmembers>
      <member refid="classCoolBoard_1a7b835fafd449e5282f7f91d787a2dc15" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>answer</name></member>
      <member refid="classCoolBoard_1af2da1f85315b3d074a8b87d158094fb7" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>answerJsonSize</name></member>
      <member refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>begin</name></member>
      <member refid="classCoolBoard_1abe31430e52476aff208dccf19a59c9b4" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>cnxStatus</name></member>
      <member refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>config</name></member>
      <member refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>connect</name></member>
      <member refid="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>coolBoardLed</name></member>
      <member refid="classCoolBoard_1af102be5288bd7f7a8e59b13f86e26a00" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>coolBoardSensors</name></member>
      <member refid="classCoolBoard_1a427fb753dd8575bdf821c70a5c63d695" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>data</name></member>
      <member refid="classCoolBoard_1a09e26264839c65873eb56af476eff6b2" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>externalSensors</name></member>
      <member refid="classCoolBoard_1af29860cc422622dc33614f9eabb58c40" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>externalSensorsActive</name></member>
      <member refid="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>fileSystem</name></member>
      <member refid="classCoolBoard_1a31cf73a70425114cd7ee49c6e5244199" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>getInterval</name></member>
      <member refid="classCoolBoard_1a6d5c2603e162dcd6e7626a5b90f30837" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>interval</name></member>
      <member refid="classCoolBoard_1ad103718ce316006c4695b8eb312eaf11" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>irene3000</name></member>
      <member refid="classCoolBoard_1a1de9b5516695b2e1668bf2e3a6701332" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>ireneActive</name></member>
      <member refid="classCoolBoard_1a30b1357881b01ccbec676856a91e48e9" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>jetPack</name></member>
      <member refid="classCoolBoard_1a4dc6ff276ed178975bd8b459fa7421dc" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>jetpackActive</name></member>
      <member refid="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>mqtt</name></member>
      <member refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>offLineMode</name></member>
      <member refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>onLineMode</name></member>
      <member refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>printConf</name></member>
      <member refid="classCoolBoard_1a50d2a6716879d64a85f3c6b44ad63275" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>rtc</name></member>
      <member refid="classCoolBoard_1a58e4b6072e3ac8b141ec0befb479208e" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>sensorJsonSize</name></member>
      <member refid="classCoolBoard_1a7a8d8d3d316220cdd049cd63c1aa8fe6" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>serverTimeOut</name></member>
      <member refid="classCoolBoard_1a5caa34e713c0b138e34390ddc4208fd3" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>sleep</name></member>
      <member refid="classCoolBoard_1a164c550df8424e32fe90bce460c7becf" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>station</name></member>
      <member refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>update</name></member>
      <member refid="classCoolBoard_1a55b28656e295140928557c47d7fff01e" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>wifiManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
