<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="classCoolBoard" kind="class" language="C++" prot="public">
    <compoundname>CoolBoard</compoundname>
    <includes refid="CoolBoard_8h" local="no">CoolBoard.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" prot="private" static="no" mutable="no">
        <type><ref refid="classCoolFileSystem" kindref="compound">CoolFileSystem</ref></type>
        <definition>CoolFileSystem CoolBoard::fileSystem</definition>
        <argsstring></argsstring>
        <name>fileSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="63" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="63" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="486" endline="664">config</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="381" endline="472">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="717" endline="855">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1af102be5288bd7f7a8e59b13f86e26a00" prot="private" static="no" mutable="no">
        <type><ref refid="classCoolBoardSensors" kindref="compound">CoolBoardSensors</ref></type>
        <definition>CoolBoardSensors CoolBoard::coolBoardSensors</definition>
        <argsstring></argsstring>
        <name>coolBoardSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="65" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="65" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
        <referencedby refid="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="CoolBoard_8cpp" startline="888" endline="948">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" prot="private" static="no" mutable="no">
        <type><ref refid="classCoolBoardLed" kindref="compound">CoolBoardLed</ref></type>
        <definition>CoolBoardLed CoolBoard::coolBoardLed</definition>
        <argsstring></argsstring>
        <name>coolBoardLed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="67" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="67" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="486" endline="664">config</referencedby>
        <referencedby refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" compoundref="CoolBoard_8cpp" startline="111" endline="168">connect</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="381" endline="472">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="CoolBoard_8cpp" startline="888" endline="948">readSensors</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="717" endline="855">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a50d2a6716879d64a85f3c6b44ad63275" prot="private" static="no" mutable="no">
        <type><ref refid="classCoolTime" kindref="compound">CoolTime</ref></type>
        <definition>CoolTime CoolBoard::rtc</definition>
        <argsstring></argsstring>
        <name>rtc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="69" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="69" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="CoolBoard_8cpp" startline="888" endline="948">readSensors</referencedby>
        <referencedby refid="classCoolBoard_1ae7358fb6e623cfc81b775f5f1734909b" compoundref="CoolBoard_8cpp" startline="957" endline="995">userData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1acd88e6003606b47479ebba81e4aceeca" prot="private" static="no" mutable="no">
        <type><ref refid="classCoolWifi" kindref="compound">CoolWifi</ref></type>
        <definition>CoolWifi CoolBoard::wifiManager</definition>
        <argsstring></argsstring>
        <name>wifiManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="71" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="71" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
        <referencedby refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" compoundref="CoolBoard_8cpp" startline="111" endline="168">connect</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" prot="private" static="no" mutable="no">
        <type><ref refid="classCoolMQTT" kindref="compound">CoolMQTT</ref></type>
        <definition>CoolMQTT CoolBoard::mqtt</definition>
        <argsstring></argsstring>
        <name>mqtt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="73" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="73" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
        <referencedby refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" compoundref="CoolBoard_8cpp" startline="111" endline="168">connect</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="717" endline="855">update</referencedby>
        <referencedby refid="classCoolBoard_1ae7358fb6e623cfc81b775f5f1734909b" compoundref="CoolBoard_8cpp" startline="957" endline="995">userData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a30b1357881b01ccbec676856a91e48e9" prot="private" static="no" mutable="no">
        <type><ref refid="classJetpack" kindref="compound">Jetpack</ref></type>
        <definition>Jetpack CoolBoard::jetPack</definition>
        <argsstring></argsstring>
        <name>jetPack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="75" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="75" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="381" endline="472">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1ad103718ce316006c4695b8eb312eaf11" prot="private" static="no" mutable="no">
        <type><ref refid="classIrene3000" kindref="compound">Irene3000</ref></type>
        <definition>Irene3000 CoolBoard::irene3000</definition>
        <argsstring></argsstring>
        <name>irene3000</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="77" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="77" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
        <referencedby refid="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="CoolBoard_8cpp" startline="888" endline="948">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a09e26264839c65873eb56af476eff6b2" prot="private" static="no" mutable="no">
        <type><ref refid="classExternalSensors" kindref="compound">ExternalSensors</ref></type>
        <definition>ExternalSensors CoolBoard::externalSensors</definition>
        <argsstring></argsstring>
        <name>externalSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="79" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="79" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
        <referencedby refid="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="CoolBoard_8cpp" startline="888" endline="948">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a6395459131d6889a3005f79c7a35e964" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolBoard::userActive</definition>
        <argsstring></argsstring>
        <name>userActive</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="81" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="81" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="486" endline="664">config</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="381" endline="472">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="673" endline="710">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a9c3f7ac625481ee2ae802a25d97a4ae0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolBoard::ireneActive</definition>
        <argsstring></argsstring>
        <name>ireneActive</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="83" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="83" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="486" endline="664">config</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="673" endline="710">printConf</referencedby>
        <referencedby refid="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="CoolBoard_8cpp" startline="888" endline="948">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a9be03a913d26e558328935ca3b59a75e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolBoard::jetpackActive</definition>
        <argsstring></argsstring>
        <name>jetpackActive</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="85" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="85" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="486" endline="664">config</referencedby>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="381" endline="472">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="673" endline="710">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a638b00b76aeb819ecfd4c10b8cdd7bb7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolBoard::externalSensorsActive</definition>
        <argsstring></argsstring>
        <name>externalSensorsActive</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="87" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="87" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="486" endline="664">config</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="673" endline="710">printConf</referencedby>
        <referencedby refid="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="CoolBoard_8cpp" startline="888" endline="948">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a0a51b2287139f66c738101fb53139230" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolBoard::sleepActive</definition>
        <argsstring></argsstring>
        <name>sleepActive</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="89" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="89" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="486" endline="664">config</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="673" endline="710">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a84bc94413b64973e4aba8c467c97006c" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CoolBoard::logInterval</definition>
        <argsstring></argsstring>
        <name>logInterval</name>
        <initializer>=1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="91" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="91" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="486" endline="664">config</referencedby>
        <referencedby refid="classCoolBoard_1a7508e029f2ee17bb747ffab599285e0d" compoundref="CoolBoard_8cpp" startline="864" endline="878">getLogInterval</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="673" endline="710">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a7a8d8d3d316220cdd049cd63c1aa8fe6" prot="private" static="no" mutable="no">
        <type>int</type>
        <definition>int CoolBoard::serverTimeOut</definition>
        <argsstring></argsstring>
        <name>serverTimeOut</name>
        <initializer>=180</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="93" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="93" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="CoolBoard_8cpp" startline="486" endline="664">config</referencedby>
        <referencedby refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" compoundref="CoolBoard_8cpp" startline="673" endline="710">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a427fb753dd8575bdf821c70a5c63d695" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String CoolBoard::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <initializer>=&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="95" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="95" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="381" endline="472">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="classCoolBoard_1a7b835fafd449e5282f7f91d787a2dc15" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String CoolBoard::answer</definition>
        <argsstring></argsstring>
        <name>answer</name>
        <initializer>=&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="97" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="97" bodyend="-1"/>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" kindref="member">CoolBoard::begin()</ref>: This method is provided to configure and start the used CoolKit Parts. It also starts the first connection try If Serial is enabled,it prints the configuration of the used parts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="38" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.cpp" bodystart="37" bodyend="102"/>
        <references refid="classJetpack_1a5a53e1ebf7aaf3bf3e0d37ea64ca09a7" compoundref="Jetpack_8cpp" startline="32" endline="48">Jetpack::begin</references>
        <references refid="classCoolMQTT_1ac9248808641ebf3054ed0620ea9d0100" compoundref="CoolMQTT_8cpp" startline="39" endline="54">CoolMQTT::begin</references>
        <references refid="classExternalSensors_1a58ede0d786a86417254708870f04a21e" compoundref="ExternalSensors_8cpp" startline="43" endline="76">ExternalSensors::begin</references>
        <references refid="classCoolWifi_1a46942fed90e475112cc10b78a32e7aaa" compoundref="CoolWifi_8cpp" startline="37" endline="51">CoolWifi::begin</references>
        <references refid="classCoolBoardSensors_1a97095823ef7c8f5290812f1405b966b3" compoundref="CoolBoardSensors_8cpp" startline="94" endline="131">CoolBoardSensors::begin</references>
        <references refid="classCoolTime_1ab1976cf718b950bc31e003c3323b8adb" compoundref="CoolTime_8cpp" startline="41" endline="56">CoolTime::begin</references>
        <references refid="classIrene3000_1ad5891806c500ae1007afe52b9e304c2b" compoundref="irene3000_8cpp" startline="38" endline="49">Irene3000::begin</references>
        <references refid="classCoolBoardLed_1a96e1ea13003eee34c9dbcef340404426" compoundref="CoolBoardLed_8cpp" startline="74" endline="101">CoolBoardLed::blink</references>
        <references refid="classJetpack_1ab065ee83e244265a2223a22f3ee4a719" compoundref="Jetpack_8cpp" startline="356" endline="534">Jetpack::config</references>
        <references refid="classExternalSensors_1a862a4bd11346b37270d0244c2adabe5a" compoundref="ExternalSensors_8cpp" startline="159" endline="314">ExternalSensors::config</references>
        <references refid="classCoolWifi_1a4eb2f6b9b09dd588964b88b6c70122c0" compoundref="CoolWifi_8cpp" startline="201" endline="360">CoolWifi::config</references>
        <references refid="classCoolMQTT_1a9b703de4f1358f0ee7a5e8c44979c648" compoundref="CoolMQTT_8cpp" startline="597" endline="617">CoolMQTT::config</references>
        <references refid="classCoolTime_1a87c28260c1bc77091162cbcf1ee2e129" compoundref="CoolTime_8cpp" startline="424" endline="554">CoolTime::config</references>
        <references refid="classIrene3000_1afed5c35e4b23963c157847ef27c11e9c" compoundref="irene3000_8cpp" startline="129" endline="300">Irene3000::config</references>
        <references refid="classCoolBoardSensors_1a9a218895c5423375c33c08f2c56fb23a" compoundref="CoolBoardSensors_8cpp" startline="289" endline="471">CoolBoardSensors::config</references>
        <references refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" compoundref="CoolBoard_8cpp" startline="111" endline="168">connect</references>
        <references refid="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="CoolBoard_8h" startline="67">coolBoardLed</references>
        <references refid="classCoolBoard_1af102be5288bd7f7a8e59b13f86e26a00" compoundref="CoolBoard_8h" startline="65">coolBoardSensors</references>
        <references refid="classCoolBoard_1a09e26264839c65873eb56af476eff6b2" compoundref="CoolBoard_8h" startline="79">externalSensors</references>
        <references refid="classCoolBoard_1a638b00b76aeb819ecfd4c10b8cdd7bb7" compoundref="CoolBoard_8h" startline="87">externalSensorsActive</references>
        <references refid="classCoolBoardLed_1a93d545679237e8cc858324367149775c" compoundref="CoolBoardLed_8cpp" startline="142" endline="170">CoolBoardLed::fadeOut</references>
        <references refid="classCoolBoard_1ad103718ce316006c4695b8eb312eaf11" compoundref="CoolBoard_8h" startline="77">irene3000</references>
        <references refid="classCoolBoard_1a9c3f7ac625481ee2ae802a25d97a4ae0" compoundref="CoolBoard_8h" startline="83">ireneActive</references>
        <references refid="classCoolBoard_1a30b1357881b01ccbec676856a91e48e9" compoundref="CoolBoard_8h" startline="75">jetPack</references>
        <references refid="classCoolBoard_1a9be03a913d26e558328935ca3b59a75e" compoundref="CoolBoard_8h" startline="85">jetpackActive</references>
        <references refid="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="CoolBoard_8h" startline="73">mqtt</references>
        <references refid="classCoolBoardLed_1a8ed3053a36f0ed4a131f43b5b17efb61" compoundref="CoolBoardLed_8cpp" startline="400" endline="416">CoolBoardLed::printConf</references>
        <references refid="classJetpack_1ac54a7bb4f9166bee32052253d9b1d306" compoundref="Jetpack_8cpp" startline="542" endline="590">Jetpack::printConf</references>
        <references refid="classExternalSensors_1a78c2bf55084435dd51d3c559b2d3c6f3" compoundref="ExternalSensors_8cpp" startline="321" endline="354">ExternalSensors::printConf</references>
        <references refid="classCoolMQTT_1a40553a0ad4b5ecf1cb4411ab54ca85fb" compoundref="CoolMQTT_8cpp" startline="624" endline="654">CoolMQTT::printConf</references>
        <references refid="classCoolWifi_1a9e6105c6d13d35ec510f6633da9e0223" compoundref="CoolWifi_8cpp" startline="409" endline="445">CoolWifi::printConf</references>
        <references refid="classCoolTime_1af355e7f9b3898211cd2ff25eab5933b1" compoundref="CoolTime_8cpp" startline="689" endline="706">CoolTime::printConf</references>
        <references refid="classIrene3000_1a7bc2414100b5e19eacc6630fa34b2654" compoundref="irene3000_8cpp" startline="307" endline="341">Irene3000::printConf</references>
        <references refid="classCoolBoardSensors_1af6fd79505815b204c178617ecf54c873" compoundref="CoolBoardSensors_8cpp" startline="479" endline="516">CoolBoardSensors::printConf</references>
        <references refid="classCoolBoard_1a50d2a6716879d64a85f3c6b44ad63275" compoundref="CoolBoard_8h" startline="69">rtc</references>
        <references refid="classCoolBoard_1acd88e6003606b47479ebba81e4aceeca" compoundref="CoolBoard_8h" startline="71">wifiManager</references>
        <references refid="classCoolBoardLed_1a30fadd4cbec17ceea428bf7a32207e87" compoundref="CoolBoardLed_8cpp" startline="258" endline="281">CoolBoardLed::write</references>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolBoard::config</definition>
        <argsstring>()</argsstring>
        <name>config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" kindref="member">CoolBoard::config()</ref>: This method is provided to configure the <ref refid="classCoolBoard" kindref="compound">CoolBoard</ref> : -log interval -irene3000 activated/deactivated -jetpack activated/deactivated -external Sensors activated/deactivated -mqtt server timeout</para><para><simplesect kind="return"><para>true if configuration is done, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="40" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.cpp" bodystart="486" bodyend="664"/>
        <references refid="classCoolFileSystem_1a6ba6f666ed4c530174f8569d2c636748" compoundref="CoolFileSystem_8cpp" startline="33" endline="48">CoolFileSystem::begin</references>
        <references refid="classCoolBoardLed_1ae3cbde8affcc6f011cbd698c8ef911f6" compoundref="CoolBoardLed_8cpp" startline="232" endline="251">CoolBoardLed::begin</references>
        <references refid="classCoolBoardLed_1a96e1ea13003eee34c9dbcef340404426" compoundref="CoolBoardLed_8cpp" startline="74" endline="101">CoolBoardLed::blink</references>
        <references refid="classCoolBoardLed_1a1b60e5e30bea96c49ed62ed1bf1ffc8b" compoundref="CoolBoardLed_8cpp" startline="291" endline="392">CoolBoardLed::config</references>
        <references refid="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="CoolBoard_8h" startline="67">coolBoardLed</references>
        <references refid="classCoolBoard_1a638b00b76aeb819ecfd4c10b8cdd7bb7" compoundref="CoolBoard_8h" startline="87">externalSensorsActive</references>
        <references refid="classCoolBoardLed_1ab778f5e7bed0ab74e3906d82110493c3" compoundref="CoolBoardLed_8cpp" startline="107" endline="136">CoolBoardLed::fadeIn</references>
        <references refid="classCoolBoardLed_1a93d545679237e8cc858324367149775c" compoundref="CoolBoardLed_8cpp" startline="142" endline="170">CoolBoardLed::fadeOut</references>
        <references refid="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="CoolBoard_8h" startline="63">fileSystem</references>
        <references refid="classCoolBoard_1a9c3f7ac625481ee2ae802a25d97a4ae0" compoundref="CoolBoard_8h" startline="83">ireneActive</references>
        <references refid="classCoolBoard_1a9be03a913d26e558328935ca3b59a75e" compoundref="CoolBoard_8h" startline="85">jetpackActive</references>
        <references refid="classCoolBoard_1a84bc94413b64973e4aba8c467c97006c" compoundref="CoolBoard_8h" startline="91">logInterval</references>
        <references refid="classCoolBoard_1a7a8d8d3d316220cdd049cd63c1aa8fe6" compoundref="CoolBoard_8h" startline="93">serverTimeOut</references>
        <references refid="classCoolBoard_1a0a51b2287139f66c738101fb53139230" compoundref="CoolBoard_8h" startline="89">sleepActive</references>
        <references refid="classCoolBoardLed_1ad5f0de4c628cbfbf49896042831c64ad" compoundref="CoolBoardLed_8cpp" startline="176" endline="207">CoolBoardLed::strobe</references>
        <references refid="classCoolBoard_1a6395459131d6889a3005f79c7a35e964" compoundref="CoolBoard_8h" startline="81">userActive</references>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::update</definition>
        <argsstring>(const char *answer)</argsstring>
        <name>update</name>
        <param>
          <type>const char *</type>
          <declname>answer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolBoard::update(mqtt answer): This method is provided to handle the configuration update of the different parts </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="42" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.cpp" bodystart="717" bodyend="855"/>
        <references refid="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="CoolBoard_8h" startline="67">coolBoardLed</references>
        <references refid="classCoolBoardLed_1ab778f5e7bed0ab74e3906d82110493c3" compoundref="CoolBoardLed_8cpp" startline="107" endline="136">CoolBoardLed::fadeIn</references>
        <references refid="classCoolBoardLed_1a93d545679237e8cc858324367149775c" compoundref="CoolBoardLed_8cpp" startline="142" endline="170">CoolBoardLed::fadeOut</references>
        <references refid="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="CoolBoard_8h" startline="63">fileSystem</references>
        <references refid="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="CoolBoard_8h" startline="73">mqtt</references>
        <references refid="classCoolMQTT_1aa5eaae967b562b62cbcf2b8d81f6e5d5" compoundref="CoolMQTT_8cpp" startline="244" endline="271">CoolMQTT::mqttLoop</references>
        <references refid="classCoolMQTT_1ace977b3e90ab14b1199fe5c4fb0a13ec" compoundref="CoolMQTT_8cpp" startline="152" endline="182">CoolMQTT::publish</references>
        <references refid="classCoolBoardLed_1ad5f0de4c628cbfbf49896042831c64ad" compoundref="CoolBoardLed_8cpp" startline="176" endline="207">CoolBoardLed::strobe</references>
        <references refid="classCoolFileSystem_1adfa8e2e80641ae6f0cceabd348a9b841" compoundref="CoolFileSystem_8cpp" startline="362" endline="713">CoolFileSystem::updateConfigFiles</references>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::offLineMode</definition>
        <argsstring>()</argsstring>
        <name>offLineMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolBoard::offlineMode(): This method is provided to manage the offLine mode: -read sensors -do actions -save data in the file system </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="44" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.cpp" bodystart="381" bodyend="472"/>
        <references refid="classCoolBoardLed_1a96e1ea13003eee34c9dbcef340404426" compoundref="CoolBoardLed_8cpp" startline="74" endline="101">CoolBoardLed::blink</references>
        <references refid="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="CoolBoard_8h" startline="67">coolBoardLed</references>
        <references refid="classCoolBoard_1a427fb753dd8575bdf821c70a5c63d695" compoundref="CoolBoard_8h" startline="95">data</references>
        <references refid="classJetpack_1a9e703197093094b963f9ad57817495b8" compoundref="Jetpack_8cpp" startline="134" endline="347">Jetpack::doAction</references>
        <references refid="classCoolBoardLed_1af1cacbaa88db8bcf6042c1083ba41155" compoundref="CoolBoardLed_8cpp" startline="33" endline="67">CoolBoardLed::fade</references>
        <references refid="classCoolBoardLed_1ab778f5e7bed0ab74e3906d82110493c3" compoundref="CoolBoardLed_8cpp" startline="107" endline="136">CoolBoardLed::fadeIn</references>
        <references refid="classCoolBoardLed_1a93d545679237e8cc858324367149775c" compoundref="CoolBoardLed_8cpp" startline="142" endline="170">CoolBoardLed::fadeOut</references>
        <references refid="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="CoolBoard_8h" startline="63">fileSystem</references>
        <references refid="classCoolBoard_1a30b1357881b01ccbec676856a91e48e9" compoundref="CoolBoard_8h" startline="75">jetPack</references>
        <references refid="classCoolBoard_1a9be03a913d26e558328935ca3b59a75e" compoundref="CoolBoard_8h" startline="85">jetpackActive</references>
        <references refid="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="CoolBoard_8cpp" startline="888" endline="948">readSensors</references>
        <references refid="classCoolFileSystem_1afa3a4feae94871d4d3b6bebb701c2e67" compoundref="CoolFileSystem_8cpp" startline="60" endline="146">CoolFileSystem::saveSensorData</references>
        <references refid="classCoolBoard_1a6395459131d6889a3005f79c7a35e964" compoundref="CoolBoard_8h" startline="81">userActive</references>
        <references refid="classCoolBoard_1ae7358fb6e623cfc81b775f5f1734909b" compoundref="CoolBoard_8cpp" startline="957" endline="995">userData</references>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::onLineMode</definition>
        <argsstring>()</argsstring>
        <name>onLineMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" kindref="member">CoolBoard::onLineMode()</ref>: This method is provided to manage the online mode: -update clock -read sensor -do actions -publish data -read answer -update config </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="46" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.cpp" bodystart="180" bodyend="371"/>
        <references refid="classCoolBoard_1a7b835fafd449e5282f7f91d787a2dc15" compoundref="CoolBoard_8h" startline="97">answer</references>
        <references refid="classCoolBoardLed_1a96e1ea13003eee34c9dbcef340404426" compoundref="CoolBoardLed_8cpp" startline="74" endline="101">CoolBoardLed::blink</references>
        <references refid="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="CoolBoard_8h" startline="67">coolBoardLed</references>
        <references refid="classCoolBoard_1a427fb753dd8575bdf821c70a5c63d695" compoundref="CoolBoard_8h" startline="95">data</references>
        <references refid="classJetpack_1a9e703197093094b963f9ad57817495b8" compoundref="Jetpack_8cpp" startline="134" endline="347">Jetpack::doAction</references>
        <references refid="classCoolBoardLed_1af1cacbaa88db8bcf6042c1083ba41155" compoundref="CoolBoardLed_8cpp" startline="33" endline="67">CoolBoardLed::fade</references>
        <references refid="classCoolBoardLed_1ab778f5e7bed0ab74e3906d82110493c3" compoundref="CoolBoardLed_8cpp" startline="107" endline="136">CoolBoardLed::fadeIn</references>
        <references refid="classCoolBoardLed_1a93d545679237e8cc858324367149775c" compoundref="CoolBoardLed_8cpp" startline="142" endline="170">CoolBoardLed::fadeOut</references>
        <references refid="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="CoolBoard_8h" startline="63">fileSystem</references>
        <references refid="classCoolBoard_1a7508e029f2ee17bb747ffab599285e0d" compoundref="CoolBoard_8cpp" startline="864" endline="878">getLogInterval</references>
        <references refid="classCoolFileSystem_1a5c58bca3735c0ed3efb268d70ef998ef" compoundref="CoolFileSystem_8cpp" startline="789" endline="889">CoolFileSystem::getSensorSavedData</references>
        <references refid="classCoolFileSystem_1a5a7eaeea7a9fbf8aaef651d862fa3b5b" compoundref="CoolFileSystem_8cpp" startline="724" endline="779">CoolFileSystem::isDataSaved</references>
        <references refid="classCoolBoard_1a30b1357881b01ccbec676856a91e48e9" compoundref="CoolBoard_8h" startline="75">jetPack</references>
        <references refid="classCoolBoard_1a9be03a913d26e558328935ca3b59a75e" compoundref="CoolBoard_8h" startline="85">jetpackActive</references>
        <references refid="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="CoolBoard_8h" startline="73">mqtt</references>
        <references refid="classCoolMQTT_1aa5eaae967b562b62cbcf2b8d81f6e5d5" compoundref="CoolMQTT_8cpp" startline="244" endline="271">CoolMQTT::mqttLoop</references>
        <references refid="classCoolMQTT_1ace977b3e90ab14b1199fe5c4fb0a13ec" compoundref="CoolMQTT_8cpp" startline="152" endline="182">CoolMQTT::publish</references>
        <references refid="classCoolMQTT_1ae3c18f6ae9723746d32765f1c8f176ca" compoundref="CoolMQTT_8cpp" startline="359" endline="387">CoolMQTT::read</references>
        <references refid="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="CoolBoard_8cpp" startline="888" endline="948">readSensors</references>
        <references refid="classCoolBoard_1a50d2a6716879d64a85f3c6b44ad63275" compoundref="CoolBoard_8h" startline="69">rtc</references>
        <references refid="classCoolBoard_1a069952cdcb2e7f68518aa429eceadb6e" compoundref="CoolBoard_8cpp" startline="1004" endline="1018">sleep</references>
        <references refid="classCoolBoard_1a0a51b2287139f66c738101fb53139230" compoundref="CoolBoard_8h" startline="89">sleepActive</references>
        <references refid="classCoolBoardLed_1ad5f0de4c628cbfbf49896042831c64ad" compoundref="CoolBoardLed_8cpp" startline="176" endline="207">CoolBoardLed::strobe</references>
        <references refid="classCoolTime_1aae601f795452cfa48d9fb337aed483a8" compoundref="CoolTime_8cpp" startline="63" endline="89">CoolTime::update</references>
        <references refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" compoundref="CoolBoard_8cpp" startline="717" endline="855">update</references>
        <references refid="classCoolBoard_1a6395459131d6889a3005f79c7a35e964" compoundref="CoolBoard_8h" startline="81">userActive</references>
        <references refid="classCoolBoard_1ae7358fb6e623cfc81b775f5f1734909b" compoundref="CoolBoard_8cpp" startline="957" endline="995">userData</references>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CoolBoard::connect</definition>
        <argsstring>()</argsstring>
        <name>connect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" kindref="member">CoolBoard::connect()</ref>: This method is provided to manage the network connection and the mqtt connection.</para><para><simplesect kind="return"><para>mqtt client state </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="48" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.cpp" bodystart="111" bodyend="168"/>
        <references refid="classCoolBoardLed_1a96e1ea13003eee34c9dbcef340404426" compoundref="CoolBoardLed_8cpp" startline="74" endline="101">CoolBoardLed::blink</references>
        <references refid="classCoolMQTT_1a50075d0ab23a327ab897fd6adad20eda" compoundref="CoolMQTT_8cpp" startline="95" endline="142">CoolMQTT::connect</references>
        <references refid="classCoolWifi_1ad060353050f40d032a2dbf9e54a768bf" compoundref="CoolWifi_8cpp" startline="90" endline="189">CoolWifi::connect</references>
        <references refid="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="CoolBoard_8h" startline="67">coolBoardLed</references>
        <references refid="classCoolBoard_1a7508e029f2ee17bb747ffab599285e0d" compoundref="CoolBoard_8cpp" startline="864" endline="878">getLogInterval</references>
        <references refid="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="CoolBoard_8h" startline="73">mqtt</references>
        <references refid="classCoolWifi_1a1c7b4d82a4098d346e7593dce92039fa" compoundref="CoolWifi_8cpp" startline="67" endline="80">CoolWifi::state</references>
        <references refid="classCoolMQTT_1a5d003307eff78efbd585e42b43b72b6d" compoundref="CoolMQTT_8cpp" startline="72" endline="85">CoolMQTT::state</references>
        <references refid="classCoolBoard_1acd88e6003606b47479ebba81e4aceeca" compoundref="CoolBoard_8h" startline="71">wifiManager</references>
        <references refid="classCoolBoardLed_1a30fadd4cbec17ceea428bf7a32207e87" compoundref="CoolBoardLed_8cpp" startline="258" endline="281">CoolBoardLed::write</references>
        <referencedby refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="CoolBoard_8cpp" startline="37" endline="102">begin</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a7508e029f2ee17bb747ffab599285e0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long CoolBoard::getLogInterval</definition>
        <argsstring>()</argsstring>
        <name>getLogInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1a7508e029f2ee17bb747ffab599285e0d" kindref="member">CoolBoard::getLogInterval()</ref>: This method is provided to get the log interval</para><para><simplesect kind="return"><para>interval value in s </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="50" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.cpp" bodystart="864" bodyend="878"/>
        <references refid="classCoolBoard_1a84bc94413b64973e4aba8c467c97006c" compoundref="CoolBoard_8h" startline="91">logInterval</references>
        <referencedby refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" compoundref="CoolBoard_8cpp" startline="111" endline="168">connect</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::printConf</definition>
        <argsstring>()</argsstring>
        <name>printConf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" kindref="member">CoolBoard::printConf()</ref>: This method is provided to print the configuration to the Serial Monitor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="52" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.cpp" bodystart="673" bodyend="710"/>
        <references refid="classCoolBoard_1a638b00b76aeb819ecfd4c10b8cdd7bb7" compoundref="CoolBoard_8h" startline="87">externalSensorsActive</references>
        <references refid="classCoolBoard_1a9c3f7ac625481ee2ae802a25d97a4ae0" compoundref="CoolBoard_8h" startline="83">ireneActive</references>
        <references refid="classCoolBoard_1a9be03a913d26e558328935ca3b59a75e" compoundref="CoolBoard_8h" startline="85">jetpackActive</references>
        <references refid="classCoolBoard_1a84bc94413b64973e4aba8c467c97006c" compoundref="CoolBoard_8h" startline="91">logInterval</references>
        <references refid="classCoolBoard_1a7a8d8d3d316220cdd049cd63c1aa8fe6" compoundref="CoolBoard_8h" startline="93">serverTimeOut</references>
        <references refid="classCoolBoard_1a0a51b2287139f66c738101fb53139230" compoundref="CoolBoard_8h" startline="89">sleepActive</references>
        <references refid="classCoolBoard_1a6395459131d6889a3005f79c7a35e964" compoundref="CoolBoard_8h" startline="81">userActive</references>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1a069952cdcb2e7f68518aa429eceadb6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::sleep</definition>
        <argsstring>(unsigned long interval)</argsstring>
        <name>sleep</name>
        <param>
          <type>unsigned long</type>
          <declname>interval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolBoard::sleep(int interval): This method is provided to allow the board to enter deepSleep mode for a period of time equal to interval in s </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="54" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.cpp" bodystart="1004" bodyend="1018"/>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String CoolBoard::readSensors</definition>
        <argsstring>()</argsstring>
        <name>readSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" kindref="member">CoolBoard::readSensors()</ref>: This method is provided to read and format all the sensors data in a single json.</para><para><simplesect kind="return"><para>json string of all the sensors read. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="56" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.cpp" bodystart="888" bodyend="948"/>
        <references refid="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="CoolBoard_8h" startline="67">coolBoardLed</references>
        <references refid="classCoolBoard_1af102be5288bd7f7a8e59b13f86e26a00" compoundref="CoolBoard_8h" startline="65">coolBoardSensors</references>
        <references refid="classCoolBoard_1a09e26264839c65873eb56af476eff6b2" compoundref="CoolBoard_8h" startline="79">externalSensors</references>
        <references refid="classCoolBoard_1a638b00b76aeb819ecfd4c10b8cdd7bb7" compoundref="CoolBoard_8h" startline="87">externalSensorsActive</references>
        <references refid="classCoolBoardLed_1ab778f5e7bed0ab74e3906d82110493c3" compoundref="CoolBoardLed_8cpp" startline="107" endline="136">CoolBoardLed::fadeIn</references>
        <references refid="classCoolBoardLed_1a93d545679237e8cc858324367149775c" compoundref="CoolBoardLed_8cpp" startline="142" endline="170">CoolBoardLed::fadeOut</references>
        <references refid="classCoolTime_1a7a7501c5ca77dd1248bea704c44f986c" compoundref="CoolTime_8cpp" startline="150" endline="183">CoolTime::getTimeDate</references>
        <references refid="classCoolBoard_1ad103718ce316006c4695b8eb312eaf11" compoundref="CoolBoard_8h" startline="77">irene3000</references>
        <references refid="classCoolBoard_1a9c3f7ac625481ee2ae802a25d97a4ae0" compoundref="CoolBoard_8h" startline="83">ireneActive</references>
        <references refid="classExternalSensors_1a53177b81eca3be89508b5511ddcd00fc" compoundref="ExternalSensors_8cpp" startline="86" endline="149">ExternalSensors::read</references>
        <references refid="classCoolBoardSensors_1a91badb2539d91fda8679f2a597874c48" compoundref="CoolBoardSensors_8cpp" startline="159" endline="239">CoolBoardSensors::read</references>
        <references refid="classIrene3000_1a852a170feea994ea1df01c6b245b5d9a" compoundref="irene3000_8cpp" startline="59" endline="120">Irene3000::read</references>
        <references refid="classCoolBoard_1a50d2a6716879d64a85f3c6b44ad63275" compoundref="CoolBoard_8h" startline="69">rtc</references>
        <references refid="classCoolBoardLed_1ad5f0de4c628cbfbf49896042831c64ad" compoundref="CoolBoardLed_8cpp" startline="176" endline="207">CoolBoardLed::strobe</references>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="381" endline="472">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="classCoolBoard_1ae7358fb6e623cfc81b775f5f1734909b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String CoolBoard::userData</definition>
        <argsstring>()</argsstring>
        <name>userData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="classCoolBoard_1ae7358fb6e623cfc81b775f5f1734909b" kindref="member">CoolBoard::userData()</ref>: This method is provided to return the user&apos;s data.</para><para><simplesect kind="return"><para>json string of the user&apos;s data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="58" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.cpp" bodystart="957" bodyend="995"/>
        <references refid="classCoolTime_1ac4f32ee513c1328d984306645e8785a4" compoundref="CoolTime_8cpp" startline="193" endline="221">CoolTime::getESDate</references>
        <references refid="classCoolMQTT_1a373cc92fca7760d886f02d8a6e5b3f63" compoundref="CoolMQTT_8cpp" startline="660" endline="673">CoolMQTT::getUser</references>
        <references refid="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="CoolBoard_8h" startline="73">mqtt</references>
        <references refid="classCoolBoard_1a50d2a6716879d64a85f3c6b44ad63275" compoundref="CoolBoard_8h" startline="69">rtc</references>
        <referencedby refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" compoundref="CoolBoard_8cpp" startline="381" endline="472">offLineMode</referencedby>
        <referencedby refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" compoundref="CoolBoard_8cpp" startline="180" endline="371">onLineMode</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class manages the <ref refid="classCoolBoard" kindref="compound">CoolBoard</ref> and all of Its functions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="17">
        <label>CoolBoardSensors::lightActive</label>
        <link refid="structCoolBoardSensors_1_1lightActive"/>
      </node>
      <node id="12">
        <label>ExternalSensors</label>
        <link refid="classExternalSensors"/>
        <childnode refid="13" relation="usage">
          <edgelabel>-sensors</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>Irene3000::parameters_T</label>
        <link refid="structIrene3000_1_1parameters__T"/>
      </node>
      <node id="14">
        <label>BaseExternalSensor</label>
        <link refid="classBaseExternalSensor"/>
      </node>
      <node id="10">
        <label>CoolWifi</label>
        <link refid="classCoolWifi"/>
      </node>
      <node id="13">
        <label>ExternalSensors::sensor</label>
        <link refid="structExternalSensors_1_1sensor"/>
        <childnode refid="14" relation="usage">
          <edgelabel>+exSensor</edgelabel>
        </childnode>
      </node>
      <node id="9">
        <label>CoolMQTT</label>
        <link refid="classCoolMQTT"/>
      </node>
      <node id="15">
        <label>CoolBoardSensors</label>
        <link refid="classCoolBoardSensors"/>
        <childnode refid="16" relation="usage">
          <edgelabel>-airDataActive</edgelabel>
        </childnode>
        <childnode refid="17" relation="usage">
          <edgelabel>-lightDataActive</edgelabel>
        </childnode>
      </node>
      <node id="18">
        <label>Irene3000</label>
        <link refid="classIrene3000"/>
        <childnode refid="19" relation="usage">
          <edgelabel>-waterTemp</edgelabel>
          <edgelabel>-phProbe</edgelabel>
          <edgelabel>-adc2</edgelabel>
        </childnode>
        <childnode refid="20" relation="usage">
          <edgelabel>-params</edgelabel>
        </childnode>
      </node>
      <node id="22">
        <label>Jetpack</label>
        <link refid="classJetpack"/>
        <childnode refid="23" relation="usage">
          <edgelabel>-actors</edgelabel>
        </childnode>
      </node>
      <node id="24">
        <label>CoolTime</label>
        <link refid="classCoolTime"/>
      </node>
      <node id="16">
        <label>CoolBoardSensors::airActive</label>
        <link refid="structCoolBoardSensors_1_1airActive"/>
      </node>
      <node id="19">
        <label>Irene3000::state</label>
        <link refid="structIrene3000_1_1state"/>
      </node>
      <node id="23">
        <label>Jetpack::state</label>
        <link refid="structJetpack_1_1state"/>
      </node>
      <node id="21">
        <label>CoolFileSystem</label>
        <link refid="classCoolFileSystem"/>
      </node>
      <node id="8">
        <label>CoolBoard</label>
        <link refid="classCoolBoard"/>
        <childnode refid="9" relation="usage">
          <edgelabel>-mqtt</edgelabel>
        </childnode>
        <childnode refid="10" relation="usage">
          <edgelabel>-wifiManager</edgelabel>
        </childnode>
        <childnode refid="11" relation="usage">
          <edgelabel>-coolBoardLed</edgelabel>
        </childnode>
        <childnode refid="12" relation="usage">
          <edgelabel>-externalSensors</edgelabel>
        </childnode>
        <childnode refid="15" relation="usage">
          <edgelabel>-coolBoardSensors</edgelabel>
        </childnode>
        <childnode refid="18" relation="usage">
          <edgelabel>-irene3000</edgelabel>
        </childnode>
        <childnode refid="21" relation="usage">
          <edgelabel>-fileSystem</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>-jetPack</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>-rtc</edgelabel>
        </childnode>
      </node>
      <node id="11">
        <label>CoolBoardLed</label>
        <link refid="classCoolBoardLed"/>
      </node>
    </collaborationgraph>
    <location file="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" line="34" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/CoolBoard.h" bodystart="33" bodyend="100"/>
    <listofallmembers>
      <member refid="classCoolBoard_1a7b835fafd449e5282f7f91d787a2dc15" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>answer</name></member>
      <member refid="classCoolBoard_1acba7c5aef7268b2c0044bdb54d3b9d76" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>begin</name></member>
      <member refid="classCoolBoard_1a583a874c09c07e70a6eb9229fc4beddb" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>config</name></member>
      <member refid="classCoolBoard_1a519de78b807f8ec6463ff484eb925918" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>connect</name></member>
      <member refid="classCoolBoard_1a1b1d3c684a5baa56b08486e192fd8e97" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>coolBoardLed</name></member>
      <member refid="classCoolBoard_1af102be5288bd7f7a8e59b13f86e26a00" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>coolBoardSensors</name></member>
      <member refid="classCoolBoard_1a427fb753dd8575bdf821c70a5c63d695" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>data</name></member>
      <member refid="classCoolBoard_1a09e26264839c65873eb56af476eff6b2" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>externalSensors</name></member>
      <member refid="classCoolBoard_1a638b00b76aeb819ecfd4c10b8cdd7bb7" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>externalSensorsActive</name></member>
      <member refid="classCoolBoard_1a42c2586fbb13ff7f06538e9284e8538d" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>fileSystem</name></member>
      <member refid="classCoolBoard_1a7508e029f2ee17bb747ffab599285e0d" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>getLogInterval</name></member>
      <member refid="classCoolBoard_1ad103718ce316006c4695b8eb312eaf11" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>irene3000</name></member>
      <member refid="classCoolBoard_1a9c3f7ac625481ee2ae802a25d97a4ae0" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>ireneActive</name></member>
      <member refid="classCoolBoard_1a30b1357881b01ccbec676856a91e48e9" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>jetPack</name></member>
      <member refid="classCoolBoard_1a9be03a913d26e558328935ca3b59a75e" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>jetpackActive</name></member>
      <member refid="classCoolBoard_1a84bc94413b64973e4aba8c467c97006c" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>logInterval</name></member>
      <member refid="classCoolBoard_1a2399f44d7c23c1149a335cb3b46d90f1" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>mqtt</name></member>
      <member refid="classCoolBoard_1ae6b5e1274d760462290192acea4adca8" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>offLineMode</name></member>
      <member refid="classCoolBoard_1aa0bbc4bc605e35618d18e68795c61363" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>onLineMode</name></member>
      <member refid="classCoolBoard_1a486507b8f0981d3cc671ed31c2145755" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>printConf</name></member>
      <member refid="classCoolBoard_1ad03abdce2e65f520bbf2cff0f2d083cf" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>readSensors</name></member>
      <member refid="classCoolBoard_1a50d2a6716879d64a85f3c6b44ad63275" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>rtc</name></member>
      <member refid="classCoolBoard_1a7a8d8d3d316220cdd049cd63c1aa8fe6" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>serverTimeOut</name></member>
      <member refid="classCoolBoard_1a069952cdcb2e7f68518aa429eceadb6e" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>sleep</name></member>
      <member refid="classCoolBoard_1a0a51b2287139f66c738101fb53139230" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>sleepActive</name></member>
      <member refid="classCoolBoard_1a8612756d3f73198cdde857a66f0fe690" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>update</name></member>
      <member refid="classCoolBoard_1a6395459131d6889a3005f79c7a35e964" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>userActive</name></member>
      <member refid="classCoolBoard_1ae7358fb6e623cfc81b775f5f1734909b" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>userData</name></member>
      <member refid="classCoolBoard_1acd88e6003606b47479ebba81e4aceeca" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>wifiManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
