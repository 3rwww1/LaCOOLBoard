{\rtf1\ansi\ansicpg1252\uc1 \deff0\deflang1033\deflangfe1033
{\fonttbl {\f0\froman\fcharset0\fprq2{\*\panose 02020603050405020304}Times New Roman;}
{\f1\fswiss\fcharset0\fprq2{\*\panose 020b0604020202020204}Arial;}
{\f2\fmodern\fcharset0\fprq1{\*\panose 02070309020205020404}Courier New;}
{\f3\froman\fcharset2\fprq2{\*\panose 05050102010706020507}Symbol;}
}
{\colortbl;\red0\green0\blue0;\red0\green0\blue255;\red0\green255\blue255;\red0\green255\blue0;\red255\green0\blue255;\red255\green0\blue0;\red255\green255\blue0;\red255\green255\blue255;\red0\green0\blue128;\red0\green128\blue128;\red0\green128\blue0;\red128\green0\blue128;\red128\green0\blue0;\red128\green128\blue0;\red128\green128\blue128;\red192\green192\blue192;}
{\stylesheet
{\widctlpar\adjustright \fs20\cgrid \snext0 Normal;}
{\paperw11900\paperh16840\margl1800\margr1800\margt1440\margb1440\gutter0\ltrsect}
{\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid \sbasedon0 \snext0 heading 1;}
{\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid \sbasedon0 \snext0 heading 2;}
{\s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid \sbasedon0 \snext0 heading 3;}
{\s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 4;}{\*\cs10 \additive Default Paragraph Font;}
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext0 heading 5;}{\*\cs10 \additive Default Paragraph Font;}
{\s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid \sbasedon0 \snext15 Title;}
{\s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid \sbasedon0 \snext16 Subtitle;}
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid \sbasedon0 \snext17 BodyText;}
{\s18\widctlpar\fs22\cgrid \sbasedon0 \snext18 DenseText;}
{\s28\widctlpar\tqc\tx4320\tqr\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext28 header;}
{\s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid \sbasedon0 \snext29 footer;}
{\s30\li360\sa60\sb120\keepn\widctlpar\adjustright \b\f1\fs20\cgrid \sbasedon0 \snext30 GroupHeader;}
{\s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext41 Code Example 0;}
{\s41\li360\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext42 Code Example 1;}
{\s42\li720\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext43 Code Example 2;}
{\s43\li1080\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext44 Code Example 3;}
{\s44\li1440\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext45 Code Example 4;}
{\s45\li1800\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext46 Code Example 5;}
{\s46\li2160\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext47 Code Example 6;}
{\s47\li2520\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext48 Code Example 7;}
{\s48\li2880\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 8;}
{\s49\li3240\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid \sbasedon0 \snext49 Code Example 9;}
{\s50\li0\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext51 List Continue 0;}
{\s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext52 List Continue 1;}
{\s52\li720\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext53 List Continue 2;}
{\s53\li1080\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext54 List Continue 3;}
{\s54\li1440\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext55 List Continue 4;}
{\s55\li1800\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext56 List Continue 5;}
{\s56\li2160\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext57 List Continue 6;}
{\s57\li2520\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext58 List Continue 7;}
{\s58\li2880\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 8;}
{\s59\li3240\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid \sbasedon0 \snext59 List Continue 9;}
{\s60\li0\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext61 DescContinue 0;}
{\s61\li360\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext62 DescContinue 1;}
{\s62\li720\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext63 DescContinue 2;}
{\s63\li1080\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext64 DescContinue 3;}
{\s64\li1440\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext65 DescContinue 4;}
{\s65\li1800\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext66 DescContinue 5;}
{\s66\li2160\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext67 DescContinue 6;}
{\s67\li2520\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext68 DescContinue 7;}
{\s68\li2880\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 8;}
{\s69\li3240\widctlpar\ql\adjustright \fs20\cgrid \sbasedon0 \snext69 DescContinue 9;}
{\s70\li0\sa30\sb30\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext81 LatexTOC 0;}
{\s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext82 LatexTOC 1;}
{\s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext83 LatexTOC 2;}
{\s73\li1080\sa21\sb21\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext84 LatexTOC 3;}
{\s74\li1440\sa18\sb18\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext85 LatexTOC 4;}
{\s75\li1800\sa15\sb15\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext86 LatexTOC 5;}
{\s76\li2160\sa12\sb12\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext87 LatexTOC 6;}
{\s77\li2520\sa9\sb9\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext88 LatexTOC 7;}
{\s78\li2880\sa6\sb6\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 8;}
{\s79\li3240\sa3\sb3\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid \sbasedon0 \snext89 LatexTOC 9;}
{\s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid \sbasedon0 \snext81 \sautoupd List Bullet 0;}
{\s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid \sbasedon0 \snext82 \sautoupd List Bullet 1;}
{\s82\fi-360\li1080\widctlpar\jclisttab\tx1080{\*\pn \pnlvlbody\ilvl0\ls3\pnrnot0\pndec }\ls3\adjustright \fs20\cgrid \sbasedon0 \snext83 \sautoupd List Bullet 2;}
{\s83\fi-360\li1440\widctlpar\jclisttab\tx1440{\*\pn \pnlvlbody\ilvl0\ls4\pnrnot0\pndec }\ls4\adjustright \fs20\cgrid \sbasedon0 \snext84 \sautoupd List Bullet 3;}
{\s84\fi-360\li1800\widctlpar\jclisttab\tx1800{\*\pn \pnlvlbody\ilvl0\ls5\pnrnot0\pndec }\ls5\adjustright \fs20\cgrid \sbasedon0 \snext85 \sautoupd List Bullet 4;}
{\s85\fi-360\li2160\widctlpar\jclisttab\tx2160{\*\pn \pnlvlbody\ilvl0\ls6\pnrnot0\pndec }\ls6\adjustright \fs20\cgrid \sbasedon0 \snext86 \sautoupd List Bullet 5;}
{\s86\fi-360\li2520\widctlpar\jclisttab\tx2520{\*\pn \pnlvlbody\ilvl0\ls7\pnrnot0\pndec }\ls7\adjustright \fs20\cgrid \sbasedon0 \snext87 \sautoupd List Bullet 6;}
{\s87\fi-360\li2880\widctlpar\jclisttab\tx2880{\*\pn \pnlvlbody\ilvl0\ls8\pnrnot0\pndec }\ls8\adjustright \fs20\cgrid \sbasedon0 \snext88 \sautoupd List Bullet 7;}
{\s88\fi-360\li3240\widctlpar\jclisttab\tx3240{\*\pn \pnlvlbody\ilvl0\ls9\pnrnot0\pndec }\ls9\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 8;}
{\s89\fi-360\li3600\widctlpar\jclisttab\tx3600{\*\pn \pnlvlbody\ilvl0\ls10\pnrnot0\pndec }\ls10\adjustright \fs20\cgrid \sbasedon0 \snext89 \sautoupd List Bullet 9;}
{\s90\fi-360\li360\widctlpar\fs20\cgrid \sbasedon0 \snext91 \sautoupd List Enum 0;}
{\s91\fi-360\li720\widctlpar\fs20\cgrid \sbasedon0 \snext92 \sautoupd List Enum 1;}
{\s92\fi-360\li1080\widctlpar\fs20\cgrid \sbasedon0 \snext93 \sautoupd List Enum 2;}
{\s93\fi-360\li1440\widctlpar\fs20\cgrid \sbasedon0 \snext94 \sautoupd List Enum 3;}
{\s94\fi-360\li1800\widctlpar\fs20\cgrid \sbasedon0 \snext95 \sautoupd List Enum 4;}
{\s95\fi-360\li2160\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s96\fi-360\li2520\widctlpar\fs20\cgrid \sbasedon0 \snext96 \sautoupd List Enum 5;}
{\s97\fi-360\li2880\widctlpar\fs20\cgrid \sbasedon0 \snext98 \sautoupd List Enum 7;}
{\s98\fi-360\li3240\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 8;}
{\s99\fi-360\li3600\widctlpar\fs20\cgrid \sbasedon0 \snext99 \sautoupd List Enum 9;}
}
{\info 
{\title {\comment CoolBoard API }CoolBoard API}
{\comment Generated byDoxgyen. }
{\creatim \yr2017\mo9\dy4\hr15\min0\sec46}
}\pard\plain 
\sectd\pgnlcrm
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\vertalc\qc\par\par\par\par\par\par\par
\pard\plain \s15\qc\sb240\sa60\widctlpar\outlinelevel0\adjustright \b\f1\fs32\kerning28\cgrid 
{\field\fldedit {\*\fldinst TITLE \\*MERGEFORMAT}{\fldrslt CoolBoard API}}\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
\par
\par\par\par\par\par\par\par\par\par\par\par\par
\pard\plain \s16\qc\sa60\widctlpar\outlinelevel1\adjustright \f1\cgrid 
{\field\fldedit {\*\fldinst AUTHOR \\*MERGEFORMAT}{\fldrslt AUTHOR}}\par
Version \par{\field\fldedit {\*\fldinst CREATEDATE \\*MERGEFORMAT}{\fldrslt Mon Sep 4 2017 }}\par
\page\page\vertalt
\pard\plain 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Table of Contents\par
\pard\plain \par
{\field\fldedit {\*\fldinst TOC \\f \\*MERGEFORMAT}{\fldrslt Table of contents}}\par
\pard\plain 
\sect \sbkpage \pgndec \pgnrestart
\sect \sectd \sbknone
{\footer \s29\widctlpar\tqc\tx4320\tqr\tx8640\qr\adjustright \fs20\cgrid {\chpgn}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
README{\tc \v README}\par \pard\plain 
{\bkmkstart AAAAAAABIK}
{\bkmkend AAAAAAABIK}
\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 What is this repository for?} \par}
Quick summary :\par
{\b CoolBoard} API is a set of libraries and wrappers to simplify the access and usage of all the capabilites of the {\b CoolBoard}.\par
Version : 1.0\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 How do I get set up?} \par}
Configuration :\par
1/Download and Install the Arduino IDE ({\f2 https://www.arduino.cc/en/Main/Software} )\par
2/Download and Add the ESP8266 Hardware extension to Arduino ({\f2 https://github.com/esp8266/Arduino} )\par
3/Download and Add the {\b CoolBoard} Library set to the Arduino IDE :\par
a)First Method :\par
-Open the Arduino IDE\par
-Go to the "Sketch" Menu\par
-Include Library > Manage Libraries.\par
-Search for {\b CoolBoard}\par
-Install\par
-Restart Arduino IDE\par
b)Second Method (if you have a CoolBoard.zip file ):\par
-Open the Arduino IDE\par
-Go to the "Sketch" Menu\par
-Include Library > "Add .ZIP Library".\par
-Search for CoolBoard.zip\par
-Click Open\par
-Restart Arduino IDE\par
c)Third Method (if you have the bitbucket/github link):\par
-Open Arduino IDE > File > Preferences\par
-Check the "SketchBook Location" path\par
-Go to the Arduino/libraries folder (if it doesn't exist, create one )\par
-Clone the repo there ( git clone "bitbucket/github link" )\par
-Restart Arduino IDE\par
4/Download ESP8266FS Tool ({\f2 https://arduino-esp8266.readthedocs.io/en/latest/filesystem.html#uploading-files-to-file-system})\par
5/Optional but Heavily Recommended : Download the ESP8266 Exception Decoder ( download link :{\f2 https://github.com/me-no-dev/EspExceptionDecoder/releases/tag/1.0.6}) Install guide : {\f2 https://github.com/me-no-dev/EspExceptionDecoder}\par
Dependencies :\par
You need the following libraries to be able to use the {\b CoolBoard} API:\par
-ArduinoJson({\f2 https://github.com/bblanchon/ArduinoJson})\par
-NeoPixelBus({\f2 https://github.com/Makuna/NeoPixelBus})\par
-TimeLib({\f2 https://github.com/PaulStoffregen/Time})\par
-DS1337RTC({\f2 https://github.com/etrombly/DS1337RTC})\par
-DallasTemperature({\f2 https://github.com/milesburton/Arduino-Temperature-Control-Library})\par
Configuration Files :\par
-The {\b CoolBoard} API heavily uses the SPIFFS for storing and retreiving configuration and data files\par
This is a description of the configuration files and what are they used for :\par
1/coolBoardConfig.json :\par
logInterval: The time Interval to wait,in seconds, between two logs\par
ireneActive: Put this flag to 1(true) if you are using the {\b Irene3000} module\par
jetpackActive:Put this flag to 1(true) if you are using the {\b Jetpack} modue\par
externalSensorsActive: Put this flag to 1(true) if you are using a supported external Sensor\par
sleepActive: Put this flag to 1(true) if you want your {\b CoolBoard} to enable Sleep mode In Sleep Mode : your {\b CoolBoard} will do the following : -readSensors -activate Actors(if any) -log the data -check for updates -go to sleep for logInterval period of time\par
userActive:Put this flag to 1(true) if you want your {\b CoolBoard} to collect userData : userName {\b CoolBoard} MAC Address TimeStamp\par
manual /!\\ : Put this flag to 1(true) to control to turn on/off your actors and bypass your initial actors configuration {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid          Be Careful with this mode!!.\par
\par
         When this mode is actif , the CoolBoard will not restart automatically to apply any new configuration sent via\par
         the update method.\par
\par
         Restarting the coolBoard when in manual mode will deactivate all the actors!\par
\par
         Never forget to reset this to 0(false) to go back to normal mode!\par
}
\par
2/coolBoardLedConfig.json:\par
ledActive: Put this flag to 1(true) if you want to have Light Effects from the on Board LED\par
3/coolBoardSensorsConfig.json:\par
temperature : Put this flag to 1(true) if you want to collect the Temperature using the {\b BME280} Sensor\par
humidity : Put this flag to 1(true) if you want to collect the humidity using the {\b BME280} Sensor\par
pressure : Put this flag to 1(true) if you want to collect the pressure using the {\b BME280} Sensor\par
visible : Put this flag to 1(true) if you want to collect the visible light index using the SI114X Sensor\par
ir : Put this flag to 1(true) if you want to collect the infrared light index using the SI114X Sensor\par
uv : Put this flag to 1(true) if you want to collect the ultraviolet light index using the SI114X Sensor\par
vbat : Put this flag to 1(true) if you want to collect the battery voltage\par
soilMoisture : Put this flag to 1(true) if you want to collect the soil Moisture\par
4/externalSensorsConfig.json:\par
sensorsNumber: the number of supported external sensors you connect to the coolBoard\par
reference: the reference of a supported external sensor(e.g {\b NDIR_I2C} , DallasTemperature )\par
type: the type of the measurments you are making (e.g : co2, temperature,voltage ... )\par
address : the sensor's address , if it has one (e.g : {\b NDIR_I2C} CO2 sensor's address is 77 )\par
5/irene3000Config.json:\par
waterTemp.active: Put this flag to 1(true) in order to use the temperature sensor connected to the {\b Irene3000}\par
phProbe.active: Put this flag to 1(true) in order to use the ph sensor connected to the {\b Irene3000}\par
adc2.active: Put this flag to 1(true) in order to use the extra ADC input of the {\b Irene3000}\par
adc2.gain: this is the value of the gain applied to the extra ADC input of the {\b Irene3000}\par
adc2.type: the type of the measurments you are making (e.g : co2, temperature,voltage ... )\par
6/jetPackConfig.json and coolBoardActorConfig.json:\par
Act[i].actif: Put this flag to 1(true) in order to use the jetpack output N\'EF\'BF\'BDi (0..7)\par
Act[i].inverted:Put this flag to 1(true) if the actor is inverted (e.g : a cooler is activated when Temp>TempMax) Put this flag to 0(false) if the actor is notInverted(e.g : a heater is activated when Temp<TempMin)\par
Act[i].temporal:Put this flag to 1(true) if you want the actor to be actif of a period of time , then inactif for another period of time.\par
Act[i].type:["primaryType","secondaryType"] : this array contains the priamryType and the secondaryType of the actor -The primaryType is the type associated to the sensors. (e.g : primaryType : "Temperature" is associated to the sensor of type "Temperature"). -It can also be empty , in case of PURE temporal actors\par
{
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid                                              -The secondaryType is only used in temporal mode.\par
                                             it can be : -"" (empty):the actor will be on for a period of timeHigh ms\par
                                                                     the actor will be off for a period of timeLow ms\par
\par
                                                         -"hour" :the actor will be on when the Hour is equal or greater then hourHigh\par
                                                                  the actor will be off when the Hour is equal or greater then hourLow\par
\par
                                                         -"minute":the actor will be on when the Minute is equal or greater then minuteHigh\par
                                                                  :the actor will be off when the Minute is equal or greater then minuteLow\par
\par
                                                         -"hourMinute":the actor will be on when : Hour == hourHigh AND Minute >= minuteHigh\par
                                                                                                   Hour > hourHigh\par
                                                                       the actor will be off when : Hour == hourLow AND Minute >= minuteLow\par
                                                                                                    Hour>hourLow\par
\par
                                              /!\\ NOTE  that if both primaryType and secondaryType are valid : the actor will be in\par
                                                 mixed mode : it will need to valid both Time and measurment conditions to go on or off\par
\par
Act[i].low:[rangeLow,timeLow,hourLow,minuteLow] : this array contains the values previously described:\par
                                                  -rangeLow is the minimum of the range at which \par
                                                  to activate(deactivate in inverted mode) the actor\par
\par
                                                  -timeLow is the time spent off in temporal mode\par
\par
                                                  -hourLow is the hour to turn off the actor when secondaryType is hour or hourMinute\par
\par
                                                  -minuteLow is the minute to turn off the actor when secondaryType is minute or hourMinute\par
\par
\par
Act[i].high:[rangeHigh,timeHigh,hourHigh,minuteHigh]: this array contains the values previously described:\par
                                                  -rangeHigh is the maximum of the range at which \par
                                                  to deactivate(activate in inverted mode) the actor\par
\par
                                                  -timeHigh is the time spent on in temporal mode\par
\par
                                                  -hourHigh is the hour to turn on the actor when secondaryType is hour or hourMinute\par
\par
                                                  -minuteHigh is the minute to turn on the actor when secondaryType is minute or hourMinute\par
\par
\par
   Note that the coolBoardActorConfig.json contains only one Actor.\par
}
\par
7/mqttConfig.json:\par
mqttServer: This is the mqttServer (ip/url) address\par
user: This is the userId\par
bufferSize: This is the memory allocated to the mqtt buffer in bytes\par
inTopic : this is the topic that the coolBoard subscribes to (receives updates from )\par
outTopic : this is the topic that the coolBoard will publish to.\par
8/rtcConfig.json:\par
timeServer: NTP server ip address\par
localPort: port used to make the NTP request to update the time\par
9/wifiConfig.json:\par
wifiCount: the number of wifis saved in this configuration file\par
timeOut:access point timeout in seconds.\par
nomad: put this flag to 1(true) to activate nomad mode. in nomad mode : the coolBoard will only try to connect to known WiFis. if it fails it will NOT lunch the access point.\par
How to run the exemples : {
\par
\pard\plain \s40\li0\widctlpar\adjustright \shading1000\cbpat8 \f2\fs16\cgrid -Open Arduino IDE \par
\par
-File > Exemples > CoolBoard\par
\par
-Select the Exemple you want\par
\par
-Flash it\par
\par
-Flash the SPIFFS ( this is only required for the CoolBoardExemple, CoolBoardFarmExemple and CoolBoardStationExemple)\par
\par
-Open The Serial Monitor\par
\par
-Sit back and Enjoy!\par
}
\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 Contribution guidelines} \par}
For minor fixes of code and documentation, please go ahead and submit a pull request.\par
Larger changes (rewriting parts of existing code from scratch, adding new functions to the core, adding new libraries) should generally be discussed by opening an issue first.\par
Feature branches with lots of small commits (especially titled "oops", "fix typo", "forgot to add file", etc.) should be squashed before opening a pull request. At the same time, please refrain from putting multiple unrelated changes into a single pull request.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 License and credits} \par}
All files under src/internal are modified versions of existing libraries. All Credit of the original work goes to their respective authors.\par
All Other files are provided as is under the MIT license :\par
Copyright (c) 2017 La Cool Co SAS\par
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.\par
We can only gurantee that we did our best to have everything working on our side.\par
{\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {\tc\tcl4 Who do I talk to?} \par}
If you encounter a problem , have a good idea or just want to talk\par
Please open an issue, a pull request or send us an email :\par
La Cool Co {\f2 team@lacool.co} \par
}}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Hierarchical Index\par \pard\plain 
{\tc \v Hierarchical Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class Hierarchy\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This inheritance list is sorted roughly, but not completely, alphabetically:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Adafruit_ADS1015\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
Adafruit_ADS1115\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
CoolBoardSensors::airActive\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
BaseExternalSensor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARY \\*MERGEFORMAT}{\fldrslt pagenum}}
{
\par
\pard\plain \s72\li720\sa24\sb24\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
ExternalSensor< T >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExternalSensor< DallasTemperature >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExternalSensor< NDIR_I2C >\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}\par
BME280\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolBoard\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolBoardActor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolBoardLed\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolBoardSensors\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolFileSystem\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolMQTT\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolPubSubClient\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolSI114X\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolTime\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolWifi\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExternalSensors\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Irene3000\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Jetpack\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolBoardSensors::lightActive\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
NDIR_I2C\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Irene3000::parameters_T\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
ExternalSensors::sensor\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SensorCalibration\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
SensorSettings\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Irene3000::state\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
Jetpack::state\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
CoolBoardActor::state\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
WiFiManager\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
WiFiManagerParameter\tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Index\par \pard\plain 
{\tc \v Class Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Class List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here are the classes, structs, unions and interfaces with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b Adafruit_ADS1015} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Adafruit_ADS1115} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BaseExternalSensor} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a generic external Sensor it is a way to access real external sensor methods through run Time polymorphism })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b BME280} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoard} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b CoolBoard} and all of Its functions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAASZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoardActor} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b CoolBoardActor} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAUI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoardLed} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the led in the Sensor Board })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoardSensors} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the On-Board Sensors })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAVQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolFileSystem} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the file system })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolMQTT} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the mqtt client })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAWV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolPubSubClient} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAXS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolSI114X} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolTime} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the DS1337 RTC })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABAO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolWifi} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the WiFi connection })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABBK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExternalSensor< T >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Template<class SensorClass> class External Sensor: Derived class from {\b BaseExternalSensor} })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExternalSensor< DallasTemperature >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DallasTemperature Specialization Class This is the template specialization for the Dallas Temperature sensor })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCD \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExternalSensor< NDIR_I2C >} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b NDIR_I2C} Specialization Class This is the template specialization for the {\b NDIR_I2C} CO2 sensor })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExternalSensors} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the external sensors run time defintion , configuartion and actions })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Irene3000} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is provided to manage the {\b Irene3000} Ph/Temperature Shield })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABCS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Jetpack} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b Jetpack} shield })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABDP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b NDIR_I2C} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABEN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WiFiManager} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABFA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WiFiManagerParameter} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAABHR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Index\par \pard\plain 
{\tc \v File Index}
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
File List\par \pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Here is a list of all files with brief descriptions:}
{
\par
\pard\plain \s71\li360\sa27\sb27\widctlpar\tqr\tldot\tx8640\adjustright \fs20\cgrid 
{\b {\b CoolAdafruit_ADS1015.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolAdafruit_ADS1015.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAAF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoard.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard} Source file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACO \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoard.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard} Header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACQ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoardActor.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardActor} Source file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACR \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoardActor.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardActor} Header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAACT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoardLed.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed} Source file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADK \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoardLed.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed} Header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADM \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoardSensors.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors} Source file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolBoardSensors.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors} Header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADP \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolFileSystem.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolFileSystem} Source file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAADY \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolFileSystem.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolFileSystem} Header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolMQTT.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT} Source file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEB \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolMQTT.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT} Header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAED \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolNDIR_I2C.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAEE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolNDIR_I2C.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFI \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolPubSubClient.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolPubSubClient.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAFL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolSI114X.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolSI114X.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAGW \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolSparkFunBME280.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALS \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolSparkFunBME280.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAALT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolTime.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime} Source file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOT \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolTime.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime} Header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOV \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolWifi.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi} Source file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOX \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b CoolWifi.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi} Header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAOZ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExternalSensor.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensor} Header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExternalSensors.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensors} Source file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b ExternalSensors.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensors} header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Irene3000.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000} Source file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPL \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Irene3000.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000} Header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAPN \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Jetpack.cpp} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Jetpack} Source file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQH \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b Jetpack.h} ({\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Jetpack} Header file })} \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAAQJ \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b parse.js} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARA \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b template.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARC \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WiFiManagerReadFileButton.cpp} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARE \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
{\b {\b WiFiManagerReadFileButton.h} } \tab {\field\fldedit {\*\fldinst PAGEREF AAAAAAAARF \\*MERGEFORMAT}{\fldrslt pagenum}}
\par
\par}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
Class Documentation{\tc \v Class Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Adafruit_ADS1015 Class Reference\par \pard\plain 
{\tc\tcl2 \v Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015}
{\bkmkstart AAAAAAAARI}
{\bkmkend AAAAAAAARI}
\par
{
{\f2 #include <CoolAdafruit_ADS1015.h>}}\par
Inheritance diagram for Adafruit_ADS1015:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d7a/class_adafruit___a_d_s1015__inherit__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Adafruit_ADS1015:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d64/class_adafruit___a_d_s1015__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adafruit_ADS1015} (uint8_t i2cAddress={\b ADS1015_ADDRESS})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new ADS1015 class w/appropriate properties. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets up the HW (reads coefficients values, etc.) }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b readADC_SingleEnded} (uint8_t channel)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a single-ended ADC reading from the specified channel. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b readADC_Differential_0_1} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads the conversion results, measuring the voltage difference between the P (AIN0) and N (AIN1) input. Generates a signed value since the difference can be either positive or negative. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b readADC_Differential_2_3} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads the conversion results, measuring the voltage difference between the P (AIN2) and N (AIN3) input. Generates a signed value since the difference can be either positive or negative. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b startComparator_SingleEnded} (uint8_t channel, int16_t threshold)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets up the comparator to operate in basic mode, causing the ALERT/RDY pin to assert (go from high to low) when the ADC value exceeds the specified threshold. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b getLastConversionResults} ()\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In order to clear the comparator, we need to read the conversion results. This function reads the last conversion results without changing the config value. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setGain} ({\b adsGain_t} gain)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gain and input voltage range. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b adsGain_t} {\b getGain} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a gain and input voltage range. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Protected Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b m_i2cAddress}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b m_conversionDelay}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b m_bitShift}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b adsGain_t} {\b m_gain}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 119 of file CoolAdafruit_ADS1015.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Adafruit_ADS1015\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:Adafruit_ADS1015}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Adafruit_ADS1015::Adafruit_ADS1015 (uint8_t  {\i i2cAddress} = {\f2 {\b ADS1015_ADDRESS}})}}
\par
{\bkmkstart AAAAAAAARJ}
{\bkmkend AAAAAAAARJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new ADS1015 class w/appropriate properties. }}\par
{
Definition at line 88 of file CoolAdafruit_ADS1015.cpp.}\par
{
References ADS1015_CONVERSIONDELAY, GAIN_TWOTHIRDS, m_bitShift, m_conversionDelay, m_gain, and m_i2cAddress.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_ADS1015::begin (void )}}
\par
{\bkmkstart AAAAAAAARK}
{\bkmkend AAAAAAAARK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets up the HW (reads coefficients values, etc.) }}\par
{
Definition at line 114 of file CoolAdafruit_ADS1015.cpp.}\par
{
Referenced by Irene3000::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df6/class_adafruit___a_d_s1015_a6eba7c3cd854927f60883bb371e5faa6_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readADC_SingleEnded\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:readADC_SingleEnded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t Adafruit_ADS1015::readADC_SingleEnded (uint8_t  {\i channel})}}
\par
{\bkmkstart AAAAAAAARL}
{\bkmkend AAAAAAAARL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a single-ended ADC reading from the specified channel. }}\par
{
Definition at line 143 of file CoolAdafruit_ADS1015.cpp.}\par
{
References ADS1015_REG_CONFIG_CLAT_NONLAT, ADS1015_REG_CONFIG_CMODE_TRAD, ADS1015_REG_CONFIG_CPOL_ACTVLOW, ADS1015_REG_CONFIG_CQUE_NONE, ADS1015_REG_CONFIG_DR_1600SPS, ADS1015_REG_CONFIG_MODE_SINGLE, ADS1015_REG_CONFIG_MUX_SINGLE_0, ADS1015_REG_CONFIG_MUX_SINGLE_1, ADS1015_REG_CONFIG_MUX_SINGLE_2, ADS1015_REG_CONFIG_MUX_SINGLE_3, ADS1015_REG_CONFIG_OS_SINGLE, ADS1015_REG_POINTER_CONFIG, ADS1015_REG_POINTER_CONVERT, m_bitShift, m_conversionDelay, m_gain, m_i2cAddress, readRegister(), and writeRegister().}\par
{
Referenced by Irene3000::calibratepH4(), Irene3000::calibratepH7(), Irene3000::readADSChannel2(), Irene3000::readButton(), Irene3000::readPh(), and Irene3000::readTemp().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df6/class_adafruit___a_d_s1015_a40f38b9e1f3ec397c0670dd632510235_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df6/class_adafruit___a_d_s1015_a40f38b9e1f3ec397c0670dd632510235_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readADC_Differential_0_1\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:readADC_Differential_0_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t Adafruit_ADS1015::readADC_Differential_0_1 (void )}}
\par
{\bkmkstart AAAAAAAARM}
{\bkmkend AAAAAAAARM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads the conversion results, measuring the voltage difference between the P (AIN0) and N (AIN1) input. Generates a signed value since the difference can be either positive or negative. }}\par
{
Definition at line 199 of file CoolAdafruit_ADS1015.cpp.}\par
{
References ADS1015_REG_CONFIG_CLAT_NONLAT, ADS1015_REG_CONFIG_CMODE_TRAD, ADS1015_REG_CONFIG_CPOL_ACTVLOW, ADS1015_REG_CONFIG_CQUE_NONE, ADS1015_REG_CONFIG_DR_1600SPS, ADS1015_REG_CONFIG_MODE_SINGLE, ADS1015_REG_CONFIG_MUX_DIFF_0_1, ADS1015_REG_CONFIG_OS_SINGLE, ADS1015_REG_POINTER_CONFIG, ADS1015_REG_POINTER_CONVERT, m_bitShift, m_conversionDelay, m_gain, m_i2cAddress, readRegister(), and writeRegister().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df6/class_adafruit___a_d_s1015_a56582333958e66efaccd3d4a8a47e3ff_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readADC_Differential_2_3\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:readADC_Differential_2_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t Adafruit_ADS1015::readADC_Differential_2_3 (void )}}
\par
{\bkmkstart AAAAAAAARN}
{\bkmkend AAAAAAAARN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Reads the conversion results, measuring the voltage difference between the P (AIN2) and N (AIN3) input. Generates a signed value since the difference can be either positive or negative. }}\par
{
Definition at line 250 of file CoolAdafruit_ADS1015.cpp.}\par
{
References ADS1015_REG_CONFIG_CLAT_NONLAT, ADS1015_REG_CONFIG_CMODE_TRAD, ADS1015_REG_CONFIG_CPOL_ACTVLOW, ADS1015_REG_CONFIG_CQUE_NONE, ADS1015_REG_CONFIG_DR_1600SPS, ADS1015_REG_CONFIG_MODE_SINGLE, ADS1015_REG_CONFIG_MUX_DIFF_2_3, ADS1015_REG_CONFIG_OS_SINGLE, ADS1015_REG_POINTER_CONFIG, ADS1015_REG_POINTER_CONVERT, m_bitShift, m_conversionDelay, m_gain, m_i2cAddress, readRegister(), and writeRegister().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df6/class_adafruit___a_d_s1015_a38311881bcab46f7496c4bb6e4cad576_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v startComparator_SingleEnded\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:startComparator_SingleEnded}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_ADS1015::startComparator_SingleEnded (uint8_t  {\i channel}, int16_t  {\i threshold})}}
\par
{\bkmkstart AAAAAAAARO}
{\bkmkend AAAAAAAARO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets up the comparator to operate in basic mode, causing the ALERT/RDY pin to assert (go from high to low) when the ADC value exceeds the specified threshold. }}\par
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This will also set the ADC in continuous conversion mode. \par
}{
Definition at line 302 of file CoolAdafruit_ADS1015.cpp.}\par
{
References ADS1015_REG_CONFIG_CLAT_LATCH, ADS1015_REG_CONFIG_CMODE_TRAD, ADS1015_REG_CONFIG_CPOL_ACTVLOW, ADS1015_REG_CONFIG_CQUE_1CONV, ADS1015_REG_CONFIG_DR_1600SPS, ADS1015_REG_CONFIG_MODE_CONTIN, ADS1015_REG_CONFIG_MUX_SINGLE_0, ADS1015_REG_CONFIG_MUX_SINGLE_1, ADS1015_REG_CONFIG_MUX_SINGLE_2, ADS1015_REG_CONFIG_MUX_SINGLE_3, ADS1015_REG_POINTER_CONFIG, ADS1015_REG_POINTER_HITHRESH, m_bitShift, m_gain, m_i2cAddress, and writeRegister().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df6/class_adafruit___a_d_s1015_aecd30775d943ea9d9cff0e3485926596_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getLastConversionResults\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:getLastConversionResults}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t Adafruit_ADS1015::getLastConversionResults ()}}
\par
{\bkmkstart AAAAAAAARP}
{\bkmkend AAAAAAAARP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
In order to clear the comparator, we need to read the conversion results. This function reads the last conversion results without changing the config value. }}\par
{
Definition at line 348 of file CoolAdafruit_ADS1015.cpp.}\par
{
References ADS1015_REG_POINTER_CONVERT, m_bitShift, m_conversionDelay, m_i2cAddress, and readRegister().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df6/class_adafruit___a_d_s1015_ad8f36d80847020778425107f6451a8c2_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setGain\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:setGain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Adafruit_ADS1015::setGain ({\b adsGain_t}  {\i gain})}}
\par
{\bkmkstart AAAAAAAARQ}
{\bkmkend AAAAAAAARQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sets the gain and input voltage range. }}\par
{
Definition at line 123 of file CoolAdafruit_ADS1015.cpp.}\par
{
References m_gain.}\par
{
Referenced by Irene3000::setGain().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/df6/class_adafruit___a_d_s1015_a399441eace686975ff22937cbe45cc50_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getGain\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:getGain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b adsGain_t} Adafruit_ADS1015::getGain (void )}}
\par
{\bkmkstart AAAAAAAARR}
{\bkmkend AAAAAAAARR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Gets a gain and input voltage range. }}\par
{
Definition at line 133 of file CoolAdafruit_ADS1015.cpp.}\par
{
References m_gain.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v m_i2cAddress\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:m_i2cAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Adafruit_ADS1015::m_i2cAddress{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARS}
{\bkmkend AAAAAAAARS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 123 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015(), Adafruit_ADS1115::Adafruit_ADS1115(), getLastConversionResults(), readADC_Differential_0_1(), readADC_Differential_2_3(), readADC_SingleEnded(), and startComparator_SingleEnded().}\par
}
{\xe \v m_conversionDelay\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:m_conversionDelay}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Adafruit_ADS1015::m_conversionDelay{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAART}
{\bkmkend AAAAAAAART}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015(), Adafruit_ADS1115::Adafruit_ADS1115(), getLastConversionResults(), readADC_Differential_0_1(), readADC_Differential_2_3(), and readADC_SingleEnded().}\par
}
{\xe \v m_bitShift\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:m_bitShift}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t Adafruit_ADS1015::m_bitShift{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARU}
{\bkmkend AAAAAAAARU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015(), Adafruit_ADS1115::Adafruit_ADS1115(), getLastConversionResults(), readADC_Differential_0_1(), readADC_Differential_2_3(), readADC_SingleEnded(), and startComparator_SingleEnded().}\par
}
{\xe \v m_gain\:Adafruit_ADS1015}
{\xe \v Adafruit_ADS1015\:m_gain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b adsGain_t} Adafruit_ADS1015::m_gain{\f2 [protected]}}}
\par
{\bkmkstart AAAAAAAARV}
{\bkmkend AAAAAAAARV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 126 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015(), Adafruit_ADS1115::Adafruit_ADS1115(), getGain(), readADC_Differential_0_1(), readADC_Differential_2_3(), readADC_SingleEnded(), setGain(), and startComparator_SingleEnded().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolAdafruit_ADS1015.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolAdafruit_ADS1015.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Adafruit_ADS1115 Class Reference\par \pard\plain 
{\tc\tcl2 \v Adafruit_ADS1115}
{\xe \v Adafruit_ADS1115}
{\bkmkstart AAAAAAAARW}
{\bkmkend AAAAAAAARW}
\par
{
{\f2 #include <CoolAdafruit_ADS1015.h>}}\par
Inheritance diagram for Adafruit_ADS1115:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/de8/class_adafruit___a_d_s1115__inherit__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for Adafruit_ADS1115:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/ddc/class_adafruit___a_d_s1115__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adafruit_ADS1115} (uint8_t i2cAddress={\b ADS1015_ADDRESS})\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new ADS1115 class w/appropriate properties. }{
}\par
}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Additional Inherited Members\par
\pard\plain 
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 143 of file CoolAdafruit_ADS1015.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v Adafruit_ADS1115\:Adafruit_ADS1115}
{\xe \v Adafruit_ADS1115\:Adafruit_ADS1115}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Adafruit_ADS1115::Adafruit_ADS1115 (uint8_t  {\i i2cAddress} = {\f2 {\b ADS1015_ADDRESS}})}}
\par
{\bkmkstart AAAAAAAARX}
{\bkmkend AAAAAAAARX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Instantiates a new ADS1115 class w/appropriate properties. }}\par
{
Definition at line 101 of file CoolAdafruit_ADS1015.cpp.}\par
{
References ADS1115_CONVERSIONDELAY, GAIN_TWOTHIRDS, Adafruit_ADS1015::m_bitShift, Adafruit_ADS1015::m_conversionDelay, Adafruit_ADS1015::m_gain, and Adafruit_ADS1015::m_i2cAddress.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolAdafruit_ADS1015.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolAdafruit_ADS1015.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BaseExternalSensor Class Reference\par \pard\plain 
{\tc\tcl2 \v BaseExternalSensor}
{\xe \v BaseExternalSensor}
{\bkmkstart AAAAAAAARY}
{\bkmkend AAAAAAAARY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a generic external Sensor it is a way to access real external sensor methods through run Time polymorphism. }}\par
{
{\f2 #include <ExternalSensor.h>}}\par
Inheritance diagram for BaseExternalSensor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d26/class_base_external_sensor__inherit__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for BaseExternalSensor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc4/class_base_external_sensor__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BaseExternalSensor} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual uint8_t {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b read} ()\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a generic external Sensor it is a way to access real external sensor methods through run Time polymorphism. \par
}{
Definition at line 50 of file ExternalSensor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BaseExternalSensor\:BaseExternalSensor}
{\xe \v BaseExternalSensor\:BaseExternalSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BaseExternalSensor::BaseExternalSensor (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAAARZ}
{\bkmkend AAAAAAAARZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b BaseExternalSensor()}: Base class generic Constructor \par
}{
Definition at line 58 of file ExternalSensor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:BaseExternalSensor}
{\xe \v BaseExternalSensor\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual uint8_t BaseExternalSensor::begin (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASA}
{\bkmkend AAAAAAAASA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b begin()}: Base class virtual generic begin method\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid generic value as it's not supposed to be used \par
}}{
Reimplemented in {\b ExternalSensor< DallasTemperature >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASB \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExternalSensor< NDIR_I2C >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASC \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ExternalSensor< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASD \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 78 of file ExternalSensor.h.}\par
{
Referenced by ExternalSensors::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d68/class_base_external_sensor_a87d132803d4f4fdd4e66332809f0c9a0_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v read\:BaseExternalSensor}
{\xe \v BaseExternalSensor\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual float BaseExternalSensor::read (){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASE}
{\bkmkend AAAAAAAASE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b read()}: Base class virtual generic read method\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid generic value as it is not supposed to be used \par
}}{
Reimplemented in {\b ExternalSensor< DallasTemperature >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASF \\*MERGEFORMAT}{\fldrslt pagenum}}}), {\b ExternalSensor< NDIR_I2C >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASG \\*MERGEFORMAT}{\fldrslt pagenum}}}), and {\b ExternalSensor< T >} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASH \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 100 of file ExternalSensor.h.}\par
{
Referenced by ExternalSensors::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d68/class_base_external_sensor_a1564f16deacf57b51b9948ac29db4291_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b ExternalSensor.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
BME280 Class Reference\par \pard\plain 
{\tc\tcl2 \v BME280}
{\xe \v BME280}
{\bkmkstart AAAAAAAASI}
{\bkmkend AAAAAAAASI}
\par
{
{\f2 #include <CoolSparkFunBME280.h>}}\par
Collaboration diagram for BME280:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d82/class_b_m_e280__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BME280} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b begin} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b reset} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readFloatPressure} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readFloatAltitudeMeters} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readFloatAltitudeFeet} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readFloatHumidity} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readTempC} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readTempF} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b readRegisterRegion} (uint8_t *, uint8_t, uint8_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b readRegister} (uint8_t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int16_t {\b readRegisterInt16} (uint8_t offset)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeRegister} (uint8_t, uint8_t)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SensorSettings} {\b settings}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b SensorCalibration} {\b calibration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int32_t {\b t_fine}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 143 of file CoolSparkFunBME280.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v BME280\:BME280}
{\xe \v BME280\:BME280}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
BME280::BME280 (void )}}
\par
{\bkmkstart AAAAAAAASJ}
{\bkmkend AAAAAAAASJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file CoolSparkFunBME280.cpp.}\par
{
References SensorSettings::chipSelectPin, SensorSettings::commInterface, SensorSettings::humidOverSample, I2C_MODE, SensorSettings::I2CAddress, SensorSettings::pressOverSample, SensorSettings::runMode, settings, and SensorSettings::tempOverSample.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:BME280}
{\xe \v BME280\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t BME280::begin (void )}}
\par
{\bkmkstart AAAAAAAASK}
{\bkmkend AAAAAAAASK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file CoolSparkFunBME280.cpp.}\par
{
References BME280_CONFIG_REG, BME280_CTRL_HUMIDITY_REG, BME280_CTRL_MEAS_REG, BME280_DIG_H1_REG, BME280_DIG_H2_LSB_REG, BME280_DIG_H2_MSB_REG, BME280_DIG_H3_REG, BME280_DIG_H4_LSB_REG, BME280_DIG_H4_MSB_REG, BME280_DIG_H5_MSB_REG, BME280_DIG_H6_REG, BME280_DIG_P1_LSB_REG, BME280_DIG_P1_MSB_REG, BME280_DIG_P2_LSB_REG, BME280_DIG_P2_MSB_REG, BME280_DIG_P3_LSB_REG, BME280_DIG_P3_MSB_REG, BME280_DIG_P4_LSB_REG, BME280_DIG_P4_MSB_REG, BME280_DIG_P5_LSB_REG, BME280_DIG_P5_MSB_REG, BME280_DIG_P6_LSB_REG, BME280_DIG_P6_MSB_REG, BME280_DIG_P7_LSB_REG, BME280_DIG_P7_MSB_REG, BME280_DIG_P8_LSB_REG, BME280_DIG_P8_MSB_REG, BME280_DIG_P9_LSB_REG, BME280_DIG_P9_MSB_REG, BME280_DIG_T1_LSB_REG, BME280_DIG_T1_MSB_REG, BME280_DIG_T2_LSB_REG, BME280_DIG_T2_MSB_REG, BME280_DIG_T3_LSB_REG, BME280_DIG_T3_MSB_REG, calibration, SensorSettings::chipSelectPin, SensorSettings::commInterface, SensorCalibration::dig_H1, SensorCalibration::dig_H2, SensorCalibration::dig_H3, SensorCalibration::dig_H4, SensorCalibration::dig_H5, SensorCalibration::dig_H6, SensorCalibration::dig_P1, SensorCalibration::dig_P2, SensorCalibration::dig_P3, SensorCalibration::dig_P4, SensorCalibration::dig_P5, SensorCalibration::dig_P6, SensorCalibration::dig_P7, SensorCalibration::dig_P8, SensorCalibration::dig_P9, SensorCalibration::dig_T1, SensorCalibration::dig_T2, SensorCalibration::dig_T3, SensorSettings::filter, SensorSettings::humidOverSample, I2C_MODE, SensorSettings::pressOverSample, readRegister(), SensorSettings::runMode, settings, SPI_MODE, SensorSettings::tempOverSample, SensorSettings::tStandby, and writeRegister().}\par
{
Referenced by CoolBoardSensors::begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_a994c102f010547f9c740a338ef9905c7_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_a994c102f010547f9c740a338ef9905c7_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v reset\:BME280}
{\xe \v BME280\:reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BME280::reset (void )}}
\par
{\bkmkstart AAAAAAAASL}
{\bkmkend AAAAAAAASL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 153 of file CoolSparkFunBME280.cpp.}\par
{
References BME280_RST_REG, and writeRegister().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_aeec5deb6daace6ae390108b4210e9df7_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readFloatPressure\:BME280}
{\xe \v BME280\:readFloatPressure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float BME280::readFloatPressure (void )}}
\par
{\bkmkstart AAAAAAAASM}
{\bkmkend AAAAAAAASM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 164 of file CoolSparkFunBME280.cpp.}\par
{
References BME280_PRESSURE_LSB_REG, BME280_PRESSURE_MSB_REG, BME280_PRESSURE_XLSB_REG, calibration, SensorCalibration::dig_P1, SensorCalibration::dig_P2, SensorCalibration::dig_P3, SensorCalibration::dig_P4, SensorCalibration::dig_P5, SensorCalibration::dig_P6, SensorCalibration::dig_P7, SensorCalibration::dig_P8, SensorCalibration::dig_P9, readRegister(), and t_fine.}\par
{
Referenced by CoolBoardSensors::read(), and readFloatAltitudeMeters().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_ada6e799917afb4f228e6253bc56ffe75_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_ada6e799917afb4f228e6253bc56ffe75_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readFloatAltitudeMeters\:BME280}
{\xe \v BME280\:readFloatAltitudeMeters}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float BME280::readFloatAltitudeMeters (void )}}
\par
{\bkmkstart AAAAAAAASN}
{\bkmkend AAAAAAAASN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 192 of file CoolSparkFunBME280.cpp.}\par
{
References readFloatPressure().}\par
{
Referenced by readFloatAltitudeFeet().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_af67b56ba50760ee1d116acc6c5010221_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_af67b56ba50760ee1d116acc6c5010221_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readFloatAltitudeFeet\:BME280}
{\xe \v BME280\:readFloatAltitudeFeet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float BME280::readFloatAltitudeFeet (void )}}
\par
{\bkmkstart AAAAAAAASO}
{\bkmkend AAAAAAAASO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 201 of file CoolSparkFunBME280.cpp.}\par
{
References readFloatAltitudeMeters().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_a6525c8a26f887b52596c86bed99343cb_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readFloatHumidity\:BME280}
{\xe \v BME280\:readFloatHumidity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float BME280::readFloatHumidity (void )}}
\par
{\bkmkstart AAAAAAAASP}
{\bkmkend AAAAAAAASP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 215 of file CoolSparkFunBME280.cpp.}\par
{
References BME280_HUMIDITY_LSB_REG, BME280_HUMIDITY_MSB_REG, calibration, SensorCalibration::dig_H1, SensorCalibration::dig_H2, SensorCalibration::dig_H3, SensorCalibration::dig_H4, SensorCalibration::dig_H5, SensorCalibration::dig_H6, readRegister(), and t_fine.}\par
{
Referenced by CoolBoardSensors::read().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_a42ea7232039eebf5aadb391ef6132c35_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_a42ea7232039eebf5aadb391ef6132c35_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readTempC\:BME280}
{\xe \v BME280\:readTempC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float BME280::readTempC (void )}}
\par
{\bkmkstart AAAAAAAASQ}
{\bkmkend AAAAAAAASQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 243 of file CoolSparkFunBME280.cpp.}\par
{
References BME280_TEMPERATURE_LSB_REG, BME280_TEMPERATURE_MSB_REG, BME280_TEMPERATURE_XLSB_REG, calibration, SensorCalibration::dig_T1, SensorCalibration::dig_T2, SensorCalibration::dig_T3, readRegister(), and t_fine.}\par
{
Referenced by CoolBoardSensors::read(), and readTempF().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_afffdd1d7ded9e1f92200e70669019d97_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_afffdd1d7ded9e1f92200e70669019d97_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readTempF\:BME280}
{\xe \v BME280\:readTempF}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float BME280::readTempF (void )}}
\par
{\bkmkstart AAAAAAAASR}
{\bkmkend AAAAAAAASR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 265 of file CoolSparkFunBME280.cpp.}\par
{
References readTempC().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_a9648b496f6b4700550782a715a98b3c7_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readRegisterRegion\:BME280}
{\xe \v BME280\:readRegisterRegion}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BME280::readRegisterRegion (uint8_t *  {\i outputPointer}, uint8_t  {\i offset}, uint8_t  {\i length})}}
\par
{\bkmkstart AAAAAAAASS}
{\bkmkend AAAAAAAASS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 278 of file CoolSparkFunBME280.cpp.}\par
{
References SensorSettings::chipSelectPin, SensorSettings::commInterface, I2C_MODE, SensorSettings::I2CAddress, settings, and SPI_MODE.}\par
{
Referenced by readRegisterInt16().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_aecca87c2c40a7f2bcabcea921bdc6124_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readRegister\:BME280}
{\xe \v BME280\:readRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t BME280::readRegister (uint8_t  {\i offset})}}
\par
{\bkmkstart AAAAAAAAST}
{\bkmkend AAAAAAAAST}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 325 of file CoolSparkFunBME280.cpp.}\par
{
References SensorSettings::chipSelectPin, SensorSettings::commInterface, I2C_MODE, SensorSettings::I2CAddress, settings, and SPI_MODE.}\par
{
Referenced by begin(), readFloatHumidity(), readFloatPressure(), and readTempC().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_a1bbd14c8591966df531e40085342ff71_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readRegisterInt16\:BME280}
{\xe \v BME280\:readRegisterInt16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int16_t BME280::readRegisterInt16 (uint8_t  {\i offset})}}
\par
{\bkmkstart AAAAAAAASU}
{\bkmkend AAAAAAAASU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 361 of file CoolSparkFunBME280.cpp.}\par
{
References readRegisterRegion().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_ac43c30f9b321d301694094d6b4bebe7e_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeRegister\:BME280}
{\xe \v BME280\:writeRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void BME280::writeRegister (uint8_t  {\i offset}, uint8_t  {\i dataToWrite})}}
\par
{\bkmkstart AAAAAAAASV}
{\bkmkend AAAAAAAASV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 370 of file CoolSparkFunBME280.cpp.}\par
{
References SensorSettings::chipSelectPin, SensorSettings::commInterface, I2C_MODE, SensorSettings::I2CAddress, settings, and SPI_MODE.}\par
{
Referenced by begin(), and reset().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/dcf/class_b_m_e280_afcff21c342725246bf415d7f0e4d04f0_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v settings\:BME280}
{\xe \v BME280\:settings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SensorSettings} BME280::settings}}
\par
{\bkmkstart AAAAAAAASW}
{\bkmkend AAAAAAAASW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 147 of file CoolSparkFunBME280.h.}\par
{
Referenced by begin(), BME280(), readRegister(), readRegisterRegion(), CoolBoardSensors::setEnvSensorSettings(), and writeRegister().}\par
}
{\xe \v calibration\:BME280}
{\xe \v BME280\:calibration}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b SensorCalibration} BME280::calibration}}
\par
{\bkmkstart AAAAAAAASX}
{\bkmkend AAAAAAAASX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file CoolSparkFunBME280.h.}\par
{
Referenced by begin(), readFloatHumidity(), readFloatPressure(), and readTempC().}\par
}
{\xe \v t_fine\:BME280}
{\xe \v BME280\:t_fine}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int32_t BME280::t_fine}}
\par
{\bkmkstart AAAAAAAASY}
{\bkmkend AAAAAAAASY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 149 of file CoolSparkFunBME280.h.}\par
{
Referenced by readFloatHumidity(), readFloatPressure(), and readTempC().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolSparkFunBME280.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolSparkFunBME280.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoard Class Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoard}
{\xe \v CoolBoard}
{\bkmkstart AAAAAAAASZ}
{\bkmkend AAAAAAAASZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b CoolBoard} and all of Its functions. }}\par
{
{\f2 #include <CoolBoard.h>}}\par
Collaboration diagram for CoolBoard:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d3a/class_cool_board__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolBoard} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update} (const char *{\b answer})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b offLineMode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b onLineMode} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b connect} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b isConnected} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b getLogInterval} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printConf} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sleep} (unsigned long interval)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b readSensors} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b initReadI2C} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b userData} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolFileSystem} {\b fileSystem}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolBoardSensors} {\b coolBoardSensors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolBoardLed} {\b coolBoardLed}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolTime} {\b rtc}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolWifi} {\b wifiManager}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolMQTT} {\b mqtt}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Jetpack} {\b jetPack}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Irene3000} {\b irene3000}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExternalSensors} {\b externalSensors}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolBoardActor} {\b onBoardActor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b userActive} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ireneActive} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b jetpackActive} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b externalSensorsActive} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b sleepActive} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b manual} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b logInterval} =1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b data} =""\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b answer} =""\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b EnI2C} = 5\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b CoolBoard} and all of Its functions. \par
}{
Definition at line 56 of file CoolBoard.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CoolBoard\:CoolBoard}
{\xe \v CoolBoard\:CoolBoard}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolBoard::CoolBoard ()}}
\par
{\bkmkstart AAAAAAAATA}
{\bkmkend AAAAAAAATA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard::CoolBoard()}: This Constructor is provided to start the I2C interface and Init the different used pins \par
}{
Definition at line 50 of file CoolBoard.cpp.}\par
{
References EnI2C.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:CoolBoard}
{\xe \v CoolBoard\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoard::begin ()}}
\par
{\bkmkstart AAAAAAAATB}
{\bkmkend AAAAAAAATB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard::begin()}: This method is provided to configure and start the used CoolKit Parts. It also starts the first connection try If Serial is enabled,it prints the configuration of the used parts. \par
}{
Definition at line 75 of file CoolBoard.cpp.}\par
{
References CoolBoardActor::begin(), Jetpack::begin(), CoolMQTT::begin(), ExternalSensors::begin(), CoolBoardSensors::begin(), CoolWifi::begin(), CoolTime::begin(), Irene3000::begin(), CoolBoardLed::blink(), ExternalSensors::config(), CoolWifi::config(), CoolMQTT::config(), CoolTime::config(), Irene3000::config(), CoolBoardSensors::config(), CoolBoardActor::config(), Jetpack::config(), connect(), coolBoardLed, coolBoardSensors, externalSensors, externalSensorsActive, CoolBoardLed::fadeOut(), initReadI2C(), irene3000, ireneActive, jetPack, jetpackActive, mqtt, onBoardActor, ExternalSensors::printConf(), CoolBoardLed::printConf(), CoolMQTT::printConf(), CoolTime::printConf(), Irene3000::printConf(), CoolBoardSensors::printConf(), CoolWifi::printConf(), CoolBoardActor::printConf(), Jetpack::printConf(), rtc, wifiManager, and CoolBoardLed::write().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_acba7c5aef7268b2c0044bdb54d3b9d76_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:CoolBoard}
{\xe \v CoolBoard\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoard::config ()}}
\par
{\bkmkstart AAAAAAAATC}
{\bkmkend AAAAAAAATC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard::config()}: This method is provided to configure the {\b CoolBoard} : -log interval -irene3000 activated/deactivated -jetpack activated/deactivated -external Sensors activated/deactivated -mqtt server timeout\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if configuration is done, false otherwise \par
}}{
Definition at line 727 of file CoolBoard.cpp.}\par
{
References CoolFileSystem::begin(), CoolBoardLed::begin(), CoolBoardLed::blink(), CoolBoardLed::config(), coolBoardLed, externalSensorsActive, CoolBoardLed::fadeIn(), CoolBoardLed::fadeOut(), fileSystem, ireneActive, jetpackActive, logInterval, manual, sleepActive, CoolBoardLed::strobe(), and userActive.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_a583a874c09c07e70a6eb9229fc4beddb_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v update\:CoolBoard}
{\xe \v CoolBoard\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoard::update (const char *  {\i answer})}}
\par
{\bkmkstart AAAAAAAATD}
{\bkmkend AAAAAAAATD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoard::update(mqtt answer): This method is provided to handle the configuration update of the different parts \par
}{
Definition at line 965 of file CoolBoard.cpp.}\par
{
References coolBoardLed, CoolBoardLed::fadeIn(), CoolBoardLed::fadeOut(), fileSystem, jetPack, manual, mqtt, CoolMQTT::mqttLoop(), onBoardActor, CoolMQTT::publish(), CoolBoardLed::strobe(), CoolFileSystem::updateConfigFiles(), CoolBoardActor::write(), and Jetpack::writeBit().}\par
{
Referenced by onLineMode().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_a8612756d3f73198cdde857a66f0fe690_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_a8612756d3f73198cdde857a66f0fe690_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v offLineMode\:CoolBoard}
{\xe \v CoolBoard\:offLineMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoard::offLineMode ()}}
\par
{\bkmkstart AAAAAAAATE}
{\bkmkend AAAAAAAATE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoard::offlineMode(): This method is provided to manage the offLine mode: -read sensors -do actions -save data in the file system -if there is WiFi but no Internet : make data available over AP -if there is no connection : retry to connect \par
}{
Definition at line 573 of file CoolBoard.cpp.}\par
{
References CoolBoardLed::blink(), connect(), CoolWifi::connectAP(), coolBoardLed, data, CoolBoardActor::doAction(), Jetpack::doAction(), CoolBoardLed::fade(), CoolBoardLed::fadeIn(), CoolBoardLed::fadeOut(), fileSystem, jetPack, jetpackActive, mqtt, onBoardActor, readSensors(), CoolFileSystem::saveSensorData(), CoolMQTT::state(), CoolWifi::state(), userActive, userData(), and wifiManager.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_ae6b5e1274d760462290192acea4adca8_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v onLineMode\:CoolBoard}
{\xe \v CoolBoard\:onLineMode}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoard::onLineMode ()}}
\par
{\bkmkstart AAAAAAAATF}
{\bkmkend AAAAAAAATF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard::onLineMode()}: This method is provided to manage the online mode: -update clock -read sensor -do actions -publish data -read answer -update config \par
}{
Definition at line 314 of file CoolBoard.cpp.}\par
{
References answer, CoolBoardLed::blink(), coolBoardLed, data, CoolBoardActor::doAction(), Jetpack::doAction(), CoolBoardLed::fade(), CoolBoardLed::fadeIn(), CoolBoardLed::fadeOut(), fileSystem, getLogInterval(), CoolFileSystem::getSensorSavedData(), CoolFileSystem::isDataSaved(), jetPack, jetpackActive, manual, mqtt, CoolMQTT::mqttLoop(), onBoardActor, CoolMQTT::publish(), CoolMQTT::read(), readSensors(), rtc, sleep(), sleepActive, CoolBoardLed::strobe(), CoolTime::update(), update(), userActive, and userData().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_aa0bbc4bc605e35618d18e68795c61363_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v connect\:CoolBoard}
{\xe \v CoolBoard\:connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolBoard::connect ()}}
\par
{\bkmkstart AAAAAAAATG}
{\bkmkend AAAAAAAATG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard::connect()}: This method is provided to manage the network connection and the mqtt connection.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid mqtt client state \par
}}{
Definition at line 246 of file CoolBoard.cpp.}\par
{
References CoolBoardLed::blink(), CoolMQTT::connect(), CoolWifi::connect(), coolBoardLed, getLogInterval(), mqtt, CoolWifi::state(), CoolMQTT::state(), wifiManager, and CoolBoardLed::write().}\par
{
Referenced by begin(), and offLineMode().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_a519de78b807f8ec6463ff484eb925918_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_a519de78b807f8ec6463ff484eb925918_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isConnected\:CoolBoard}
{\xe \v CoolBoard\:isConnected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolBoard::isConnected ()}}
\par
{\bkmkstart AAAAAAAATH}
{\bkmkend AAAAAAAATH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard::isConnected()}\par
This method is provided to check if the card is connected to Wifi and MQTT\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid 0 : connected -1: Wifi Not Connected -2: MQTT Not Connected \par
}}{
Definition at line 198 of file CoolBoard.cpp.}\par
{
References mqtt, CoolMQTT::state(), CoolWifi::state(), and wifiManager.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_ad7442cf4b62c7b0d5bd62a0f75ffc065_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getLogInterval\:CoolBoard}
{\xe \v CoolBoard\:getLogInterval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long CoolBoard::getLogInterval ()}}
\par
{\bkmkstart AAAAAAAATI}
{\bkmkend AAAAAAAATI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard::getLogInterval()}: This method is provided to get the log interval\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid interval value in s \par
}}{
Definition at line 1151 of file CoolBoard.cpp.}\par
{
References logInterval.}\par
{
Referenced by connect(), and onLineMode().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_a7508e029f2ee17bb747ffab599285e0d_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printConf\:CoolBoard}
{\xe \v CoolBoard\:printConf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoard::printConf ()}}
\par
{\bkmkstart AAAAAAAATJ}
{\bkmkend AAAAAAAATJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard::printConf()}: This method is provided to print the configuration to the Serial Monitor. \par
}{
Definition at line 921 of file CoolBoard.cpp.}\par
{
References externalSensorsActive, ireneActive, jetpackActive, logInterval, manual, sleepActive, and userActive.}\par
}
{\xe \v sleep\:CoolBoard}
{\xe \v CoolBoard\:sleep}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoard::sleep (unsigned long  {\i interval})}}
\par
{\bkmkstart AAAAAAAATK}
{\bkmkend AAAAAAAATK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoard::sleep(int interval): This method is provided to allow the board to enter deepSleep mode for a period of time equal to interval in s \par
}{
Definition at line 1315 of file CoolBoard.cpp.}\par
{
Referenced by onLineMode().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_a069952cdcb2e7f68518aa429eceadb6e_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readSensors\:CoolBoard}
{\xe \v CoolBoard\:readSensors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolBoard::readSensors ()}}
\par
{\bkmkstart AAAAAAAATL}
{\bkmkend AAAAAAAATL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard::readSensors()}: This method is provided to read and format all the sensors data in a single json.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid json string of all the sensors read. \par
}}{
Definition at line 1175 of file CoolBoard.cpp.}\par
{
References coolBoardLed, coolBoardSensors, externalSensors, externalSensorsActive, CoolBoardLed::fadeIn(), CoolBoardLed::fadeOut(), CoolTime::getTimeDate(), initReadI2C(), irene3000, ireneActive, ExternalSensors::read(), CoolBoardSensors::read(), Irene3000::read(), rtc, and CoolBoardLed::strobe().}\par
{
Referenced by offLineMode(), and onLineMode().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_ad03abdce2e65f520bbf2cff0f2d083cf_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_ad03abdce2e65f520bbf2cff0f2d083cf_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v initReadI2C\:CoolBoard}
{\xe \v CoolBoard\:initReadI2C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoard::initReadI2C ()}}
\par
{\bkmkstart AAAAAAAATM}
{\bkmkend AAAAAAAATM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard::initReadI2C()}: This method is provided to enable the I2C Interface. \par
}{
Definition at line 1246 of file CoolBoard.cpp.}\par
{
References EnI2C.}\par
{
Referenced by begin(), and readSensors().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_a397b46fadab8f530a8cf4d914c561366_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v userData\:CoolBoard}
{\xe \v CoolBoard\:userData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolBoard::userData ()}}
\par
{\bkmkstart AAAAAAAATN}
{\bkmkend AAAAAAAATN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard::userData()}: This method is provided to return the user's data.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid json string of the user's data \par
}}{
Definition at line 1268 of file CoolBoard.cpp.}\par
{
References CoolTime::getESDate(), CoolMQTT::getUser(), mqtt, and rtc.}\par
{
Referenced by offLineMode(), and onLineMode().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_ae7358fb6e623cfc81b775f5f1734909b_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/df9/class_cool_board_ae7358fb6e623cfc81b775f5f1734909b_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v fileSystem\:CoolBoard}
{\xe \v CoolBoard\:fileSystem}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolFileSystem} CoolBoard::fileSystem{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATO}
{\bkmkend AAAAAAAATO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
fileSystem handler instance \par
}{
Definition at line 95 of file CoolBoard.h.}\par
{
Referenced by config(), offLineMode(), onLineMode(), and update().}\par
}
{\xe \v coolBoardSensors\:CoolBoard}
{\xe \v CoolBoard\:coolBoardSensors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolBoardSensors} CoolBoard::coolBoardSensors{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATP}
{\bkmkend AAAAAAAATP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Sensor Board handler instance \par
}{
Definition at line 100 of file CoolBoard.h.}\par
{
Referenced by begin(), and readSensors().}\par
}
{\xe \v coolBoardLed\:CoolBoard}
{\xe \v CoolBoard\:coolBoardLed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolBoardLed} CoolBoard::coolBoardLed{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATQ}
{\bkmkend AAAAAAAATQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Led handler instance \par
}{
Definition at line 105 of file CoolBoard.h.}\par
{
Referenced by begin(), config(), connect(), offLineMode(), onLineMode(), readSensors(), and update().}\par
}
{\xe \v rtc\:CoolBoard}
{\xe \v CoolBoard\:rtc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolTime} CoolBoard::rtc{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATR}
{\bkmkend AAAAAAAATR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RTC handler instance \par
}{
Definition at line 110 of file CoolBoard.h.}\par
{
Referenced by begin(), onLineMode(), readSensors(), and userData().}\par
}
{\xe \v wifiManager\:CoolBoard}
{\xe \v CoolBoard\:wifiManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolWifi} CoolBoard::wifiManager{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATS}
{\bkmkend AAAAAAAATS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wifi handler instance \par
}{
Definition at line 115 of file CoolBoard.h.}\par
{
Referenced by begin(), connect(), isConnected(), and offLineMode().}\par
}
{\xe \v mqtt\:CoolBoard}
{\xe \v CoolBoard\:mqtt}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolMQTT} CoolBoard::mqtt{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATT}
{\bkmkend AAAAAAAATT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MQTT handler instance \par
}{
Definition at line 120 of file CoolBoard.h.}\par
{
Referenced by begin(), connect(), isConnected(), offLineMode(), onLineMode(), update(), and userData().}\par
}
{\xe \v jetPack\:CoolBoard}
{\xe \v CoolBoard\:jetPack}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Jetpack} CoolBoard::jetPack{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATU}
{\bkmkend AAAAAAAATU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Jetpack} handler instance \par
}{
Definition at line 125 of file CoolBoard.h.}\par
{
Referenced by begin(), offLineMode(), onLineMode(), and update().}\par
}
{\xe \v irene3000\:CoolBoard}
{\xe \v CoolBoard\:irene3000}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Irene3000} CoolBoard::irene3000{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATV}
{\bkmkend AAAAAAAATV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000} handler instance \par
}{
Definition at line 130 of file CoolBoard.h.}\par
{
Referenced by begin(), and readSensors().}\par
}
{\xe \v externalSensors\:CoolBoard}
{\xe \v CoolBoard\:externalSensors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExternalSensors} CoolBoard::externalSensors{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATW}
{\bkmkend AAAAAAAATW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
External Sensors handler instance \par
}{
Definition at line 135 of file CoolBoard.h.}\par
{
Referenced by begin(), and readSensors().}\par
}
{\xe \v onBoardActor\:CoolBoard}
{\xe \v CoolBoard\:onBoardActor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolBoardActor} CoolBoard::onBoardActor{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATX}
{\bkmkend AAAAAAAATX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
On Board Actor handler instance \par
}{
Definition at line 140 of file CoolBoard.h.}\par
{
Referenced by begin(), offLineMode(), onLineMode(), and update().}\par
}
{\xe \v userActive\:CoolBoard}
{\xe \v CoolBoard\:userActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoard::userActive =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATY}
{\bkmkend AAAAAAAATY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
userActive flag, set to 1 to collect userData(MAC,userName,TimeStamp) \par
}{
Definition at line 146 of file CoolBoard.h.}\par
{
Referenced by config(), offLineMode(), onLineMode(), and printConf().}\par
}
{\xe \v ireneActive\:CoolBoard}
{\xe \v CoolBoard\:ireneActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoard::ireneActive =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAATZ}
{\bkmkend AAAAAAAATZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ireneActive flag, set to 1 when using an Irene module \par
}{
Definition at line 152 of file CoolBoard.h.}\par
{
Referenced by begin(), config(), printConf(), and readSensors().}\par
}
{\xe \v jetpackActive\:CoolBoard}
{\xe \v CoolBoard\:jetpackActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoard::jetpackActive =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAUA}
{\bkmkend AAAAAAAAUA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
jetpackActive flag, set to 1 when using a {\b Jetpack} module \par
}{
Definition at line 158 of file CoolBoard.h.}\par
{
Referenced by begin(), config(), offLineMode(), onLineMode(), and printConf().}\par
}
{\xe \v externalSensorsActive\:CoolBoard}
{\xe \v CoolBoard\:externalSensorsActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoard::externalSensorsActive =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAUB}
{\bkmkend AAAAAAAAUB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
externalSensors flag, set to 1 when using 1/many external Sensor(s) \par
}{
Definition at line 164 of file CoolBoard.h.}\par
{
Referenced by begin(), config(), printConf(), and readSensors().}\par
}
{\xe \v sleepActive\:CoolBoard}
{\xe \v CoolBoard\:sleepActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoard::sleepActive =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAUC}
{\bkmkend AAAAAAAAUC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
sleepActive flag, set to 1 when using sleep Mode in Sleep mode : the {\b CoolBoard} will do a cycle (init, read sensors, do action,log) and go to sleep for a LogInterval period of time \par
}{
Definition at line 173 of file CoolBoard.h.}\par
{
Referenced by config(), onLineMode(), and printConf().}\par
}
{\xe \v manual\:CoolBoard}
{\xe \v CoolBoard\:manual}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoard::manual =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAUD}
{\bkmkend AAAAAAAAUD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
manual flag, set to 1 when using manual mode in manual Mode , user can activate/deactivate actors through a specific MQTT command\par
/!\\ in manual Mode, receving an update will not reset the {\b CoolBoard} /!\\ resetting the {\b CoolBoard} in manual mode will deactivate all actors \par
}{
Definition at line 184 of file CoolBoard.h.}\par
{
Referenced by config(), onLineMode(), printConf(), and update().}\par
}
{\xe \v logInterval\:CoolBoard}
{\xe \v CoolBoard\:logInterval}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long CoolBoard::logInterval =1{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAUE}
{\bkmkend AAAAAAAAUE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
log Interval value, the period of time between logs{
\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
in Seconds \par}
}{
Definition at line 191 of file CoolBoard.h.}\par
{
Referenced by config(), getLogInterval(), and printConf().}\par
}
{\xe \v data\:CoolBoard}
{\xe \v CoolBoard\:data}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolBoard::data =""{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAUF}
{\bkmkend AAAAAAAAUF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data string, string that contains sensors data \par
}{
Definition at line 197 of file CoolBoard.h.}\par
{
Referenced by offLineMode(), and onLineMode().}\par
}
{\xe \v answer\:CoolBoard}
{\xe \v CoolBoard\:answer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolBoard::answer =""{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAUG}
{\bkmkend AAAAAAAAUG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
answer string, string that contains received MQTT messages \par
}{
Definition at line 203 of file CoolBoard.h.}\par
{
Referenced by onLineMode().}\par
}
{\xe \v EnI2C\:CoolBoard}
{\xe \v CoolBoard\:EnI2C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CoolBoard::EnI2C = 5{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAUH}
{\bkmkend AAAAAAAAUH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Enable I2C pin, double usage for I2C and shift register latch , HIGH=I2C , LOW=shift register latch All I2C is over pins (2,14) \par
}{
Definition at line 210 of file CoolBoard.h.}\par
{
Referenced by CoolBoard(), and initReadI2C().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolBoard.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolBoard.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoardActor Class Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoardActor}
{\xe \v CoolBoardActor}
{\bkmkstart AAAAAAAAUI}
{\bkmkend AAAAAAAAUI}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b CoolBoardActor}. }}\par
{
{\f2 #include <CoolBoardActor.h>}}\par
Collaboration diagram for CoolBoardActor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d3e/class_cool_board_actor__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b state}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write} (bool action)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b doAction} (const char *data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b normalAction} (float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b invertedAction} (float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b temporalActionOff} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b temporalActionOn} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mixedTemporalActionOff} (float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mixedTemporalActionOn} (float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b hourAction} (int hour)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mixedHourAction} (int hour, float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b minuteAction} (int minute)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mixedMinuteAction} (int minute, float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b hourMinuteAction} (int hour, int minute)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mixedHourMinuteAction} (int hour, int minute, float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printConf} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CoolBoardActor::state} {\b actor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b pin} = 15\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b CoolBoardActor}. \par
}{
Definition at line 44 of file CoolBoardActor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v CoolBoardActor::state}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct CoolBoardActor::state\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the Actor's state \par
}{
Definition at line 87 of file CoolBoardActor.h.}\par
}
Collaboration diagram for CoolBoardActor::state:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d44/struct_cool_board_actor_1_1state__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\cell }{actif\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
actif flag set to 1 when using an actor set to 0 otherwise \par
}\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\cell }{temporal\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
temporal flag set to 1 to declare a temporal actor set to 0 otherwise \par
}\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\cell }{inverted\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inverted flag set to 1 to declare an inverted actor set to 0 to declare a normal actor \par
}\cell }{\row }
{\qr String{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\cell }{primaryType\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"type":["temperature","hour"]\par
the primary type is related to the sensor's type (type[0])\par
if both types are present and valid, the actor is a mixedActor \par
}\cell }{\row }
{\qr String{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\cell }{secondaryType\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"type":["temperature","hour"]\par
the secondary type if present is hour or minute or hourMinute (type[1])\par
if both types are present and valid, the actor is a mixedActor \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\cell }{rangeLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
rangeLow : this is the minimum at which the actor becomes actif (low[0]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\cell }{timeLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
timeLow : this is the time the actor is off in temporal mode (low[1]) (ms) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\cell }{hourLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
hour low :this is the hour when to turn off the actor in temporal/hour(hourMinute) mode (low[2] ) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\cell }{minuteLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
minute low :this is the minute when to turn off the actor in temporal/minute(hourMinute) mode (low[3]) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\cell }{rangeHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
rangeHigh : this is the maximum at which the actor becomes inactif(high[0]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\cell }{timeHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
timeHigh : this is the time the actor is on in temporal mode(high[1]) (ms) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\cell }{hourHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
hourHigh : this is the hour when to turn on the actor in temporal/hour(hourMinute) mode(high[2]) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\cell }{minuteHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
minuteHigh : this is the minute when to turn on the actor in temporal/minute(hourMinute) mode (high[3]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\cell }{actifTime\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
actifTime : period of Time spent actif , used in Temporal mode in ms \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\cell }{inactifTime\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inactifTime : period of Time spent inactif , used in Temporal mode in ms \par
}\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:CoolBoardActor}
{\xe \v CoolBoardActor\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::begin ()}}
\par
{\bkmkstart AAAAAAAAUJ}
{\bkmkend AAAAAAAAUJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardActor::begin()}: This method is provided to initialise the {\b CoolBoardActor} pin \par
}{
Definition at line 48 of file CoolBoardActor.cpp.}\par
{
References pin.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a7f4422fd85a5510bc2cdfd68e109be5e_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v write\:CoolBoardActor}
{\xe \v CoolBoardActor\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::write (bool  {\i action})}}
\par
{\bkmkstart AAAAAAAAUK}
{\bkmkend AAAAAAAAUK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::write(action): This method is provided to write the given action to the {\b CoolBoardActor}. \par
}{
Definition at line 71 of file CoolBoardActor.cpp.}\par
{
References pin.}\par
{
Referenced by hourAction(), hourMinuteAction(), invertedAction(), minuteAction(), mixedHourAction(), mixedHourMinuteAction(), mixedMinuteAction(), mixedTemporalActionOff(), mixedTemporalActionOn(), normalAction(), temporalActionOff(), temporalActionOn(), and CoolBoard::update().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a958786ff01ea1056ee72c72d439f86da_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v doAction\:CoolBoardActor}
{\xe \v CoolBoardActor\:doAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::doAction (const char *  {\i data})}}
\par
{\bkmkstart AAAAAAAAUL}
{\bkmkend AAAAAAAAUL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::doAction(sensor data ): This method is provided to automate the {\b CoolBoardActor}.\par
The result action is the result of checking the different flags of the actor (actif , temporal ,inverted, primaryType and secondaryType ) and the corresponding call to the appropriate helping method \par
}{
Definition at line 101 of file CoolBoardActor.cpp.}\par
{
References CoolBoardActor::state::actif, actor, hourAction(), hourMinuteAction(), CoolBoardActor::state::inverted, invertedAction(), minuteAction(), mixedHourAction(), mixedHourMinuteAction(), mixedMinuteAction(), mixedTemporalActionOff(), mixedTemporalActionOn(), normalAction(), CoolBoardActor::state::primaryType, CoolBoardActor::state::secondaryType, CoolBoardActor::state::temporal, temporalActionOff(), and temporalActionOn().}\par
{
Referenced by CoolBoard::offLineMode(), and CoolBoard::onLineMode().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a96a45658d32c6b95caa2f385c7da32cd_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a96a45658d32c6b95caa2f385c7da32cd_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v normalAction\:CoolBoardActor}
{\xe \v CoolBoardActor\:normalAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::normalAction (float  {\i measurment})}}
\par
{\bkmkstart AAAAAAAAUM}
{\bkmkend AAAAAAAAUM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::normalAction( measured value): This method is provided to handle normal actors. it changes the action according to wether the measured value is: > rangeHigh ( deactivate actor) or < rangeLow (activate actor ) \par
}{
Definition at line 532 of file CoolBoardActor.cpp.}\par
{
References actor, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a81229abf5895f4d3b0355050b822b438_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a81229abf5895f4d3b0355050b822b438_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v invertedAction\:CoolBoardActor}
{\xe \v CoolBoardActor\:invertedAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::invertedAction (float  {\i measurment})}}
\par
{\bkmkstart AAAAAAAAUN}
{\bkmkend AAAAAAAAUN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::invertedAction( measured value): This method is provided to handle inverted actors. it changes the action according to wether the measured value is: \par
{\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid rangeHigh (activate actor) \par
}< rangeLow ( deactivate actor ) \par
}{
Definition at line 589 of file CoolBoardActor.cpp.}\par
{
References actor, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_aae82b2e62f91be009d40f93c206f9bda_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_aae82b2e62f91be009d40f93c206f9bda_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v temporalActionOff\:CoolBoardActor}
{\xe \v CoolBoardActor\:temporalActionOff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::temporalActionOff ()}}
\par
{\bkmkstart AAAAAAAAUO}
{\bkmkend AAAAAAAAUO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardActor::temporalActionOff( )}: This method is provided to handle temporal actors. it changes the action according to:\par
currentTime - startTime > timeHigh : deactivate actor \par
}{
Definition at line 644 of file CoolBoardActor.cpp.}\par
{
References CoolBoardActor::state::actif, CoolBoardActor::state::actifTime, actor, CoolBoardActor::state::inactifTime, CoolBoardActor::state::timeHigh, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a02698bd647df49cabbe74513d4d88918_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a02698bd647df49cabbe74513d4d88918_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v temporalActionOn\:CoolBoardActor}
{\xe \v CoolBoardActor\:temporalActionOn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::temporalActionOn ()}}
\par
{\bkmkstart AAAAAAAAUP}
{\bkmkend AAAAAAAAUP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardActor::temporalActionOn( )}: This method is provided to handle temporal actors. it changes the action according to :\par
currentTime - stopTime > timeLow : activate actor \par
}{
Definition at line 781 of file CoolBoardActor.cpp.}\par
{
References CoolBoardActor::state::actif, CoolBoardActor::state::actifTime, actor, CoolBoardActor::state::inactifTime, CoolBoardActor::state::timeLow, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_ada603785c203fdb0b41cc967d70bdc4d_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_ada603785c203fdb0b41cc967d70bdc4d_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mixedTemporalActionOff\:CoolBoardActor}
{\xe \v CoolBoardActor\:mixedTemporalActionOff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::mixedTemporalActionOff (float  {\i measurment})}}
\par
{\bkmkstart AAAAAAAAUQ}
{\bkmkend AAAAAAAAUQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::mixedTemporalActionOff( measured value ): This method is provided to handle mixed temporal actors. it changes the action according to:\par
currentTime - startTime >= timeHigh : measured value >= rangeHigh : deactivate actor measured value < rangeHigh : activate actor \par
}{
Definition at line 695 of file CoolBoardActor.cpp.}\par
{
References CoolBoardActor::state::actif, CoolBoardActor::state::actifTime, actor, CoolBoardActor::state::inactifTime, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::timeHigh, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a00b29c4abf0388551aa6812372113cf1_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a00b29c4abf0388551aa6812372113cf1_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mixedTemporalActionOn\:CoolBoardActor}
{\xe \v CoolBoardActor\:mixedTemporalActionOn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::mixedTemporalActionOn (float  {\i measurment})}}
\par
{\bkmkstart AAAAAAAAUR}
{\bkmkend AAAAAAAAUR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::mixedTemporalActionOn( measured value ): This method is provided to handle mixed temporal actors. it changes the action according to :\par
currentTime - stopTime > timeLow : measured value >= rangeLow : deactivate actor measured value < rangeLow : activate actor \par
}{
Definition at line 833 of file CoolBoardActor.cpp.}\par
{
References CoolBoardActor::state::actif, CoolBoardActor::state::actifTime, actor, CoolBoardActor::state::inactifTime, CoolBoardActor::state::rangeLow, CoolBoardActor::state::timeLow, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a216aa7a0cfd1f31d0025cc91c2ecd5dd_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a216aa7a0cfd1f31d0025cc91c2ecd5dd_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v hourAction\:CoolBoardActor}
{\xe \v CoolBoardActor\:hourAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::hourAction (int  {\i hour})}}
\par
{\bkmkstart AAAAAAAAUS}
{\bkmkend AAAAAAAAUS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::hourAction( current hour ): This method is provided to handle hour actors. it changes the action according to:\par
hour >= hourLow : deactivate the actor hour >= hourHigh : activate the actor \par
}{
Definition at line 922 of file CoolBoardActor.cpp.}\par
{
References actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_adf3b4e15b9d73681082112adf8ef95cb_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_adf3b4e15b9d73681082112adf8ef95cb_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mixedHourAction\:CoolBoardActor}
{\xe \v CoolBoardActor\:mixedHourAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::mixedHourAction (int  {\i hour}, float  {\i measurment})}}
\par
{\bkmkstart AAAAAAAAUT}
{\bkmkend AAAAAAAAUT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::mixedHourAction( current hour, measured value ): This method is provided to handle mixed hour actors. it changes the action according to :\par
hour >= hourLow : -measuredValue >= rangeHigh : deactivate actor -measured < rangeHigh : activate actor\par
hour >= hourHigh : -measuredValue < rangeLow : activate actor -measuredValue >=rangeLow : activate actor \par
}{
Definition at line 983 of file CoolBoardActor.cpp.}\par
{
References actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a6d93a24502c56ced2ef7675c913a276b_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a6d93a24502c56ced2ef7675c913a276b_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v minuteAction\:CoolBoardActor}
{\xe \v CoolBoardActor\:minuteAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::minuteAction (int  {\i minute})}}
\par
{\bkmkstart AAAAAAAAUU}
{\bkmkend AAAAAAAAUU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::minteAction( current minute ): This method is provided to handle minute actors. it changes the action according to:\par
minute >= minuteLow : deactivate the actor minute >= minuteHigh : activate the actor \par
}{
Definition at line 1090 of file CoolBoardActor.cpp.}\par
{
References actor, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_af000944ce0b9abb9c6ee4b8fe839fb36_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_af000944ce0b9abb9c6ee4b8fe839fb36_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mixedMinuteAction\:CoolBoardActor}
{\xe \v CoolBoardActor\:mixedMinuteAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::mixedMinuteAction (int  {\i minute}, float  {\i measurment})}}
\par
{\bkmkstart AAAAAAAAUV}
{\bkmkend AAAAAAAAUV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::mixedMinuteAction( current minute, measured value ): This method is provided to handle mixed minute actors. it changes the action according to :\par
minute >= minuteLow : -measuredValue >= rangeHigh : deactivate actor -measured < rangeHigh : activate actor\par
minute >= minuteHigh : -measuredValue < rangeLow : activate actor -measuredValue >=rangeLow : activate actor \par
}{
Definition at line 1150 of file CoolBoardActor.cpp.}\par
{
References actor, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a2b8a79a27288d5246e3e3860ae76770d_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a2b8a79a27288d5246e3e3860ae76770d_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v hourMinuteAction\:CoolBoardActor}
{\xe \v CoolBoardActor\:hourMinuteAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::hourMinuteAction (int  {\i hour}, int  {\i minute})}}
\par
{\bkmkstart AAAAAAAAUW}
{\bkmkend AAAAAAAAUW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::minteAction( current hour,current minute ): This method is provided to handle hour minute actors. it changes the action according to:\par
hour == hourLow : minute >= minuteLow : deactivate the actor\par
hour > hourLow : deactivate the actor\par
hour == hourHigh : minute >= minteHigh : activate the actor\par
hour > hourHigh : activate the actor \par
}{
Definition at line 1266 of file CoolBoardActor.cpp.}\par
{
References actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a1eb1fbca19bc80aad20d2686d52317f8_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a1eb1fbca19bc80aad20d2686d52317f8_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mixedHourMinuteAction\:CoolBoardActor}
{\xe \v CoolBoardActor\:mixedHourMinuteAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::mixedHourMinuteAction (int  {\i hour}, int  {\i minute}, float  {\i measurment})}}
\par
{\bkmkstart AAAAAAAAUX}
{\bkmkend AAAAAAAAUX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardActor::minteAction( current hour,current minute , measured Value ): This method is provided to handle hour minute actors. it changes the action according to:\par
hour == hourLow : minute >= minuteLow : measuredValue >= rangeHigh : deactivate actor measuredValue < rangeHigh : activate actor\par
hour > hourLow : measuredValue >= rangeHigh : deactivate actor measuredValue < rangeHigh : activate actor\par
hour == hourHigh : minute >= minteHigh : measuredValue >= rangeLow : deactivate actor measuredValue < rangeLow : activate actor\par
hour > hourHigh : measuredValue >= rangeLow : deactivate actor measuredValue < rangeLow : activate actor \par
}{
Definition at line 1371 of file CoolBoardActor.cpp.}\par
{
References actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, and write().}\par
{
Referenced by doAction().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_ae6b2a17b0e73cfeb353ded2cc4e08109_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_ae6b2a17b0e73cfeb353ded2cc4e08109_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:CoolBoardActor}
{\xe \v CoolBoardActor\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoardActor::config ()}}
\par
{\bkmkstart AAAAAAAAUY}
{\bkmkend AAAAAAAAUY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardActor::config()}: This method is provided to configure the {\b CoolBoardActor} with a configuration file\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful,false otherwise \par
}}{
Definition at line 258 of file CoolBoardActor.cpp.}\par
{
References CoolBoardActor::state::actif, actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, CoolBoardActor::state::inverted, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, CoolBoardActor::state::primaryType, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, CoolBoardActor::state::secondaryType, CoolBoardActor::state::temporal, CoolBoardActor::state::timeHigh, and CoolBoardActor::state::timeLow.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_a5af5538fc7d169f63127e06d5219bcd4_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printConf\:CoolBoardActor}
{\xe \v CoolBoardActor\:printConf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardActor::printConf ()}}
\par
{\bkmkstart AAAAAAAAUZ}
{\bkmkend AAAAAAAAUZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardActor::printConf()}: This method is provided to print the configuration to the Serial Monitor \par
}{
Definition at line 458 of file CoolBoardActor.cpp.}\par
{
References CoolBoardActor::state::actif, actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, CoolBoardActor::state::inverted, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, CoolBoardActor::state::primaryType, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, CoolBoardActor::state::secondaryType, CoolBoardActor::state::temporal, CoolBoardActor::state::timeHigh, and CoolBoardActor::state::timeLow.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d69/class_cool_board_actor_aabb10e7aebc3249ffc940530de29f84a_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v actor\:CoolBoardActor}
{\xe \v CoolBoardActor\:actor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b CoolBoardActor::state} CoolBoardActor::actor{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVA}
{\bkmkend AAAAAAAAVA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by config(), doAction(), hourAction(), hourMinuteAction(), invertedAction(), minuteAction(), mixedHourAction(), mixedHourMinuteAction(), mixedMinuteAction(), mixedTemporalActionOff(), mixedTemporalActionOn(), normalAction(), printConf(), temporalActionOff(), and temporalActionOn().}\par
}
{\xe \v pin\:CoolBoardActor}
{\xe \v CoolBoardActor\:pin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CoolBoardActor::pin = 15{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVB}
{\bkmkend AAAAAAAAVB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
pin Number value the only available pin that can be used to run a small actor is pin 15 \par
}{
Definition at line 205 of file CoolBoardActor.h.}\par
{
Referenced by begin(), and write().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolBoardActor.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolBoardActor.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoardLed Class Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoardLed}
{\xe \v CoolBoardLed}
{\bkmkstart AAAAAAAAVC}
{\bkmkend AAAAAAAAVC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the led in the Sensor Board. }}\par
{
{\f2 #include <CoolBoardLed.h>}}\par
Collaboration diagram for CoolBoardLed:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d22/class_cool_board_led__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write} (int R, int G, int B)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b end} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b activate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printConf} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fade} (int R, int G, int B, float T)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b blink} (int R, int G, int B, float T)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fadeIn} (int R, int G, int B, float T)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b fadeOut} (int R, int G, int B, float T)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b strobe} (int R, int G, int B, float T)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
NeoPixelBus< NeoGrbFeature, Neo800KbpsMethod > * {\b neoPixelLed} = NULL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b ledActive} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the led in the Sensor Board. \par
}{
Definition at line 45 of file CoolBoardLed.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:CoolBoardLed}
{\xe \v CoolBoardLed\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardLed::begin ()}}
\par
{\bkmkstart AAAAAAAAVD}
{\bkmkend AAAAAAAAVD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed::begin()}: This method is provided to start the Led Object by setting the correct pin and creating a dynamic neoPixelBus \par
}{
Definition at line 249 of file CoolBoardLed.cpp.}\par
{
References ledActive, and neoPixelLed.}\par
{
Referenced by CoolBoard::config().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc0/class_cool_board_led_ae3cbde8affcc6f011cbd698c8ef911f6_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v write\:CoolBoardLed}
{\xe \v CoolBoardLed\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardLed::write (int  {\i R}, int  {\i G}, int  {\i B})}}
\par
{\bkmkstart AAAAAAAAVE}
{\bkmkend AAAAAAAAVE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardLed::write(Red,Green,Blue): This method is provided to set the Color of the Led \par
}{
Definition at line 275 of file CoolBoardLed.cpp.}\par
{
References ledActive, and neoPixelLed.}\par
{
Referenced by CoolBoard::begin(), and CoolBoard::connect().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc0/class_cool_board_led_a30fadd4cbec17ceea428bf7a32207e87_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v end\:CoolBoardLed}
{\xe \v CoolBoardLed\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardLed::end ()}}
\par
{\bkmkstart AAAAAAAAVF}
{\bkmkend AAAAAAAAVF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed::end()} : this method is provided to delete the dynamically created neoPixelLed \par
}{
Definition at line 230 of file CoolBoardLed.cpp.}\par
{
References neoPixelLed.}\par
}
{\xe \v config\:CoolBoardLed}
{\xe \v CoolBoardLed\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoardLed::config ()}}
\par
{\bkmkstart AAAAAAAAVG}
{\bkmkend AAAAAAAAVG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed::config()}: This method is provided to configure the Led Object : -ledActive=0 : deactivated -ledActive=1 : activated \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if the configuration done, false otherwise \par
}}{
Definition at line 308 of file CoolBoardLed.cpp.}\par
{
References ledActive.}\par
{
Referenced by CoolBoard::config().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc0/class_cool_board_led_a1b60e5e30bea96c49ed62ed1bf1ffc8b_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v activate\:CoolBoardLed}
{\xe \v CoolBoardLed\:activate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardLed::activate ()}}
\par
{\bkmkstart AAAAAAAAVH}
{\bkmkend AAAAAAAAVH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed::activate()}: This method is provided to activate the Led Object without the configuration file \par
}{
Definition at line 441 of file CoolBoardLed.cpp.}\par
{
References ledActive.}\par
}
{\xe \v printConf\:CoolBoardLed}
{\xe \v CoolBoardLed\:printConf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardLed::printConf ()}}
\par
{\bkmkstart AAAAAAAAVI}
{\bkmkend AAAAAAAAVI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed::printConf()}: This method is provided to print the Led Object Configuration to the Serial Monitor \par
}{
Definition at line 417 of file CoolBoardLed.cpp.}\par
{
References ledActive.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc0/class_cool_board_led_a8ed3053a36f0ed4a131f43b5b17efb61_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v fade\:CoolBoardLed}
{\xe \v CoolBoardLed\:fade}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardLed::fade (int  {\i R}, int  {\i G}, int  {\i B}, float  {\i T})}}
\par
{\bkmkstart AAAAAAAAVJ}
{\bkmkend AAAAAAAAVJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed::fade} ( Red , Green , Blue, Time in seconds ): fade animation: Fade In over T(seconds) Fade Out over T(seconds) \par
}{
Definition at line 50 of file CoolBoardLed.cpp.}\par
{
References ledActive, and neoPixelLed.}\par
{
Referenced by CoolBoard::offLineMode(), and CoolBoard::onLineMode().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc0/class_cool_board_led_af1cacbaa88db8bcf6042c1083ba41155_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v blink\:CoolBoardLed}
{\xe \v CoolBoardLed\:blink}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardLed::blink (int  {\i R}, int  {\i G}, int  {\i B}, float  {\i T})}}
\par
{\bkmkstart AAAAAAAAVK}
{\bkmkend AAAAAAAAVK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardLed::blink( Red , Green , Blue , Time in seconds ): Blink animation: Led On for T seconds Led off \par
}{
Definition at line 91 of file CoolBoardLed.cpp.}\par
{
References ledActive, and neoPixelLed.}\par
{
Referenced by CoolBoard::begin(), CoolBoard::config(), CoolBoard::connect(), CoolBoard::offLineMode(), and CoolBoard::onLineMode().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc0/class_cool_board_led_a96e1ea13003eee34c9dbcef340404426_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v fadeIn\:CoolBoardLed}
{\xe \v CoolBoardLed\:fadeIn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardLed::fadeIn (int  {\i R}, int  {\i G}, int  {\i B}, float  {\i T})}}
\par
{\bkmkstart AAAAAAAAVL}
{\bkmkend AAAAAAAAVL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardLed::fadeIn(Red , Green , Blue , Time in seconds) Fade In animation: gradual increase over T(seconds) \par
}{
Definition at line 124 of file CoolBoardLed.cpp.}\par
{
References ledActive, and neoPixelLed.}\par
{
Referenced by CoolBoard::config(), CoolBoard::offLineMode(), CoolBoard::onLineMode(), CoolBoard::readSensors(), and CoolBoard::update().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc0/class_cool_board_led_ab778f5e7bed0ab74e3906d82110493c3_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v fadeOut\:CoolBoardLed}
{\xe \v CoolBoardLed\:fadeOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardLed::fadeOut (int  {\i R}, int  {\i G}, int  {\i B}, float  {\i T})}}
\par
{\bkmkstart AAAAAAAAVM}
{\bkmkend AAAAAAAAVM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardLed::fadeOut( Red , Green , Blue , Time in seconds) Fade Out animation: gradual decrease over T(seconds) \par
}{
Definition at line 159 of file CoolBoardLed.cpp.}\par
{
References ledActive, and neoPixelLed.}\par
{
Referenced by CoolBoard::begin(), CoolBoard::config(), CoolBoard::offLineMode(), CoolBoard::onLineMode(), CoolBoard::readSensors(), and CoolBoard::update().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc0/class_cool_board_led_a93d545679237e8cc858324367149775c_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v strobe\:CoolBoardLed}
{\xe \v CoolBoardLed\:strobe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardLed::strobe (int  {\i R}, int  {\i G}, int  {\i B}, float  {\i T})}}
\par
{\bkmkstart AAAAAAAAVN}
{\bkmkend AAAAAAAAVN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardLed::strobe(Red , Green , Blue , Time in seconds) Strobe animation: blinks over T(seconds) \par
}{
Definition at line 193 of file CoolBoardLed.cpp.}\par
{
References ledActive, and neoPixelLed.}\par
{
Referenced by CoolBoard::config(), CoolBoard::onLineMode(), CoolBoard::readSensors(), and CoolBoard::update().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc0/class_cool_board_led_ad5f0de4c628cbfbf49896042831c64ad_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v neoPixelLed\:CoolBoardLed}
{\xe \v CoolBoardLed\:neoPixelLed}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NeoPixelBus<NeoGrbFeature, Neo800KbpsMethod>* CoolBoardLed::neoPixelLed = NULL{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVO}
{\bkmkend AAAAAAAAVO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NeoPixel Led Instance \par
}{
Definition at line 83 of file CoolBoardLed.h.}\par
{
Referenced by begin(), blink(), end(), fade(), fadeIn(), fadeOut(), strobe(), and write().}\par
}
{\xe \v ledActive\:CoolBoardLed}
{\xe \v CoolBoardLed\:ledActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoardLed::ledActive =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAVP}
{\bkmkend AAAAAAAAVP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ledActive flag set to 1 if you want LED animation \par
}{
Definition at line 89 of file CoolBoardLed.h.}\par
{
Referenced by activate(), begin(), blink(), config(), fade(), fadeIn(), fadeOut(), printConf(), strobe(), and write().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolBoardLed.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolBoardLed.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoardSensors Class Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoardSensors}
{\xe \v CoolBoardSensors}
{\bkmkstart AAAAAAAAVQ}
{\bkmkend AAAAAAAAVQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the On-Board Sensors. }}\par
{
{\f2 #include <CoolBoardSensors.h>}}\par
Collaboration diagram for CoolBoardSensors:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/db9/class_cool_board_sensors__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b airActive}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b lightActive}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolBoardSensors} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b read} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b allActive} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b end} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printConf} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setEnvSensorSettings} (uint8_t commInterface={\b I2C_MODE}, uint8_t I2CAddress=0x76, uint8_t runMode=3, uint8_t tStandby=0, uint8_t filter=0, uint8_t tempOverSample=1, uint8_t pressOverSample=1, uint8_t humidOverSample=1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readVBat} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readMoisture} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolSI114X} {\b lightSensor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b BME280} {\b envSensor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CoolBoardSensors::lightActive} {\b lightDataActive}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CoolBoardSensors::airActive} {\b airDataActive}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b EnMoisture} = 13\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b AnMplex} = 12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b vbatActive} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b soilMoistureActive} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the On-Board Sensors. \par
}{
Definition at line 48 of file CoolBoardSensors.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v CoolBoardSensors::airActive}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct CoolBoardSensors::airActive\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b airActive} structure\par
set temperature to 1 to have temperature Readings\par
set humidity to 1 to have humidity Readings\par
set pressure to 1 to have pressure Readings \par
}{
Definition at line 123 of file CoolBoardSensors.h.}\par
}
Collaboration diagram for CoolBoardSensors::airActive:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d30/struct_cool_board_sensors_1_1air_active__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\cell }{temperature\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\cell }{humidity\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\cell }{pressure\cell }{\cell }{\row }
}
{\xe \v CoolBoardSensors::lightActive}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct CoolBoardSensors::lightActive\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b lightActive} structure\par
set visible to 1 to have visibleLight Readings\par
set ir to 1 to have infraRed Readings\par
set uv to 1 to have ultraViolet Readings \par
}{
Definition at line 106 of file CoolBoardSensors.h.}\par
}
Collaboration diagram for CoolBoardSensors::lightActive:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d9f/struct_cool_board_sensors_1_1light_active__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\cell }{visible\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\cell }{ir\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\cell }{uv\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CoolBoardSensors\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:CoolBoardSensors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolBoardSensors::CoolBoardSensors ()}}
\par
{\bkmkstart AAAAAAAAVR}
{\bkmkend AAAAAAAAVR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors::CoolBoardSensors()}: This Constructor is provided to init the different used pins \par
}{
Definition at line 50 of file CoolBoardSensors.cpp.}\par
{
References AnMplex, and EnMoisture.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardSensors::begin ()}}
\par
{\bkmkstart AAAAAAAAVS}
{\bkmkend AAAAAAAAVS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors::begin()}: This method is provided to start the sensors that are on the sensor board \par
}{
Definition at line 107 of file CoolBoardSensors.cpp.}\par
{
References BME280::begin(), CoolSI114X::Begin(), envSensor, lightSensor, and setEnvSensorSettings().}\par
{
Referenced by CoolBoard::begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d46/class_cool_board_sensors_a97095823ef7c8f5290812f1405b966b3_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d46/class_cool_board_sensors_a97095823ef7c8f5290812f1405b966b3_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v read\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolBoardSensors::read ()}}
\par
{\bkmkstart AAAAAAAAVT}
{\bkmkend AAAAAAAAVT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors::read()}: This method is provided to return the data read by the sensor board\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid a json string containing the sensors data \par
}}{
Definition at line 177 of file CoolBoardSensors.cpp.}\par
{
References airDataActive, envSensor, CoolBoardSensors::airActive::humidity, CoolBoardSensors::lightActive::ir, lightDataActive, lightSensor, CoolBoardSensors::airActive::pressure, BME280::readFloatHumidity(), BME280::readFloatPressure(), CoolSI114X::ReadIR(), readMoisture(), BME280::readTempC(), CoolSI114X::ReadUV(), readVBat(), CoolSI114X::ReadVisible(), soilMoistureActive, CoolBoardSensors::airActive::temperature, CoolBoardSensors::lightActive::uv, vbatActive, and CoolBoardSensors::lightActive::visible.}\par
{
Referenced by CoolBoard::readSensors().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d46/class_cool_board_sensors_a91badb2539d91fda8679f2a597874c48_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d46/class_cool_board_sensors_a91badb2539d91fda8679f2a597874c48_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v allActive\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:allActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardSensors::allActive ()}}
\par
{\bkmkstart AAAAAAAAVU}
{\bkmkend AAAAAAAAVU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors::allActive()}: This method is provided to allow activation of all the sensor board sensors without passing by the configuration file/method \par
}{
Definition at line 74 of file CoolBoardSensors.cpp.}\par
{
References airDataActive, CoolBoardSensors::airActive::humidity, CoolBoardSensors::lightActive::ir, lightDataActive, CoolBoardSensors::airActive::pressure, soilMoistureActive, CoolBoardSensors::airActive::temperature, CoolBoardSensors::lightActive::uv, vbatActive, and CoolBoardSensors::lightActive::visible.}\par
}
{\xe \v end\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:end}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardSensors::end ()}}
\par
{\bkmkstart AAAAAAAAVV}
{\bkmkend AAAAAAAAVV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors::end()}: This method is provided to end the sensors on the sensor board \par
}{
Definition at line 156 of file CoolBoardSensors.cpp.}\par
{
References CoolSI114X::DeInit(), and lightSensor.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d46/class_cool_board_sensors_a4902b69f6e628bd6557193758fdd2bae_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoardSensors::config ()}}
\par
{\bkmkstart AAAAAAAAVW}
{\bkmkend AAAAAAAAVW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors::config()}: This method is provided to configure the sensor board : -activate 1 -deactivate 0\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if configuration is successful, false otherwise \par
}}{
Definition at line 273 of file CoolBoardSensors.cpp.}\par
{
References airDataActive, CoolBoardSensors::airActive::humidity, CoolBoardSensors::lightActive::ir, lightDataActive, CoolBoardSensors::airActive::pressure, soilMoistureActive, CoolBoardSensors::airActive::temperature, CoolBoardSensors::lightActive::uv, vbatActive, and CoolBoardSensors::lightActive::visible.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d46/class_cool_board_sensors_a9a218895c5423375c33c08f2c56fb23a_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printConf\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:printConf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardSensors::printConf ()}}
\par
{\bkmkstart AAAAAAAAVX}
{\bkmkend AAAAAAAAVX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors::printConf()}: This method is provided to print the configuration to the Serial Monitor \par
}{
Definition at line 458 of file CoolBoardSensors.cpp.}\par
{
References airDataActive, CoolBoardSensors::airActive::humidity, CoolBoardSensors::lightActive::ir, lightDataActive, CoolBoardSensors::airActive::pressure, soilMoistureActive, CoolBoardSensors::airActive::temperature, CoolBoardSensors::lightActive::uv, vbatActive, and CoolBoardSensors::lightActive::visible.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d46/class_cool_board_sensors_af6fd79505815b204c178617ecf54c873_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setEnvSensorSettings\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:setEnvSensorSettings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolBoardSensors::setEnvSensorSettings (uint8_t  {\i commInterface} = {\f2 {\b I2C_MODE}}, uint8_t  {\i I2CAddress} = {\f2 0x76}, uint8_t  {\i runMode} = {\f2 3}, uint8_t  {\i tStandby} = {\f2 0}, uint8_t  {\i filter} = {\f2 0}, uint8_t  {\i tempOverSample} = {\f2 1}, uint8_t  {\i pressOverSample} = {\f2 1}, uint8_t  {\i humidOverSample} = {\f2 1})}}
\par
{\bkmkstart AAAAAAAAVY}
{\bkmkend AAAAAAAAVY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolBoardSensors::setEnvSensorSetting(): This method is provided to set the enviornment sensor settings , if argument is ommitted , default value will be assigned \par
}{
Definition at line 504 of file CoolBoardSensors.cpp.}\par
{
References SensorSettings::commInterface, envSensor, SensorSettings::filter, SensorSettings::humidOverSample, SensorSettings::I2CAddress, SensorSettings::pressOverSample, SensorSettings::runMode, BME280::settings, SensorSettings::tempOverSample, and SensorSettings::tStandby.}\par
{
Referenced by begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d46/class_cool_board_sensors_a406307ffd70272282d91479c7ed8d66f_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readVBat\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:readVBat}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float CoolBoardSensors::readVBat ()}}
\par
{\bkmkstart AAAAAAAAVZ}
{\bkmkend AAAAAAAAVZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors::readVBat()}: This method is provided to read the Battery Voltage.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid a float representing the battery voltage \par
}}{
Definition at line 544 of file CoolBoardSensors.cpp.}\par
{
References AnMplex.}\par
{
Referenced by read().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d46/class_cool_board_sensors_a6944b6ea7bce8e2fce1b434acfd9d5f3_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readMoisture\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:readMoisture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float CoolBoardSensors::readMoisture ()}}
\par
{\bkmkstart AAAAAAAAWA}
{\bkmkend AAAAAAAAWA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors::readMoisture()}: This method is provided to red the Soil Moisture\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid a float represnting the soil moisture \par
}}{
Definition at line 581 of file CoolBoardSensors.cpp.}\par
{
References AnMplex, and EnMoisture.}\par
{
Referenced by read().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d46/class_cool_board_sensors_a8761bff50373c485f4465c8db47d0633_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v lightSensor\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:lightSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolSI114X} CoolBoardSensors::lightSensor}}
\par
{\bkmkstart AAAAAAAAWB}
{\bkmkend AAAAAAAAWB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
SI114X light sensor instance \par
}{
Definition at line 89 of file CoolBoardSensors.h.}\par
{
Referenced by begin(), end(), and read().}\par
}
{\xe \v envSensor\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:envSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b BME280} CoolBoardSensors::envSensor}}
\par
{\bkmkstart AAAAAAAAWC}
{\bkmkend AAAAAAAAWC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b BME280} environment sensor instance \par
}{
Definition at line 94 of file CoolBoardSensors.h.}\par
{
Referenced by begin(), read(), and setEnvSensorSettings().}\par
}
{\xe \v lightDataActive\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:lightDataActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b CoolBoardSensors::lightActive} CoolBoardSensors::lightDataActive{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWD}
{\bkmkend AAAAAAAAWD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by allActive(), config(), printConf(), and read().}\par
}
{\xe \v airDataActive\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:airDataActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b CoolBoardSensors::airActive} CoolBoardSensors::airDataActive{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWE}
{\bkmkend AAAAAAAAWE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by allActive(), config(), printConf(), and read().}\par
}
{\xe \v EnMoisture\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:EnMoisture}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CoolBoardSensors::EnMoisture = 13{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWF}
{\bkmkend AAAAAAAAWF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Moisture Enable Pin \par
}{
Definition at line 134 of file CoolBoardSensors.h.}\par
{
Referenced by CoolBoardSensors(), and readMoisture().}\par
}
{\xe \v AnMplex\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:AnMplex}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int CoolBoardSensors::AnMplex = 12{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWG}
{\bkmkend AAAAAAAAWG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Analog Multiplexer LOW=Vbat , HIGH=Moisture \par
}{
Definition at line 139 of file CoolBoardSensors.h.}\par
{
Referenced by CoolBoardSensors(), readMoisture(), and readVBat().}\par
}
{\xe \v vbatActive\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:vbatActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoardSensors::vbatActive =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWH}
{\bkmkend AAAAAAAAWH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
set vbatActive to 1 to have battery voltage Readings \par
}{
Definition at line 144 of file CoolBoardSensors.h.}\par
{
Referenced by allActive(), config(), printConf(), and read().}\par
}
{\xe \v soilMoistureActive\:CoolBoardSensors}
{\xe \v CoolBoardSensors\:soilMoistureActive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolBoardSensors::soilMoistureActive =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWI}
{\bkmkend AAAAAAAAWI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
set soilMoistureActive to 1 to have soil Moisture Readings \par
}{
Definition at line 149 of file CoolBoardSensors.h.}\par
{
Referenced by allActive(), config(), printConf(), and read().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolBoardSensors.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolBoardSensors.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolFileSystem Class Reference\par \pard\plain 
{\tc\tcl2 \v CoolFileSystem}
{\xe \v CoolFileSystem}
{\bkmkstart AAAAAAAAWJ}
{\bkmkend AAAAAAAAWJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the file system. }}\par
{
{\f2 #include <CoolFileSystem.h>}}\par
Collaboration diagram for CoolFileSystem:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d8f/class_cool_file_system__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b updateConfigFiles} (String answer)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b fileUpdate} (String update, const char *path)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b saveSensorData} (const char *data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b saveSensorDataCSV} (const char *data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b isDataSaved} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String * {\b getSensorSavedData} (int &size)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b incrementsavedData} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b getsavedData} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b savedData} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b linesToSkip} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the file system. \par
}{
Definition at line 46 of file CoolFileSystem.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:CoolFileSystem}
{\xe \v CoolFileSystem\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolFileSystem::begin ()}}
\par
{\bkmkstart AAAAAAAAWK}
{\bkmkend AAAAAAAAWK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolFileSystem::begin()}: This method is provided to start the SPIFFS object.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if SPIFFS was initialized correctly, false otherwise \par
}}{
Definition at line 50 of file CoolFileSystem.cpp.}\par
{
References getsavedData().}\par
{
Referenced by CoolBoard::config().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_a6ba6f666ed4c530174f8569d2c636748_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_a6ba6f666ed4c530174f8569d2c636748_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v updateConfigFiles\:CoolFileSystem}
{\xe \v CoolFileSystem\:updateConfigFiles}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolFileSystem::updateConfigFiles (String  {\i answer})}}
\par
{\bkmkstart AAAAAAAAWL}
{\bkmkend AAAAAAAAWL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolFileSystem::updateConfigFiles( mqtt answer ): This method is provided to update the configuration files when the appropriate mqtt answer is received\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if the files are updated correctly, false otherwise \par
}}{
Definition at line 390 of file CoolFileSystem.cpp.}\par
{
References fileUpdate(), and temp.}\par
{
Referenced by CoolBoard::update().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_adfa8e2e80641ae6f0cceabd348a9b841_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_adfa8e2e80641ae6f0cceabd348a9b841_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v fileUpdate\:CoolFileSystem}
{\xe \v CoolFileSystem\:fileUpdate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolFileSystem::fileUpdate (String  {\i update}, const char *  {\i path})}}
\par
{\bkmkstart AAAAAAAAWM}
{\bkmkend AAAAAAAAWM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolFileSystem::fileUpdate( update msg, file path): This method is provided to ensure the correct update for each configuration file in the File system\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful , false otherwise \par
}}{
Definition at line 1003 of file CoolFileSystem.cpp.}\par
{
Referenced by updateConfigFiles().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_a13f2958f5b87757c31fc53797a30d23a_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v saveSensorData\:CoolFileSystem}
{\xe \v CoolFileSystem\:saveSensorData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolFileSystem::saveSensorData (const char *  {\i data})}}
\par
{\bkmkstart AAAAAAAAWN}
{\bkmkend AAAAAAAAWN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolFileSystem::saveSensorData( data ): This method is provided to save the data on the local memory when there is no internet available\par
increments the saved data flag when successful\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if the data was saved, false otherwise \par
}}{
Definition at line 81 of file CoolFileSystem.cpp.}\par
{
References incrementsavedData(), savedData, and saveSensorDataCSV().}\par
{
Referenced by CoolBoard::offLineMode().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_afa3a4feae94871d4d3b6bebb701c2e67_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_afa3a4feae94871d4d3b6bebb701c2e67_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v saveSensorDataCSV\:CoolFileSystem}
{\xe \v CoolFileSystem\:saveSensorDataCSV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolFileSystem::saveSensorDataCSV (const char *  {\i data})}}
\par
{\bkmkstart AAAAAAAAWO}
{\bkmkend AAAAAAAAWO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolFileSystem::saveSensorDataCSV( data ): This method is provided to save the data on the local memory in CSV format.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if the data was saved, false otherwise \par
}}{
Definition at line 185 of file CoolFileSystem.cpp.}\par
{
Referenced by saveSensorData().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_ab78704d5d21ce10fc6f1138ab5ab46c8_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isDataSaved\:CoolFileSystem}
{\xe \v CoolFileSystem\:isDataSaved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolFileSystem::isDataSaved ()}}
\par
{\bkmkstart AAAAAAAAWP}
{\bkmkend AAAAAAAAWP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolFileSystem::isDataSaved()}: This method is provided to report wether there is sensor data saved in the File System.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if there is data saved, false otherwise \par
}}{
Definition at line 782 of file CoolFileSystem.cpp.}\par
{
References savedData.}\par
{
Referenced by CoolBoard::onLineMode().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_ac86a40e7c3a1842f7342f698d34324f9_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getSensorSavedData\:CoolFileSystem}
{\xe \v CoolFileSystem\:getSensorSavedData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String * CoolFileSystem::getSensorSavedData (int &  {\i lines})}}
\par
{\bkmkstart AAAAAAAAWQ}
{\bkmkend AAAAAAAAWQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolFileSystem::getSensorData(int &lines): This method is provided to return the sensor data saved in the File System 10 lines at a time\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid String array containing 50 first lines from the file modifies tge lines argument to reflect the number of lines left \par
}}{
Definition at line 842 of file CoolFileSystem.cpp.}\par
{
References incrementsavedData(), linesToSkip, savedData, and temp.}\par
{
Referenced by CoolBoard::onLineMode().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_a3223ffff4266a6300988fab956d6b4b2_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_a3223ffff4266a6300988fab956d6b4b2_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v incrementsavedData\:CoolFileSystem}
{\xe \v CoolFileSystem\:incrementsavedData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolFileSystem::incrementsavedData ()}}
\par
{\bkmkstart AAAAAAAAWR}
{\bkmkend AAAAAAAAWR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolFileSystem::incrementsavedData()}: This method is provided to increment the savedData flag\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful , false otherwise \par
}}{
Definition at line 1152 of file CoolFileSystem.cpp.}\par
{
References linesToSkip, and savedData.}\par
{
Referenced by getSensorSavedData(), and saveSensorData().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_aae045125288f255f3e258073dcada2a6_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getsavedData\:CoolFileSystem}
{\xe \v CoolFileSystem\:getsavedData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolFileSystem::getsavedData ()}}
\par
{\bkmkstart AAAAAAAAWS}
{\bkmkend AAAAAAAAWS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolFileSystem::getsavedData()}: This method is provided to get the savedData flag from the file system \par
}{
Definition at line 1202 of file CoolFileSystem.cpp.}\par
{
References linesToSkip, savedData, and temp.}\par
{
Referenced by begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/d0c/class_cool_file_system_a70701d05e811604af1b531f4f6dc69ed_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v savedData\:CoolFileSystem}
{\xe \v CoolFileSystem\:savedData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolFileSystem::savedData =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWT}
{\bkmkend AAAAAAAAWT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of lines to read when retrieving saved Data \par
}{
Definition at line 74 of file CoolFileSystem.h.}\par
{
Referenced by getsavedData(), getSensorSavedData(), incrementsavedData(), isDataSaved(), and saveSensorData().}\par
}
{\xe \v linesToSkip\:CoolFileSystem}
{\xe \v CoolFileSystem\:linesToSkip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolFileSystem::linesToSkip =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAWU}
{\bkmkend AAAAAAAAWU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Number of lines to Skip when retrieving saved Data \par
}{
Definition at line 80 of file CoolFileSystem.h.}\par
{
Referenced by getsavedData(), getSensorSavedData(), and incrementsavedData().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolFileSystem.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolFileSystem.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolMQTT Class Reference\par \pard\plain 
{\tc\tcl2 \v CoolMQTT}
{\xe \v CoolMQTT}
{\bkmkstart AAAAAAAAWV}
{\bkmkend AAAAAAAAWV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the mqtt client. }}\par
{
{\f2 #include <CoolMQTT.h>}}\par
Collaboration diagram for CoolMQTT:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/def/class_cool_m_q_t_t__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b connect} (unsigned long keepAlive)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b publish} (const char *data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b publish} (const char *data, unsigned long logInterval)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b read} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b config} (const char {\b mqttServer}[], const char {\b inTopic}[], const char {\b outTopic}[], const char {\b user}[], int {\b bufferSize})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b callback} (char *topic, byte *payload, unsigned int length)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printConf} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b state} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b mqttLoop} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getUser} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b mqttServer} [50] =\{'0'\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b msg} =""\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b inTopic} [50] =\{'0'\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b outTopic} [50] =\{'0'\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char {\b user} [50] =\{'0'\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b bufferSize} =3000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
WiFiClient {\b espClient}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} {\b client}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b newMsg} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b previousLogTime} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the mqtt client. \par
}{
Definition at line 45 of file CoolMQTT.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:CoolMQTT}
{\xe \v CoolMQTT\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolMQTT::begin ()}}
\par
{\bkmkstart AAAAAAAAWW}
{\bkmkend AAAAAAAAWW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT::begin()}: This method is provided to set the mqtt client's parameters: -client -server -callback method -buffer size \par
}{
Definition at line 54 of file CoolMQTT.cpp.}\par
{
References bufferSize, callback(), client, espClient, mqttServer, CoolPubSubClient::setBufferSize(), CoolPubSubClient::setCallback(), CoolPubSubClient::setClient(), and CoolPubSubClient::setServer().}\par
{
Referenced by CoolBoard::begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_ac9248808641ebf3054ed0620ea9d0100_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_ac9248808641ebf3054ed0620ea9d0100_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v connect\:CoolMQTT}
{\xe \v CoolMQTT\:connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolMQTT::connect (unsigned long  {\i keepAlive})}}
\par
{\bkmkstart AAAAAAAAWX}
{\bkmkend AAAAAAAAWX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolMQTT::connect( time to keep the connection alive in seconds ): This method is provided to connect the client to the server, publish to the out topic , subscribe to the in topic and set the keepAlive time.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid mqtt client state \par
}}{
Definition at line 110 of file CoolMQTT.cpp.}\par
{
References client, CoolPubSubClient::connect(), CoolPubSubClient::connected(), inTopic, state(), CoolPubSubClient::subscribe(), and user.}\par
{
Referenced by CoolBoard::connect().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_a50075d0ab23a327ab897fd6adad20eda_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_a50075d0ab23a327ab897fd6adad20eda_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publish\:CoolMQTT}
{\xe \v CoolMQTT\:publish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolMQTT::publish (const char *  {\i data})}}
\par
{\bkmkstart AAAAAAAAWY}
{\bkmkend AAAAAAAAWY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolMQTT::publish(data): This method is provided to publish data to the out topic\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if publish successful, false otherwise \par
}}{
Definition at line 171 of file CoolMQTT.cpp.}\par
{
References client, outTopic, and CoolPubSubClient::publish().}\par
{
Referenced by CoolBoard::onLineMode(), publish(), and CoolBoard::update().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_ace977b3e90ab14b1199fe5c4fb0a13ec_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_ace977b3e90ab14b1199fe5c4fb0a13ec_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publish\:CoolMQTT}
{\xe \v CoolMQTT\:publish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolMQTT::publish (const char *  {\i data}, unsigned long  {\i logInterval})}}
\par
{\bkmkstart AAAAAAAAWZ}
{\bkmkend AAAAAAAAWZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolMQTT::publish(data): This method is provided to publish data to the out topic every logInterval in seconds\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if publish successful, false otherwise \par
}}{
Definition at line 222 of file CoolMQTT.cpp.}\par
{
References previousLogTime, and publish().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_a613c5e3927ae85bb94fbf648d84d8780_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v read\:CoolMQTT}
{\xe \v CoolMQTT\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolMQTT::read ()}}
\par
{\bkmkstart AAAAAAAAXA}
{\bkmkend AAAAAAAAXA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT::read()}: This method is provided to return the last read message. \par
}{
Definition at line 389 of file CoolMQTT.cpp.}\par
{
References msg, and newMsg.}\par
{
Referenced by CoolBoard::onLineMode().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_ae3c18f6ae9723746d32765f1c8f176ca_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:CoolMQTT}
{\xe \v CoolMQTT\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolMQTT::config (const char  {\i mqttServer}[], const char  {\i inTopic}[], const char  {\i outTopic}[], const char  {\i user}[], int  {\i bufferSize})}}
\par
{\bkmkstart AAAAAAAAXB}
{\bkmkend AAAAAAAAXB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolMQTT::config(server,in topic, out topic , user Id, buffer size): This method is provided to manually configure the mqtt client \par
}{
Definition at line 627 of file CoolMQTT.cpp.}\par
{
References bufferSize.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_a9b703de4f1358f0ee7a5e8c44979c648_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:CoolMQTT}
{\xe \v CoolMQTT\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolMQTT::config ()}}
\par
{\bkmkstart AAAAAAAAXC}
{\bkmkend AAAAAAAAXC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT::config()}: This method is provided to configure the mqttClient : -server -inTopic -outTopic -client Id -buffer size\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful,false otherwise \par
}}{
Definition at line 430 of file CoolMQTT.cpp.}\par
{
References bufferSize, inTopic, mqttServer, outTopic, and user.}\par
}
{\xe \v callback\:CoolMQTT}
{\xe \v CoolMQTT\:callback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolMQTT::callback (char *  {\i topic}, byte *  {\i payload}, unsigned int  {\i length})}}
\par
{\bkmkstart AAAAAAAAXD}
{\bkmkend AAAAAAAAXD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolMQTT::callback(in topic, incoming message , message length): This method is provided to handle incoming messages from the subscribed inTopic.\par
Arguments are automatically assigned in client.setCallback() \par
}{
Definition at line 310 of file CoolMQTT.cpp.}\par
{
References msg, newMsg, and temp.}\par
{
Referenced by begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_a30d82ad665bfb603f46ecdbc290775df_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printConf\:CoolMQTT}
{\xe \v CoolMQTT\:printConf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolMQTT::printConf ()}}
\par
{\bkmkstart AAAAAAAAXE}
{\bkmkend AAAAAAAAXE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT::printConf()}: This method is provided to print the configuration to the Serial Monitor \par
}{
Definition at line 654 of file CoolMQTT.cpp.}\par
{
References bufferSize, inTopic, mqttServer, outTopic, and user.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_a40553a0ad4b5ecf1cb4411ab54ca85fb_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v state\:CoolMQTT}
{\xe \v CoolMQTT\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolMQTT::state ()}}
\par
{\bkmkstart AAAAAAAAXF}
{\bkmkend AAAAAAAAXF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT::state()}: This method is provided to return the mqtt client's state. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid mqtt client state: -4 : MQTT_CONNECTION_TIMEOUT - the server didn't respond within the keepalive time -3 : MQTT_CONNECTION_LOST - the network connection was broken -2 : MQTT_CONNECT_FAILED - the network connection failed -1 : MQTT_DISCONNECTED - the client is disconnected cleanly 0 : MQTT_CONNECTED - the cient is connected 1 : MQTT_CONNECT_BAD_PROTOCOL - the server doesn't support the requested version of MQTT 2 : MQTT_CONNECT_BAD_CLIENT_ID - the server rejected the client identifier 3 : MQTT_CONNECT_UNAVAILABLE - the server was unable to accept the connection 4 : MQTT_CONNECT_BAD_CREDENTIALS - the username/password were rejected 5 : MQTT_CONNECT_UNAUTHORIZED - the client was not authorized to connect \par
}}{
Definition at line 87 of file CoolMQTT.cpp.}\par
{
References client, and CoolPubSubClient::state().}\par
{
Referenced by connect(), CoolBoard::connect(), CoolBoard::isConnected(), and CoolBoard::offLineMode().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_a5d003307eff78efbd585e42b43b72b6d_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_a5d003307eff78efbd585e42b43b72b6d_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mqttLoop\:CoolMQTT}
{\xe \v CoolMQTT\:mqttLoop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolMQTT::mqttLoop ()}}
\par
{\bkmkstart AAAAAAAAXG}
{\bkmkend AAAAAAAAXG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT::mqttLoop()}: This method is provided to allow the client to process the data\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful,false otherwise \par
}}{
Definition at line 274 of file CoolMQTT.cpp.}\par
{
References client, and CoolPubSubClient::loop().}\par
{
Referenced by CoolBoard::onLineMode(), and CoolBoard::update().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_aa5eaae967b562b62cbcf2b8d81f6e5d5_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_aa5eaae967b562b62cbcf2b8d81f6e5d5_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getUser\:CoolMQTT}
{\xe \v CoolMQTT\:getUser}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolMQTT::getUser ()}}
\par
{\bkmkstart AAAAAAAAXH}
{\bkmkend AAAAAAAAXH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT::getUser()}: This method is provided to get the user name \par
}{
Definition at line 690 of file CoolMQTT.cpp.}\par
{
References user.}\par
{
Referenced by CoolBoard::userData().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dd0/class_cool_m_q_t_t_a373cc92fca7760d886f02d8a6e5b3f63_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v mqttServer\:CoolMQTT}
{\xe \v CoolMQTT\:mqttServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char CoolMQTT::mqttServer[50] =\{'0'\}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXI}
{\bkmkend AAAAAAAAXI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MQTT Server name/ip \par
}{
Definition at line 79 of file CoolMQTT.h.}\par
{
Referenced by begin(), config(), and printConf().}\par
}
{\xe \v msg\:CoolMQTT}
{\xe \v CoolMQTT\:msg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolMQTT::msg =""{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXJ}
{\bkmkend AAAAAAAAXJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
String to store incoming messages \par
}{
Definition at line 84 of file CoolMQTT.h.}\par
{
Referenced by callback(), and read().}\par
}
{\xe \v inTopic\:CoolMQTT}
{\xe \v CoolMQTT\:inTopic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char CoolMQTT::inTopic[50] =\{'0'\}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXK}
{\bkmkend AAAAAAAAXK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MQTT Topic to subscribe/listen to \par
}{
Definition at line 89 of file CoolMQTT.h.}\par
{
Referenced by config(), connect(), and printConf().}\par
}
{\xe \v outTopic\:CoolMQTT}
{\xe \v CoolMQTT\:outTopic}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char CoolMQTT::outTopic[50] =\{'0'\}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXL}
{\bkmkend AAAAAAAAXL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MQTT topic to publish/write to \par
}{
Definition at line 94 of file CoolMQTT.h.}\par
{
Referenced by config(), printConf(), and publish().}\par
}
{\xe \v user\:CoolMQTT}
{\xe \v CoolMQTT\:user}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char CoolMQTT::user[50] =\{'0'\}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXM}
{\bkmkend AAAAAAAAXM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MQTT user name \par
}{
Definition at line 99 of file CoolMQTT.h.}\par
{
Referenced by config(), connect(), getUser(), and printConf().}\par
}
{\xe \v bufferSize\:CoolMQTT}
{\xe \v CoolMQTT\:bufferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolMQTT::bufferSize =3000{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXN}
{\bkmkend AAAAAAAAXN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MQTT inner bufferSize \par
}{
Definition at line 104 of file CoolMQTT.h.}\par
{
Referenced by begin(), config(), and printConf().}\par
}
{\xe \v espClient\:CoolMQTT}
{\xe \v CoolMQTT\:espClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiClient CoolMQTT::espClient{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXO}
{\bkmkend AAAAAAAAXO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WifiClient instance \par
}{
Definition at line 109 of file CoolMQTT.h.}\par
{
Referenced by begin().}\par
}
{\xe \v client\:CoolMQTT}
{\xe \v CoolMQTT\:client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolPubSubClient} CoolMQTT::client{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXP}
{\bkmkend AAAAAAAAXP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
MQTT Client instance \par
}{
Definition at line 114 of file CoolMQTT.h.}\par
{
Referenced by begin(), connect(), mqttLoop(), publish(), and state().}\par
}
{\xe \v newMsg\:CoolMQTT}
{\xe \v CoolMQTT\:newMsg}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolMQTT::newMsg =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXQ}
{\bkmkend AAAAAAAAXQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
new message flag \par
}{
Definition at line 119 of file CoolMQTT.h.}\par
{
Referenced by callback(), and read().}\par
}
{\xe \v previousLogTime\:CoolMQTT}
{\xe \v CoolMQTT\:previousLogTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long CoolMQTT::previousLogTime =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAXR}
{\bkmkend AAAAAAAAXR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
last time the Client sent a Message over MQTT in ms \par
}{
Definition at line 125 of file CoolMQTT.h.}\par
{
Referenced by publish().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolMQTT.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolMQTT.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolPubSubClient Class Reference\par \pard\plain 
{\tc\tcl2 \v CoolPubSubClient}
{\xe \v CoolPubSubClient}
{\bkmkstart AAAAAAAAXS}
{\bkmkend AAAAAAAAXS}
\par
{
{\f2 #include <CoolPubSubClient.h>}}\par
Collaboration diagram for CoolPubSubClient:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d7b/class_cool_pub_sub_client__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (Client &client)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (IPAddress, uint16_t, Client &client)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (IPAddress, uint16_t, Client &client, Stream &)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (IPAddress, uint16_t, {\b MQTT_CALLBACK_SIGNATURE}, Client &client)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (IPAddress, uint16_t, {\b MQTT_CALLBACK_SIGNATURE}, Client &client, Stream &)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (uint8_t *, uint16_t, Client &client)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (uint8_t *, uint16_t, Client &client, Stream &)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (uint8_t *, uint16_t, {\b MQTT_CALLBACK_SIGNATURE}, Client &client)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (uint8_t *, uint16_t, {\b MQTT_CALLBACK_SIGNATURE}, Client &client, Stream &)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (const char *, uint16_t, Client &client)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (const char *, uint16_t, Client &client, Stream &)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (const char *, uint16_t, {\b MQTT_CALLBACK_SIGNATURE}, Client &client)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} (const char *, uint16_t, {\b MQTT_CALLBACK_SIGNATURE}, Client &client, Stream &)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ~CoolPubSubClient} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} & {\b setServer} (IPAddress {\b ip}, uint16_t {\b port})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} & {\b setServer} (uint8_t *{\b ip}, uint16_t {\b port})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} & {\b setServer} (const char *{\b domain}, uint16_t {\b port})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} & {\b setCallback} ({\b MQTT_CALLBACK_SIGNATURE})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} & {\b setClient} (Client &client)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} & {\b setStream} (Stream &{\b stream})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b CoolPubSubClient} & {\b setTimeout} (uint16_t {\b socketTimeout})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b connect} (const char *id, uint16_t {\b keepAlive}={\b MQTT_KEEPALIVE}, uint16_t {\b socketTimeout}={\b MQTT_SOCKET_TIMEOUT})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b connect} (const char *id, const char *user, const char *pass, uint16_t {\b keepAlive}={\b MQTT_KEEPALIVE}, uint16_t {\b socketTimeout}={\b MQTT_SOCKET_TIMEOUT})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b connect} (const char *id, const char *willTopic, uint8_t willQos, boolean willRetain, const char *willMessage, uint16_t {\b keepAlive}={\b MQTT_KEEPALIVE}, uint16_t {\b socketTimeout}={\b MQTT_SOCKET_TIMEOUT})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b connect} (const char *id, const char *user, const char *pass, const char *willTopic, uint8_t willQos, boolean willRetain, const char *willMessage, uint16_t {\b keepAlive}={\b MQTT_KEEPALIVE}, uint16_t {\b socketTimeout}={\b MQTT_SOCKET_TIMEOUT})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b disconnect} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b publish} (const char *topic, const char *payload)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b publish} (const char *topic, const char *payload, boolean retained)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b publish} (const char *topic, const uint8_t *payload, unsigned int plength)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b publish} (const char *topic, const uint8_t *payload, unsigned int plength, boolean retained)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b publish_P} (const char *topic, const uint8_t *payload, unsigned int plength, boolean retained)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b subscribe} (const char *topic)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b subscribe} (const char *topic, uint8_t qos)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b unsubscribe} (const char *topic)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b loop} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b connected} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b state} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b setBufferSize} (uint16_t size)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b getBufferSize} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b readPacket} (uint8_t *)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b readByte} (uint8_t *result)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b readByte} (uint8_t *result, uint16_t *index)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b write} (uint8_t header, uint8_t *buf, uint16_t length)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b writeString} (const char *string, uint8_t *buf, uint16_t pos)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Client * {\b _client}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t * {\b buffer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b buffer_size}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b nextMsgId}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b lastOutActivity}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b lastInActivity}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b pingOutstanding}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b MQTT_CALLBACK_SIGNATURE}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b ip}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b domain}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b port}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
Stream * {\b stream}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b _state}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b keepAlive}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b socketTimeout}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 88 of file CoolPubSubClient.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient ()}}
\par
{\bkmkstart AAAAAAAAXT}
{\bkmkend AAAAAAAAXT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 14 of file CoolPubSubClient.cpp.}\par
{
References _client, _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setCallback(), and stream.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a2e54e36217bb0969b91b5dee9a27410f_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (Client &  {\i client})}}
\par
{\bkmkstart AAAAAAAAXU}
{\bkmkend AAAAAAAAXU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setClient(), and stream.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a0563a12cb4e9339bf2605cfc655e717d_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (IPAddress  {\i addr}, uint16_t  {\i port}, Client &  {\i client})}}
\par
{\bkmkstart AAAAAAAAXV}
{\bkmkend AAAAAAAAXV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setClient(), setServer(), and stream.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a4548ad6f306f6181e337a86c0b21a89a_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (IPAddress  {\i addr}, uint16_t  {\i port}, Client &  {\i client}, Stream &  {\i stream})}}
\par
{\bkmkstart AAAAAAAAXW}
{\bkmkend AAAAAAAAXW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setClient(), setServer(), and setStream().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_af8b1aeb169366da52e3289bb6c238b6b_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (IPAddress  {\i addr}, uint16_t  {\i port}, {\b MQTT_CALLBACK_SIGNATURE} , Client &  {\i client})}}
\par
{\bkmkstart AAAAAAAAXX}
{\bkmkend AAAAAAAAXX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setCallback(), setClient(), setServer(), and stream.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a1743a9eeef19b3b6ff1db5be8df55a9c_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (IPAddress  {\i addr}, uint16_t  {\i port}, {\b MQTT_CALLBACK_SIGNATURE} , Client &  {\i client}, Stream &  {\i stream})}}
\par
{\bkmkstart AAAAAAAAXY}
{\bkmkend AAAAAAAAXY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setCallback(), setClient(), setServer(), and setStream().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a0797679d710bf2b1aa802107bdb1a2fe_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (uint8_t *  {\i ip}, uint16_t  {\i port}, Client &  {\i client})}}
\par
{\bkmkstart AAAAAAAAXZ}
{\bkmkend AAAAAAAAXZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setClient(), setServer(), and stream.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a15e4dd41ebda943c377539086f70469d_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (uint8_t *  {\i ip}, uint16_t  {\i port}, Client &  {\i client}, Stream &  {\i stream})}}
\par
{\bkmkstart AAAAAAAAYA}
{\bkmkend AAAAAAAAYA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setClient(), setServer(), and setStream().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a3e7d7fa4b55e36f0ac8912335993d650_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (uint8_t *  {\i ip}, uint16_t  {\i port}, {\b MQTT_CALLBACK_SIGNATURE} , Client &  {\i client})}}
\par
{\bkmkstart AAAAAAAAYB}
{\bkmkend AAAAAAAAYB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setCallback(), setClient(), setServer(), and stream.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_afc703702b40ba925377d0b9cd401319e_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (uint8_t *  {\i ip}, uint16_t  {\i port}, {\b MQTT_CALLBACK_SIGNATURE} , Client &  {\i client}, Stream &  {\i stream})}}
\par
{\bkmkstart AAAAAAAAYC}
{\bkmkend AAAAAAAAYC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setCallback(), setClient(), setServer(), and setStream().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a08309a2cf058099fa5c96c198f777647_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (const char *  {\i domain}, uint16_t  {\i port}, Client &  {\i client})}}
\par
{\bkmkstart AAAAAAAAYD}
{\bkmkend AAAAAAAAYD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setClient(), setServer(), and stream.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a469eefe7429f0cbb6d7d443b52488411_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (const char *  {\i domain}, uint16_t  {\i port}, Client &  {\i client}, Stream &  {\i stream})}}
\par
{\bkmkstart AAAAAAAAYE}
{\bkmkend AAAAAAAAYE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setClient(), setServer(), and setStream().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a103e7286407babde84d63bb735c4e4b6_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (const char *  {\i domain}, uint16_t  {\i port}, {\b MQTT_CALLBACK_SIGNATURE} , Client &  {\i client})}}
\par
{\bkmkstart AAAAAAAAYF}
{\bkmkend AAAAAAAAYF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 117 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setCallback(), setClient(), setServer(), and stream.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a2aea0a9487dc15b9db1caf0f069eb877_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::CoolPubSubClient (const char *  {\i domain}, uint16_t  {\i port}, {\b MQTT_CALLBACK_SIGNATURE} , Client &  {\i client}, Stream &  {\i stream})}}
\par
{\bkmkstart AAAAAAAAYG}
{\bkmkend AAAAAAAAYG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 126 of file CoolPubSubClient.cpp.}\par
{
References _state, buffer, buffer_size, MQTT_DISCONNECTED, MQTT_MAX_PACKET_SIZE, setCallback(), setClient(), setServer(), and setStream().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a6466f55abe5820d410b1c9cf7a70ec7e_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ~CoolPubSubClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:~CoolPubSubClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::~CoolPubSubClient ()}}
\par
{\bkmkstart AAAAAAAAYH}
{\bkmkend AAAAAAAAYH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 136 of file CoolPubSubClient.cpp.}\par
{
References buffer.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v readPacket\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:readPacket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolPubSubClient::readPacket (uint8_t *  {\i lengthLength}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYI}
{\bkmkend AAAAAAAAYI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 284 of file CoolPubSubClient.cpp.}\par
{
References buffer, buffer_size, MQTTPUBLISH, MQTTQOS1, readByte(), and stream.}\par
{
Referenced by connect(), and loop().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a25a8779149cfa809b7c06f63568b25cf_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a25a8779149cfa809b7c06f63568b25cf_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readByte\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:readByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::readByte (uint8_t *  {\i result}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYJ}
{\bkmkend AAAAAAAAYJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 259 of file CoolPubSubClient.cpp.}\par
{
References _client, and socketTimeout.}\par
{
Referenced by readByte(), and readPacket().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_ad409bbd287d5894f0cf082f62446c002_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readByte\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:readByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::readByte (uint8_t *  {\i result}, uint16_t *  {\i index}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYK}
{\bkmkend AAAAAAAAYK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 274 of file CoolPubSubClient.cpp.}\par
{
References readByte().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_abef3735bb9a2a8c87b3da659dc4ade03_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v write\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::write (uint8_t  {\i header}, uint8_t *  {\i buf}, uint16_t  {\i length}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYL}
{\bkmkend AAAAAAAAYL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 476 of file CoolPubSubClient.cpp.}\par
{
References _client, and lastOutActivity.}\par
{
Referenced by connect(), publish(), subscribe(), and unsubscribe().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a7a8e4854a1846eaa668046d3854d47ad_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeString\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:writeString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolPubSubClient::writeString (const char *  {\i string}, uint8_t *  {\i buf}, uint16_t  {\i pos}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAYM}
{\bkmkend AAAAAAAAYM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 574 of file CoolPubSubClient.cpp.}\par
{
Referenced by connect(), publish(), publish_P(), subscribe(), and unsubscribe().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a0e3d7e776d4cf4427f9569b28868905a_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setServer\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:setServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolPubSubClient} & CoolPubSubClient::setServer (IPAddress  {\i ip}, uint16_t  {\i port})}}
\par
{\bkmkstart AAAAAAAAYN}
{\bkmkend AAAAAAAAYN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 610 of file CoolPubSubClient.cpp.}\par
{
References domain, ip, and port.}\par
{
Referenced by CoolMQTT::begin(), CoolPubSubClient(), and setServer().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a947e70c394c66c7d08d0c53caf8425e3_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setServer\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:setServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolPubSubClient} & CoolPubSubClient::setServer (uint8_t *  {\i ip}, uint16_t  {\i port})}}
\par
{\bkmkstart AAAAAAAAYO}
{\bkmkend AAAAAAAAYO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 605 of file CoolPubSubClient.cpp.}\par
{
References setServer().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_ad589f977fc2799b9341dc5f4fcdb483a_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setServer\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:setServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolPubSubClient} & CoolPubSubClient::setServer (const char *  {\i domain}, uint16_t  {\i port})}}
\par
{\bkmkstart AAAAAAAAYP}
{\bkmkend AAAAAAAAYP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 617 of file CoolPubSubClient.cpp.}\par
{
References domain, and port.}\par
}
{\xe \v setCallback\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:setCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolPubSubClient} & CoolPubSubClient::setCallback ({\b MQTT_CALLBACK_SIGNATURE} )}}
\par
{\bkmkstart AAAAAAAAYQ}
{\bkmkend AAAAAAAAYQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 623 of file CoolPubSubClient.cpp.}\par
{
Referenced by CoolMQTT::begin(), and CoolPubSubClient().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_ac5cab7658f1bdded32131241e468e661_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setClient\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:setClient}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolPubSubClient} & CoolPubSubClient::setClient (Client &  {\i client})}}
\par
{\bkmkstart AAAAAAAAYR}
{\bkmkend AAAAAAAAYR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 628 of file CoolPubSubClient.cpp.}\par
{
References _client.}\par
{
Referenced by CoolMQTT::begin(), and CoolPubSubClient().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a7ee119b786010561ab6a9afa0798e91d_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setStream\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:setStream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolPubSubClient} & CoolPubSubClient::setStream (Stream &  {\i stream})}}
\par
{\bkmkstart AAAAAAAAYS}
{\bkmkend AAAAAAAAYS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 633 of file CoolPubSubClient.cpp.}\par
{
References stream.}\par
{
Referenced by CoolPubSubClient().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_ae97e40823ea689ff9e36d5bdd71bb933_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setTimeout\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:setTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b CoolPubSubClient} & CoolPubSubClient::setTimeout (uint16_t  {\i socketTimeout})}}
\par
{\bkmkstart AAAAAAAAYT}
{\bkmkend AAAAAAAAYT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 652 of file CoolPubSubClient.cpp.}\par
{
References socketTimeout.}\par
}
{\xe \v connect\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::connect (const char *  {\i id}, uint16_t  {\i keepAlive} = {\f2 {\b MQTT_KEEPALIVE}}, uint16_t  {\i socketTimeout} = {\f2 {\b MQTT_SOCKET_TIMEOUT}})}}
\par
{\bkmkstart AAAAAAAAYU}
{\bkmkend AAAAAAAAYU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 140 of file CoolPubSubClient.cpp.}\par
{
Referenced by CoolMQTT::connect(), and connect().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a2664c2ebc302b2fa49f493a339ecc891_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v connect\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::connect (const char *  {\i id}, const char *  {\i user}, const char *  {\i pass}, uint16_t  {\i keepAlive} = {\f2 {\b MQTT_KEEPALIVE}}, uint16_t  {\i socketTimeout} = {\f2 {\b MQTT_SOCKET_TIMEOUT}})}}
\par
{\bkmkstart AAAAAAAAYV}
{\bkmkend AAAAAAAAYV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 144 of file CoolPubSubClient.cpp.}\par
{
References connect().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a7f30e39bf4ca5ea5fb9747c403639a03_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v connect\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::connect (const char *  {\i id}, const char *  {\i willTopic}, uint8_t  {\i willQos}, boolean  {\i willRetain}, const char *  {\i willMessage}, uint16_t  {\i keepAlive} = {\f2 {\b MQTT_KEEPALIVE}}, uint16_t  {\i socketTimeout} = {\f2 {\b MQTT_SOCKET_TIMEOUT}})}}
\par
{\bkmkstart AAAAAAAAYW}
{\bkmkend AAAAAAAAYW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file CoolPubSubClient.cpp.}\par
{
References connect().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_af461a5a08fda1c3237e706965704ddb6_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v connect\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::connect (const char *  {\i id}, const char *  {\i user}, const char *  {\i pass}, const char *  {\i willTopic}, uint8_t  {\i willQos}, boolean  {\i willRetain}, const char *  {\i willMessage}, uint16_t  {\i keepAlive} = {\f2 {\b MQTT_KEEPALIVE}}, uint16_t  {\i socketTimeout} = {\f2 {\b MQTT_SOCKET_TIMEOUT}})}}
\par
{\bkmkstart AAAAAAAAYX}
{\bkmkend AAAAAAAAYX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 152 of file CoolPubSubClient.cpp.}\par
{
References _client, _state, buffer, connected(), domain, ip, keepAlive, lastInActivity, lastOutActivity, MQTT_CONNECT_FAILED, MQTT_CONNECTED, MQTT_CONNECTION_TIMEOUT, MQTT_HEADER_VERSION_LENGTH, MQTT_KEEPALIVE, MQTT_SOCKET_TIMEOUT, MQTT_VERSION, MQTTCONNECT, nextMsgId, pingOutstanding, port, readPacket(), socketTimeout, write(), and writeString().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a7e5a85731dd25d90a41f6d859e61da77_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v disconnect\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:disconnect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolPubSubClient::disconnect ()}}
\par
{\bkmkstart AAAAAAAAYY}
{\bkmkend AAAAAAAAYY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 565 of file CoolPubSubClient.cpp.}\par
{
References _client, _state, buffer, lastInActivity, lastOutActivity, MQTT_DISCONNECTED, and MQTTDISCONNECT.}\par
}
{\xe \v publish\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:publish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::publish (const char *  {\i topic}, const char *  {\i payload})}}
\par
{\bkmkstart AAAAAAAAYZ}
{\bkmkend AAAAAAAAYZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 397 of file CoolPubSubClient.cpp.}\par
{
Referenced by CoolMQTT::publish(), and publish().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_ab6ad5fa2d3db8f91454027257f225a89_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publish\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:publish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::publish (const char *  {\i topic}, const char *  {\i payload}, boolean  {\i retained})}}
\par
{\bkmkstart AAAAAAAAZA}
{\bkmkend AAAAAAAAZA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 401 of file CoolPubSubClient.cpp.}\par
{
References publish().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a0b01cef98af0b57d8da4df373e196448_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publish\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:publish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::publish (const char *  {\i topic}, const uint8_t *  {\i payload}, unsigned int  {\i plength})}}
\par
{\bkmkstart AAAAAAAAZB}
{\bkmkend AAAAAAAAZB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 405 of file CoolPubSubClient.cpp.}\par
{
References publish().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_abf184c0968a6655b68b5fdfbbc0c87d1_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publish\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:publish}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::publish (const char *  {\i topic}, const uint8_t *  {\i payload}, unsigned int  {\i plength}, boolean  {\i retained})}}
\par
{\bkmkstart AAAAAAAAZC}
{\bkmkend AAAAAAAAZC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 409 of file CoolPubSubClient.cpp.}\par
{
References buffer, buffer_size, connected(), MQTTPUBLISH, write(), and writeString().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_adef968760eb87b70e3fed03e60da76f7_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v publish_P\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:publish_P}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::publish_P (const char *  {\i topic}, const uint8_t *  {\i payload}, unsigned int  {\i plength}, boolean  {\i retained})}}
\par
{\bkmkstart AAAAAAAAZD}
{\bkmkend AAAAAAAAZD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 431 of file CoolPubSubClient.cpp.}\par
{
References _client, buffer, connected(), lastOutActivity, MQTTPUBLISH, and writeString().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a55458d47cf01f590e9b6647d5a418ab6_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v subscribe\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:subscribe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::subscribe (const char *  {\i topic})}}
\par
{\bkmkstart AAAAAAAAZE}
{\bkmkend AAAAAAAAZE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 518 of file CoolPubSubClient.cpp.}\par
{
Referenced by CoolMQTT::connect().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_ac1ebc9ad874128aefa985d78496d2e8f_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v subscribe\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:subscribe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::subscribe (const char *  {\i topic}, uint8_t  {\i qos})}}
\par
{\bkmkstart AAAAAAAAZF}
{\bkmkend AAAAAAAAZF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 522 of file CoolPubSubClient.cpp.}\par
{
References buffer, buffer_size, connected(), MQTTQOS1, MQTTSUBSCRIBE, nextMsgId, write(), and writeString().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_aebf684e98588c52a72af1014f7957bee_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v unsubscribe\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:unsubscribe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::unsubscribe (const char *  {\i topic})}}
\par
{\bkmkstart AAAAAAAAZG}
{\bkmkend AAAAAAAAZG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 546 of file CoolPubSubClient.cpp.}\par
{
References buffer, buffer_size, connected(), MQTTQOS1, MQTTUNSUBSCRIBE, nextMsgId, write(), and writeString().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a850554280e314d6b5c33c73fd9e809fc_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v loop\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:loop}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::loop ()}}
\par
{\bkmkstart AAAAAAAAZH}
{\bkmkend AAAAAAAAZH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 334 of file CoolPubSubClient.cpp.}\par
{
References _client, _state, buffer, connected(), keepAlive, lastInActivity, lastOutActivity, MQTT_CONNECTION_TIMEOUT, MQTTPINGREQ, MQTTPINGRESP, MQTTPUBACK, MQTTPUBLISH, MQTTQOS1, pingOutstanding, and readPacket().}\par
{
Referenced by CoolMQTT::mqttLoop().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_afc15900f0fc4886a19394508e61793b8_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_afc15900f0fc4886a19394508e61793b8_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v connected\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:connected}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::connected ()}}
\par
{\bkmkstart AAAAAAAAZI}
{\bkmkend AAAAAAAAZI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 588 of file CoolPubSubClient.cpp.}\par
{
References _client, _state, MQTT_CONNECTED, and MQTT_CONNECTION_LOST.}\par
{
Referenced by CoolMQTT::connect(), connect(), loop(), publish(), publish_P(), subscribe(), and unsubscribe().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a3d5a5da4ddb1e5c1bea64d80c665d148_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v state\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolPubSubClient::state ()}}
\par
{\bkmkstart AAAAAAAAZJ}
{\bkmkend AAAAAAAAZJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 638 of file CoolPubSubClient.cpp.}\par
{
References _state.}\par
{
Referenced by CoolMQTT::state().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a3245a5afc6d22e61270dcfe392ccb866_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setBufferSize\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:setBufferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean CoolPubSubClient::setBufferSize (uint16_t  {\i size})}}
\par
{\bkmkstart AAAAAAAAZK}
{\bkmkend AAAAAAAAZK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 642 of file CoolPubSubClient.cpp.}\par
{
References buffer, and buffer_size.}\par
{
Referenced by CoolMQTT::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d4b/class_cool_pub_sub_client_a4f83e54f1ba96e32f725d93cdec283b7_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getBufferSize\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:getBufferSize}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolPubSubClient::getBufferSize ()}}
\par
{\bkmkstart AAAAAAAAZL}
{\bkmkend AAAAAAAAZL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 648 of file CoolPubSubClient.cpp.}\par
{
References buffer_size.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _client\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:_client}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Client* CoolPubSubClient::_client{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZM}
{\bkmkend AAAAAAAAZM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), connected(), CoolPubSubClient(), disconnect(), loop(), publish_P(), readByte(), setClient(), and write().}\par
}
{\xe \v buffer\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:buffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t* CoolPubSubClient::buffer{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZN}
{\bkmkend AAAAAAAAZN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), CoolPubSubClient(), disconnect(), loop(), publish(), publish_P(), readPacket(), setBufferSize(), subscribe(), unsubscribe(), and ~CoolPubSubClient().}\par
}
{\xe \v buffer_size\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:buffer_size}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolPubSubClient::buffer_size{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZO}
{\bkmkend AAAAAAAAZO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient(), getBufferSize(), publish(), readPacket(), setBufferSize(), subscribe(), and unsubscribe().}\par
}
{\xe \v nextMsgId\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:nextMsgId}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolPubSubClient::nextMsgId{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZP}
{\bkmkend AAAAAAAAZP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), subscribe(), and unsubscribe().}\par
}
{\xe \v lastOutActivity\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:lastOutActivity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long CoolPubSubClient::lastOutActivity{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZQ}
{\bkmkend AAAAAAAAZQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), disconnect(), loop(), publish_P(), and write().}\par
}
{\xe \v lastInActivity\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:lastInActivity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long CoolPubSubClient::lastInActivity{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZR}
{\bkmkend AAAAAAAAZR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), disconnect(), and loop().}\par
}
{\xe \v pingOutstanding\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:pingOutstanding}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolPubSubClient::pingOutstanding{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZS}
{\bkmkend AAAAAAAAZS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), and loop().}\par
}
{\xe \v MQTT_CALLBACK_SIGNATURE\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:MQTT_CALLBACK_SIGNATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
CoolPubSubClient::MQTT_CALLBACK_SIGNATURE{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZT}
{\bkmkend AAAAAAAAZT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file CoolPubSubClient.h.}\par
}
{\xe \v ip\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress CoolPubSubClient::ip{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZU}
{\bkmkend AAAAAAAAZU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), and setServer().}\par
}
{\xe \v domain\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:domain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* CoolPubSubClient::domain{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZV}
{\bkmkend AAAAAAAAZV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), and setServer().}\par
}
{\xe \v port\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:port}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolPubSubClient::port{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZW}
{\bkmkend AAAAAAAAZW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 105 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), and setServer().}\par
}
{\xe \v stream\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:stream}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
Stream* CoolPubSubClient::stream{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZX}
{\bkmkend AAAAAAAAZX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 106 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient(), readPacket(), and setStream().}\par
}
{\xe \v _state\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:_state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolPubSubClient::_state{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZY}
{\bkmkend AAAAAAAAZY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 107 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), connected(), CoolPubSubClient(), disconnect(), loop(), and state().}\par
}
{\xe \v keepAlive\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:keepAlive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolPubSubClient::keepAlive{\f2 [private]}}}
\par
{\bkmkstart AAAAAAAAZZ}
{\bkmkend AAAAAAAAZZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 108 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), and loop().}\par
}
{\xe \v socketTimeout\:CoolPubSubClient}
{\xe \v CoolPubSubClient\:socketTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolPubSubClient::socketTimeout{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAA}
{\bkmkend AAAAAAABAA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file CoolPubSubClient.h.}\par
{
Referenced by connect(), readByte(), and setTimeout().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolPubSubClient.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolPubSubClient.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolSI114X Class Reference\par \pard\plain 
{\tc\tcl2 \v CoolSI114X}
{\xe \v CoolSI114X}
{\bkmkstart AAAAAAABAB}
{\bkmkend AAAAAAABAB}
\par
{
{\f2 #include <CoolSI114X.h>}}\par
Collaboration diagram for CoolSI114X:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d2d/class_cool_s_i114_x__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b Begin} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b Reset} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b DeInit} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b ReadParamData} (uint8_t Reg)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b WriteParamData} (uint8_t Reg, uint8_t Value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b ReadVisible} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b ReadIR} (void)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b ReadProximity} (uint8_t PSn)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b ReadUV} (void)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b WriteByte} (uint8_t Reg, uint8_t Value)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b ReadByte} (uint8_t Reg)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint16_t {\b ReadHalfWord} (uint8_t Reg)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 165 of file CoolSI114X.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v Begin\:CoolSI114X}
{\xe \v CoolSI114X\:Begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolSI114X::Begin (void )}}
\par
{\bkmkstart AAAAAAABAC}
{\bkmkend AAAAAAABAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file CoolSI114X.cpp.}\par
{
References CoolSI114X_PART_ID, DeInit(), ReadByte(), and Reset().}\par
{
Referenced by CoolBoardSensors::begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a206b36aca7049f63be1d11088c30a09f_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a206b36aca7049f63be1d11088c30a09f_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v Reset\:CoolSI114X}
{\xe \v CoolSI114X\:Reset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolSI114X::Reset (void )}}
\par
{\bkmkstart AAAAAAABAD}
{\bkmkend AAAAAAABAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file CoolSI114X.cpp.}\par
{
References CoolSI114X_COMMAND, CoolSI114X_HW_KEY, CoolSI114X_INT_CFG, CoolSI114X_IRQ_ENABLE, CoolSI114X_IRQ_MODE1, CoolSI114X_IRQ_MODE2, CoolSI114X_IRQ_STATUS, CoolSI114X_MEAS_RATE0, CoolSI114X_MEAS_RATE1, CoolSI114X_RESET, and WriteByte().}\par
{
Referenced by Begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a9d9f9c9129c0c29ed497f8563f3dd823_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a9d9f9c9129c0c29ed497f8563f3dd823_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v DeInit\:CoolSI114X}
{\xe \v CoolSI114X\:DeInit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolSI114X::DeInit (void )}}
\par
{\bkmkstart AAAAAAABAE}
{\bkmkend AAAAAAABAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file CoolSI114X.cpp.}\par
{
References CoolSI114X_ADC_COUNTER_511ADCCLK, CoolSI114X_ADC_GAIN_DIV1, CoolSI114X_ADC_MISC_ADC_RAWADC, CoolSI114X_ADC_MISC_HIGHRANGE, CoolSI114X_ADCMUX_LARGE_IR, CoolSI114X_ALS_IR_ADC_COUNTER, CoolSI114X_ALS_IR_ADC_GAIN, CoolSI114X_ALS_IR_ADC_MISC, CoolSI114X_ALS_VIS_ADC_COUNTER, CoolSI114X_ALS_VIS_ADC_GAIN, CoolSI114X_ALS_VIS_ADC_MISC, CoolSI114X_CHLIST, CoolSI114X_CHLIST_ENALSIR, CoolSI114X_CHLIST_ENALSVIS, CoolSI114X_CHLIST_ENPS1, CoolSI114X_CHLIST_ENUV, CoolSI114X_COMMAND, CoolSI114X_INT_CFG, CoolSI114X_INT_CFG_INTOE, CoolSI114X_IRQ_ENABLE, CoolSI114X_IRQEN_ALS, CoolSI114X_LED_CURRENT_22MA, CoolSI114X_MEAS_RATE0, CoolSI114X_PS1_ADCMUX, CoolSI114X_PS_ADC_COUNTER, CoolSI114X_PS_ADC_GAIN, CoolSI114X_PS_ADC_MISC, CoolSI114X_PS_LED21, CoolSI114X_PSALS_AUTO, CoolSI114X_PSLED12_SELECT, CoolSI114X_PSLED12_SELECT_PS1_LED1, CoolSI114X_UCOEFF0, CoolSI114X_UCOEFF1, CoolSI114X_UCOEFF2, CoolSI114X_UCOEFF3, WriteByte(), and WriteParamData().}\par
{
Referenced by Begin(), and CoolBoardSensors::end().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a6840abd53a2e3d71a6bb918077c6d6e6_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a6840abd53a2e3d71a6bb918077c6d6e6_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ReadParamData\:CoolSI114X}
{\xe \v CoolSI114X\:ReadParamData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t CoolSI114X::ReadParamData (uint8_t  {\i Reg})}}
\par
{\bkmkstart AAAAAAABAF}
{\bkmkend AAAAAAABAF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 170 of file CoolSI114X.cpp.}\par
{
References CoolSI114X_COMMAND, CoolSI114X_QUERY, CoolSI114X_RD, ReadByte(), and WriteByte().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a33cf431103c722442f6a0cc93848d640_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v WriteParamData\:CoolSI114X}
{\xe \v CoolSI114X\:WriteParamData}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t CoolSI114X::WriteParamData (uint8_t  {\i Reg}, uint8_t  {\i Value})}}
\par
{\bkmkstart AAAAAAABAG}
{\bkmkend AAAAAAABAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 179 of file CoolSI114X.cpp.}\par
{
References CoolSI114X_COMMAND, CoolSI114X_RD, CoolSI114X_SET, CoolSI114X_WR, ReadByte(), and WriteByte().}\par
{
Referenced by DeInit().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_abf45eb10a6de1be16e68a51624fa2608_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_abf45eb10a6de1be16e68a51624fa2608_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ReadVisible\:CoolSI114X}
{\xe \v CoolSI114X\:ReadVisible}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolSI114X::ReadVisible (void )}}
\par
{\bkmkstart AAAAAAABAH}
{\bkmkend AAAAAAABAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 192 of file CoolSI114X.cpp.}\par
{
References CoolSI114X_ALS_VIS_DATA0, and ReadHalfWord().}\par
{
Referenced by CoolBoardSensors::read().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a42e0e574256341443c647a4c0eda87d5_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a42e0e574256341443c647a4c0eda87d5_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ReadIR\:CoolSI114X}
{\xe \v CoolSI114X\:ReadIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolSI114X::ReadIR (void )}}
\par
{\bkmkstart AAAAAAABAI}
{\bkmkend AAAAAAABAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 200 of file CoolSI114X.cpp.}\par
{
References CoolSI114X_ALS_IR_DATA0, and ReadHalfWord().}\par
{
Referenced by CoolBoardSensors::read().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_abc536ee7ae8e3ba9d1069acc3889a2cf_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_abc536ee7ae8e3ba9d1069acc3889a2cf_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ReadProximity\:CoolSI114X}
{\xe \v CoolSI114X\:ReadProximity}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolSI114X::ReadProximity (uint8_t  {\i PSn})}}
\par
{\bkmkstart AAAAAAABAJ}
{\bkmkend AAAAAAABAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 208 of file CoolSI114X.cpp.}\par
{
References ReadHalfWord().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a194fede1105508c7803dbb567cbdcc67_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ReadUV\:CoolSI114X}
{\xe \v CoolSI114X\:ReadUV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolSI114X::ReadUV (void )}}
\par
{\bkmkstart AAAAAAABAK}
{\bkmkend AAAAAAABAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 217 of file CoolSI114X.cpp.}\par
{
References CoolSI114X_AUX_DATA0_UVINDEX0, and ReadHalfWord().}\par
{
Referenced by CoolBoardSensors::read().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a14ced664d74e93438440b0274109c111_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a14ced664d74e93438440b0274109c111_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v WriteByte\:CoolSI114X}
{\xe \v CoolSI114X\:WriteByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolSI114X::WriteByte (uint8_t  {\i Reg}, uint8_t  {\i Value}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAL}
{\bkmkend AAAAAAABAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 132 of file CoolSI114X.cpp.}\par
{
References CoolSI114X_ADDR.}\par
{
Referenced by DeInit(), ReadParamData(), Reset(), and WriteParamData().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_ac5c8dc5ade604da7a1c8cd1586feefc2_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ReadByte\:CoolSI114X}
{\xe \v CoolSI114X\:ReadByte}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t CoolSI114X::ReadByte (uint8_t  {\i Reg}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAM}
{\bkmkend AAAAAAABAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file CoolSI114X.cpp.}\par
{
References CoolSI114X_ADDR.}\par
{
Referenced by Begin(), ReadParamData(), and WriteParamData().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_acc20f8037e156ec4aadcbe90780b1e8b_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v ReadHalfWord\:CoolSI114X}
{\xe \v CoolSI114X\:ReadHalfWord}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint16_t CoolSI114X::ReadHalfWord (uint8_t  {\i Reg}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABAN}
{\bkmkend AAAAAAABAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 155 of file CoolSI114X.cpp.}\par
{
References CoolSI114X_ADDR.}\par
{
Referenced by ReadIR(), ReadProximity(), ReadUV(), and ReadVisible().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d67/class_cool_s_i114_x_a1d25c9e137874af529804c2ec796a6b9_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolSI114X.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolSI114X.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolTime Class Reference\par \pard\plain 
{\tc\tcl2 \v CoolTime}
{\xe \v CoolTime}
{\bkmkstart AAAAAAABAO}
{\bkmkend AAAAAAABAO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the DS1337 RTC . }}\par
{
{\f2 #include <CoolTime.h>}}\par
Collaboration diagram for CoolTime:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d40/class_cool_time__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b update} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b config} (IPAddress {\b timeServer}, unsigned int {\b localPort})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printConf} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDateTime} (int year, int month, int day, int hour, int minutes, int seconds)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tmElements_t {\b getTimeDate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getESDate} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b getLastSyncTime} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b isTimeSync} (unsigned long seconds=604800)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
time_t {\b getNtpTime} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b sendNTPpacket} (IPAddress &address)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b formatDigits} (int digits)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b saveTimeSync} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b timeSync} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b timeServer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
WiFiUDP {\b Udp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned int {\b localPort} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b packetBuffer} [{\b NTP_PACKET_SIZE}]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
tmElements_t {\b tmSet}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DS1337RTC {\b rtc}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the DS1337 RTC . \par
}{
Definition at line 54 of file CoolTime.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:CoolTime}
{\xe \v CoolTime\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolTime::begin ()}}
\par
{\bkmkstart AAAAAAABAP}
{\bkmkend AAAAAAABAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime::begin()}: This method is provided to init the udp connection \par
}{
Definition at line 54 of file CoolTime.cpp.}\par
{
References localPort, Udp, and update().}\par
{
Referenced by CoolBoard::begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_ab1976cf718b950bc31e003c3323b8adb_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_ab1976cf718b950bc31e003c3323b8adb_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v update\:CoolTime}
{\xe \v CoolTime\:update}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolTime::update ()}}
\par
{\bkmkstart AAAAAAABAQ}
{\bkmkend AAAAAAABAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime::update()}: This method is provided to correct the rtc Time when it drifts,once every week. \par
}{
Definition at line 76 of file CoolTime.cpp.}\par
{
References getNtpTime(), isTimeSync(), rtc, saveTimeSync(), timeSync, and tmSet.}\par
{
Referenced by begin(), and CoolBoard::onLineMode().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_aae601f795452cfa48d9fb337aed483a8_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_aae601f795452cfa48d9fb337aed483a8_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:CoolTime}
{\xe \v CoolTime\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolTime::config ()}}
\par
{\bkmkstart AAAAAAABAR}
{\bkmkend AAAAAAABAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime::config()}: This method is provided to configure the {\b CoolTime} object through a configuration file.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful,false otherwise \par
}}{
Definition at line 427 of file CoolTime.cpp.}\par
{
References localPort, timeServer, and timeSync.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_a87c28260c1bc77091162cbcf1ee2e129_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:CoolTime}
{\xe \v CoolTime\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolTime::config (IPAddress  {\i timeServer}, unsigned int  {\i localPort})}}
\par
{\bkmkstart AAAAAAABAS}
{\bkmkend AAAAAAABAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolTime::config(Time server IP , udp Port): This method is provided to do manual configuration. \par
}{
Definition at line 404 of file CoolTime.cpp.}\par
{
References localPort, and timeServer.}\par
}
{\xe \v printConf\:CoolTime}
{\xe \v CoolTime\:printConf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolTime::printConf ()}}
\par
{\bkmkstart AAAAAAABAT}
{\bkmkend AAAAAAABAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime::printConf()}: This method is provided to print the {\b CoolTime} configuration to the Serial Monitor \par
}{
Definition at line 681 of file CoolTime.cpp.}\par
{
References localPort, and timeServer.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_af355e7f9b3898211cd2ff25eab5933b1_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setDateTime\:CoolTime}
{\xe \v CoolTime\:setDateTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolTime::setDateTime (int  {\i year}, int  {\i month}, int  {\i day}, int  {\i hour}, int  {\i minutes}, int  {\i seconds})}}
\par
{\bkmkstart AAAAAAABAU}
{\bkmkend AAAAAAABAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolTime::setDateTime(year,month,dat,hour,minutes,seconds): This method is provided to manually set the RTc Time \par
}{
Definition at line 109 of file CoolTime.cpp.}\par
{
References formatDigits(), getESDate(), and rtc.}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_ab81ea7fdaace111aa01cc1ec84c6d297_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getTimeDate\:CoolTime}
{\xe \v CoolTime\:getTimeDate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tmElements_t CoolTime::getTimeDate ()}}
\par
{\bkmkstart AAAAAAABAV}
{\bkmkend AAAAAAABAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime::getTimeDate()}: This method is provided to get the RTC Time\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid a tmElements_t structre that has the time in it \par
}}{
Definition at line 163 of file CoolTime.cpp.}\par
{
References formatDigits(), and rtc.}\par
{
Referenced by getESDate(), and CoolBoard::readSensors().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_a7a7501c5ca77dd1248bea704c44f986c_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_a7a7501c5ca77dd1248bea704c44f986c_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getESDate\:CoolTime}
{\xe \v CoolTime\:getESDate}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolTime::getESDate ()}}
\par
{\bkmkstart AAAAAAABAW}
{\bkmkend AAAAAAABAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolTime::getESD(): This method is provided to return an Elastic Search compatible date Format\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid date String in Elastic Search format \par
}}{
Definition at line 206 of file CoolTime.cpp.}\par
{
References formatDigits(), and getTimeDate().}\par
{
Referenced by setDateTime(), and CoolBoard::userData().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_ac4f32ee513c1328d984306645e8785a4_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_ac4f32ee513c1328d984306645e8785a4_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getLastSyncTime\:CoolTime}
{\xe \v CoolTime\:getLastSyncTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long CoolTime::getLastSyncTime ()}}
\par
{\bkmkstart AAAAAAABAX}
{\bkmkend AAAAAAABAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime::getLastSyncTime()}: This method is provided to get the last time we syncronised the time\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid unsigned long representation of last syncronisation time in seconds \par
}}{
Definition at line 244 of file CoolTime.cpp.}\par
{
References timeSync.}\par
{
Referenced by isTimeSync().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_a5d17f707a9d337720493b2bce9d41c21_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isTimeSync\:CoolTime}
{\xe \v CoolTime\:isTimeSync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolTime::isTimeSync (unsigned long  {\i seconds} = {\f2 604800})}}
\par
{\bkmkstart AAAAAAABAY}
{\bkmkend AAAAAAABAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolTime::isTimeSync( time in seconds): This method is provided to test if the time is syncronised or not. By default we test once per week.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if time is syncronised,false otherwise \par
}}{
Definition at line 270 of file CoolTime.cpp.}\par
{
References getLastSyncTime().}\par
{
Referenced by update().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_a5ae038a4498602b189f76a10bf02adf8_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_a5ae038a4498602b189f76a10bf02adf8_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getNtpTime\:CoolTime}
{\xe \v CoolTime\:getNtpTime}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
time_t CoolTime::getNtpTime ()}}
\par
{\bkmkstart AAAAAAABAZ}
{\bkmkend AAAAAAABAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolTime::getNtopTime(): This method is provided to get the Time through an NTP request to a Time Server\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid a time_t (unsigned long ) timestamp in seconds \par
}}{
Definition at line 310 of file CoolTime.cpp.}\par
{
References NTP_PACKET_SIZE, packetBuffer, sendNTPpacket(), timeServer, and Udp.}\par
{
Referenced by update().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_a41fbbbfd651c2079f54d4b2911e4c705_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_a41fbbbfd651c2079f54d4b2911e4c705_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v sendNTPpacket\:CoolTime}
{\xe \v CoolTime\:sendNTPpacket}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolTime::sendNTPpacket (IPAddress &  {\i address})}}
\par
{\bkmkstart AAAAAAABBA}
{\bkmkend AAAAAAABBA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolTime::sendNTPpacket( Time Server IP address): This method is provided to send an NTP request to the time server at the given address \par
}{
Definition at line 370 of file CoolTime.cpp.}\par
{
References NTP_PACKET_SIZE, packetBuffer, and Udp.}\par
{
Referenced by getNtpTime().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_a236a38d120dc53bc67456d763838c5a1_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v formatDigits\:CoolTime}
{\xe \v CoolTime\:formatDigits}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolTime::formatDigits (int  {\i digits})}}
\par
{\bkmkstart AAAAAAABBB}
{\bkmkend AAAAAAABBB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolTime::printDigits(digit)\par
utility method for digital clock display adds leading 0\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid formatted string of the input digit \par
}}{
Definition at line 708 of file CoolTime.cpp.}\par
{
Referenced by getESDate(), getTimeDate(), and setDateTime().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_acd537cd4210d7bde4e1f5c47d2ac0456_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v saveTimeSync\:CoolTime}
{\xe \v CoolTime\:saveTimeSync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolTime::saveTimeSync ()}}
\par
{\bkmkstart AAAAAAABBC}
{\bkmkend AAAAAAABBC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime::saveTimeSync()} This method is provided to save the last sync time in the SPIFFS.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful,false otherwise \par
}}{
Definition at line 560 of file CoolTime.cpp.}\par
{
References localPort, timeServer, and timeSync.}\par
{
Referenced by update().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d49/class_cool_time_ae9658c9b377510d469e3b88edf33ee85_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v timeSync\:CoolTime}
{\xe \v CoolTime\:timeSync}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long CoolTime::timeSync =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBD}
{\bkmkend AAAAAAABBD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
last Time the RTC syncronised with the NTP server unix Time \par
}{
Definition at line 92 of file CoolTime.h.}\par
{
Referenced by config(), getLastSyncTime(), saveTimeSync(), and update().}\par
}
{\xe \v timeServer\:CoolTime}
{\xe \v CoolTime\:timeServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress CoolTime::timeServer{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBE}
{\bkmkend AAAAAAABBE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
NTP Server IP Address \par
}{
Definition at line 97 of file CoolTime.h.}\par
{
Referenced by config(), getNtpTime(), printConf(), and saveTimeSync().}\par
}
{\xe \v Udp\:CoolTime}
{\xe \v CoolTime\:Udp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiUDP CoolTime::Udp{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBF}
{\bkmkend AAAAAAABBF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UDP Client instance \par
}{
Definition at line 102 of file CoolTime.h.}\par
{
Referenced by begin(), getNtpTime(), and sendNTPpacket().}\par
}
{\xe \v localPort\:CoolTime}
{\xe \v CoolTime\:localPort}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned int CoolTime::localPort =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBG}
{\bkmkend AAAAAAABBG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
port number for UDP packets \par
}{
Definition at line 107 of file CoolTime.h.}\par
{
Referenced by begin(), config(), printConf(), and saveTimeSync().}\par
}
{\xe \v packetBuffer\:CoolTime}
{\xe \v CoolTime\:packetBuffer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte CoolTime::packetBuffer[{\b NTP_PACKET_SIZE}]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBH}
{\bkmkend AAAAAAABBH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
UDP buffer to hold incoming & outgoing packets \par
}{
Definition at line 113 of file CoolTime.h.}\par
{
Referenced by getNtpTime(), and sendNTPpacket().}\par
}
{\xe \v tmSet\:CoolTime}
{\xe \v CoolTime\:tmSet}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
tmElements_t CoolTime::tmSet{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBI}
{\bkmkend AAAAAAABBI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Time Elements Instance to hold various Time Values \par
}{
Definition at line 118 of file CoolTime.h.}\par
{
Referenced by update().}\par
}
{\xe \v rtc\:CoolTime}
{\xe \v CoolTime\:rtc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DS1337RTC CoolTime::rtc{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBJ}
{\bkmkend AAAAAAABBJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
RTC instance \par
}{
Definition at line 123 of file CoolTime.h.}\par
{
Referenced by getTimeDate(), setDateTime(), and update().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolTime.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolTime.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolWifi Class Reference\par \pard\plain 
{\tc\tcl2 \v CoolWifi}
{\xe \v CoolWifi}
{\bkmkstart AAAAAAABBK}
{\bkmkend AAAAAAABBK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the WiFi connection . }}\par
{
{\f2 #include <CoolWifi.h>}}\par
Collaboration diagram for CoolWifi:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/dff/class_cool_wifi__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} (String {\b ssid}[], String {\b pass}[], int wifiNumber, int APTimeOut, bool {\b nomad})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wl_status_t {\b connect} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wl_status_t {\b connectWifiMulti} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wl_status_t {\b connectAP} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
wl_status_t {\b state} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printConf} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b addWifi} (String {\b ssid}, String {\b pass}="")\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
ESP8266WiFiMulti {\b wifiMulti}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b wifiCount} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b ssid} [50] =\{"0"\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b pass} [50] =\{"0"\}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b timeOut} =0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b nomad} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the WiFi connection . \par
}{
Definition at line 52 of file CoolWifi.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:CoolWifi}
{\xe \v CoolWifi\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolWifi::begin ()}}
\par
{\bkmkstart AAAAAAABBL}
{\bkmkend AAAAAAABBL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi::begin()}: This method is provided to set the wifiMulti Access points and the wifiManager time out \par
}{
Definition at line 51 of file CoolWifi.cpp.}\par
{
References pass, ssid, wifiCount, and wifiMulti.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d29/class_cool_wifi_a46942fed90e475112cc10b78a32e7aaa_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:CoolWifi}
{\xe \v CoolWifi\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolWifi::config ()}}
\par
{\bkmkstart AAAAAAABBM}
{\bkmkend AAAAAAABBM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi::config()}: This method is provided to set the wifi parameters : -ssid -pass -AP timeOut -wifiCount\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful,false otherwise \par
}}{
Definition at line 297 of file CoolWifi.cpp.}\par
{
References nomad, pass, ssid, timeOut, and wifiCount.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d29/class_cool_wifi_a4eb2f6b9b09dd588964b88b6c70122c0_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:CoolWifi}
{\xe \v CoolWifi\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolWifi::config (String  {\i ssid}[], String  {\i pass}[], int  {\i wifiNumber}, int  {\i APTimeOut}, bool  {\i nomad})}}
\par
{\bkmkstart AAAAAAABBN}
{\bkmkend AAAAAAABBN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolWifi::config(ssid array, pass array, number of wifis, AP timeout,nomad flag ); This method is provided to configure the Wifi without SPIFFS\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successfull, false otherwise \par
}}{
Definition at line 472 of file CoolWifi.cpp.}\par
{
References nomad, timeOut, and wifiCount.}\par
}
{\xe \v connect\:CoolWifi}
{\xe \v CoolWifi\:connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wl_status_t CoolWifi::connect ()}}
\par
{\bkmkstart AAAAAAABBO}
{\bkmkend AAAAAAABBO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi::connect( )}: This method is provided to connect to the strongest WiFi in the provided list of wiFis. If none are found , it starts the AP mode.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid wifi state \par
}}{
Definition at line 104 of file CoolWifi.cpp.}\par
{
References connectAP(), connectWifiMulti(), nomad, and wifiCount.}\par
{
Referenced by CoolBoard::connect().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d29/class_cool_wifi_ad060353050f40d032a2dbf9e54a768bf_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d29/class_cool_wifi_ad060353050f40d032a2dbf9e54a768bf_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v connectWifiMulti\:CoolWifi}
{\xe \v CoolWifi\:connectWifiMulti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wl_status_t CoolWifi::connectWifiMulti ()}}
\par
{\bkmkstart AAAAAAABBP}
{\bkmkend AAAAAAABBP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi::connectWifiMulti()} This function is provided to run the WifiMulti part of the Wifi connection process\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid wifi state \par
}}{
Definition at line 181 of file CoolWifi.cpp.}\par
{
References wifiMulti.}\par
{
Referenced by connect().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d29/class_cool_wifi_a419de92d738f14b7444cf822b3ab0070_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v connectAP\:CoolWifi}
{\xe \v CoolWifi\:connectAP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wl_status_t CoolWifi::connectAP ()}}
\par
{\bkmkstart AAAAAAABBQ}
{\bkmkend AAAAAAABBQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi::connectAP()} This function is provided to run the WifiManager part of the Wifi connection process\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid wifi state \par
}}{
Definition at line 231 of file CoolWifi.cpp.}\par
{
References addWifi(), WiFiManager::autoConnect(), WiFiManager::setRemoveDuplicateAPs(), WiFiManager::setTimeout(), and timeOut.}\par
{
Referenced by connect(), and CoolBoard::offLineMode().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d29/class_cool_wifi_a7c857f27161782f5ef1d62d552aff971_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d29/class_cool_wifi_a7c857f27161782f5ef1d62d552aff971_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v state\:CoolWifi}
{\xe \v CoolWifi\:state}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
wl_status_t CoolWifi::state ()}}
\par
{\bkmkstart AAAAAAABBR}
{\bkmkend AAAAAAABBR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi::state()}: This method is provided to return the Wifi client's state. \par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid wifi client state: WL_NO_SHIELD = 255, WL_IDLE_STATUS = 0, WL_NO_SSID_AVAIL = 1, WL_SCAN_COMPLETED = 2, WL_CONNECTED = 3, WL_CONNECT_FAILED = 4, WL_CONNECTION_LOST = 5, WL_DISCONNECTED = 6 \par
}}{
Definition at line 81 of file CoolWifi.cpp.}\par
{
Referenced by CoolBoard::connect(), CoolBoard::isConnected(), and CoolBoard::offLineMode().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d29/class_cool_wifi_a1c7b4d82a4098d346e7593dce92039fa_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printConf\:CoolWifi}
{\xe \v CoolWifi\:printConf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void CoolWifi::printConf ()}}
\par
{\bkmkstart AAAAAAABBS}
{\bkmkend AAAAAAABBS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi::printConf()}: This method is provided to print the configuration to the Serial Monitor \par
}{
Definition at line 515 of file CoolWifi.cpp.}\par
{
References nomad, ssid, timeOut, and wifiCount.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d29/class_cool_wifi_a9e6105c6d13d35ec510f6633da9e0223_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v addWifi\:CoolWifi}
{\xe \v CoolWifi\:addWifi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolWifi::addWifi (String  {\i ssid}, String  {\i pass} = {\f2 ""})}}
\par
{\bkmkstart AAAAAAABBT}
{\bkmkend AAAAAAABBT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
CoolWifi::addWifi(ssid,pass) This method is provided to add new WiFi detected by the {\b WiFiManager} to the jsonConfig(if used )\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successfull , false otherwise \par
}}{
Definition at line 570 of file CoolWifi.cpp.}\par
{
References pass, ssid, timeOut, and wifiCount.}\par
{
Referenced by connectAP().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d29/class_cool_wifi_a914d7a1df14dd6b75345fb614c34e9d6_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v wifiMulti\:CoolWifi}
{\xe \v CoolWifi\:wifiMulti}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
ESP8266WiFiMulti CoolWifi::wifiMulti{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBU}
{\bkmkend AAAAAAABBU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ESP8266WiFiMulti instance \par
}{
Definition at line 79 of file CoolWifi.h.}\par
{
Referenced by begin(), and connectWifiMulti().}\par
}
{\xe \v wifiCount\:CoolWifi}
{\xe \v CoolWifi\:wifiCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolWifi::wifiCount =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBV}
{\bkmkend AAAAAAABBV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
number of saved WiFi's \par
}{
Definition at line 84 of file CoolWifi.h.}\par
{
Referenced by addWifi(), begin(), config(), connect(), and printConf().}\par
}
{\xe \v ssid\:CoolWifi}
{\xe \v CoolWifi\:ssid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolWifi::ssid[50] =\{"0"\}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBW}
{\bkmkend AAAAAAABBW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WiFi SSID Array \par
}{
Definition at line 89 of file CoolWifi.h.}\par
{
Referenced by addWifi(), begin(), config(), and printConf().}\par
}
{\xe \v pass\:CoolWifi}
{\xe \v CoolWifi\:pass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String CoolWifi::pass[50] =\{"0"\}{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBX}
{\bkmkend AAAAAAABBX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WiFi PASS Array \par
}{
Definition at line 94 of file CoolWifi.h.}\par
{
Referenced by addWifi(), begin(), and config().}\par
}
{\xe \v timeOut\:CoolWifi}
{\xe \v CoolWifi\:timeOut}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int CoolWifi::timeOut =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBY}
{\bkmkend AAAAAAABBY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
WiFi Access Point TimeOut Value in Seconds \par
}{
Definition at line 99 of file CoolWifi.h.}\par
{
Referenced by addWifi(), config(), connectAP(), and printConf().}\par
}
{\xe \v nomad\:CoolWifi}
{\xe \v CoolWifi\:nomad}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool CoolWifi::nomad =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABBZ}
{\bkmkend AAAAAAABBZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
nomad Mode Flag in Nomad Mode , the Wifi Access Point will Only Lunch on Start when there's NO saved wifis ( wifiCount = 0) After that, the Wifi will ONLY try to connect to known Wifis via WifiMulti \par
}{
Definition at line 108 of file CoolWifi.h.}\par
{
Referenced by config(), connect(), and printConf().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolWifi.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolWifi.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExternalSensor< T > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v ExternalSensor< T >}
{\xe \v ExternalSensor< T >}
{\bkmkstart AAAAAAABCA}
{\bkmkend AAAAAAABCA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
template<class SensorClass> class External Sensor: Derived class from {\b BaseExternalSensor}. }}\par
{
{\f2 #include <ExternalSensor.h>}}\par
Inheritance diagram for ExternalSensor< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d93/class_external_sensor__inherit__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ExternalSensor< T >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d2f/class_external_sensor__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExternalSensor} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual uint8_t {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b read} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
T {\b sensor}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<class T>\par
class ExternalSensor< T >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
template<class SensorClass> class External Sensor: Derived class from {\b BaseExternalSensor}. \par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This is the generic Template for an external sensor This class works automatically with sensors that provide the following methods :{
\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
constructor(void);\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t/bool {\b begin(void)};\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b read(void)};\par}
If your sensor doesn't provide these methods or is not present in the specialized templates feel free to implement your own specializiation, following the provided generic template , or contact us and we will be glad to expand our list of supported external sensors \par
}{
Definition at line 137 of file ExternalSensor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExternalSensor\:ExternalSensor}
{\xe \v ExternalSensor\:ExternalSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > {\b ExternalSensor}< T >::{\b ExternalSensor} (){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABCB}
{\bkmkend AAAAAAABCB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic Constructor \par
}{
Definition at line 143 of file ExternalSensor.h.}\par
{
References ExternalSensor< T >::sensor.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:ExternalSensor}
{\xe \v ExternalSensor\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual uint8_t {\b ExternalSensor}< T >::begin (void ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASD}
{\bkmkend AAAAAAAASD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic begin method \par
}{
Reimplemented from {\b BaseExternalSensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 161 of file ExternalSensor.h.}\par
{
References ExternalSensor< T >::sensor.}\par
}
{\xe \v read\:ExternalSensor}
{\xe \v ExternalSensor\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > virtual float {\b ExternalSensor}< T >::read (void ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASH}
{\bkmkend AAAAAAAASH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Generic read method \par
}{
Reimplemented from {\b BaseExternalSensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 177 of file ExternalSensor.h.}\par
{
References ExternalSensor< T >::sensor.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v sensor\:ExternalSensor}
{\xe \v ExternalSensor\:sensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > T {\b ExternalSensor}< T >::sensor{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCC}
{\bkmkend AAAAAAABCC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 194 of file ExternalSensor.h.}\par
{
Referenced by ExternalSensor< T >::begin(), ExternalSensor< NDIR_I2C >::begin(), ExternalSensor< DallasTemperature >::begin(), ExternalSensor< T >::ExternalSensor(), ExternalSensor< NDIR_I2C >::ExternalSensor(), ExternalSensor< DallasTemperature >::ExternalSensor(), ExternalSensor< T >::read(), ExternalSensor< NDIR_I2C >::read(), and ExternalSensor< DallasTemperature >::read().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b ExternalSensor.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExternalSensor< DallasTemperature > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v ExternalSensor< DallasTemperature >}
{\xe \v ExternalSensor< DallasTemperature >}
{\bkmkstart AAAAAAABCD}
{\bkmkend AAAAAAABCD}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DallasTemperature Specialization Class This is the template specialization for the Dallas Temperature sensor. }}\par
{
{\f2 #include <ExternalSensor.h>}}\par
Inheritance diagram for ExternalSensor< DallasTemperature >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d74/class_external_sensor_3_01_dallas_temperature_01_4__inherit__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ExternalSensor< DallasTemperature >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d86/class_external_sensor_3_01_dallas_temperature_01_4__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExternalSensor} (OneWire *{\b oneWire})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual uint8_t {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b read} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DallasTemperature {\b sensor}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
DeviceAddress {\b dallasAddress}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<>\par
class ExternalSensor< DallasTemperature >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DallasTemperature Specialization Class This is the template specialization for the Dallas Temperature sensor. \par
}{
Definition at line 330 of file ExternalSensor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExternalSensor\:ExternalSensor< DallasTemperature >}
{\xe \v ExternalSensor< DallasTemperature >\:ExternalSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExternalSensor}< DallasTemperature >::{\b ExternalSensor} (OneWire *  {\i oneWire}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABCE}
{\bkmkend AAAAAAABCE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensor()}: DallasTemperature specific constructor \par
}{
Definition at line 337 of file ExternalSensor.h.}\par
{
References ExternalSensor< T >::sensor.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:ExternalSensor< DallasTemperature >}
{\xe \v ExternalSensor< DallasTemperature >\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual uint8_t {\b ExternalSensor}< DallasTemperature >::begin (void ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASB}
{\bkmkend AAAAAAAASB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b begin()}: DallasTemperature specific begin method\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful \par
}}{
Reimplemented from {\b BaseExternalSensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 355 of file ExternalSensor.h.}\par
{
References ExternalSensor< T >::sensor.}\par
}
{\xe \v read\:ExternalSensor< DallasTemperature >}
{\xe \v ExternalSensor< DallasTemperature >\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual float {\b ExternalSensor}< DallasTemperature >::read (void ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASF}
{\bkmkend AAAAAAAASF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b read()}: DallasTemperature specific read method\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the temperature in \'B0C \par
}}{
Reimplemented from {\b BaseExternalSensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 376 of file ExternalSensor.h.}\par
{
References ExternalSensor< T >::sensor.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v sensor\:ExternalSensor< DallasTemperature >}
{\xe \v ExternalSensor< DallasTemperature >\:sensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DallasTemperature {\b ExternalSensor}< DallasTemperature >::sensor{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCF}
{\bkmkend AAAAAAABCF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 401 of file ExternalSensor.h.}\par
}
{\xe \v dallasAddress\:ExternalSensor< DallasTemperature >}
{\xe \v ExternalSensor< DallasTemperature >\:dallasAddress}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
DeviceAddress {\b ExternalSensor}< DallasTemperature >::dallasAddress{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCG}
{\bkmkend AAAAAAABCG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 402 of file ExternalSensor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b ExternalSensor.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExternalSensor< NDIR_I2C > Class Template Reference\par \pard\plain 
{\tc\tcl2 \v ExternalSensor< NDIR_I2C >}
{\xe \v ExternalSensor< NDIR_I2C >}
{\bkmkstart AAAAAAABCH}
{\bkmkend AAAAAAABCH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b NDIR_I2C} Specialization Class This is the template specialization for the {\b NDIR_I2C} CO2 sensor. }}\par
{
{\f2 #include <ExternalSensor.h>}}\par
Inheritance diagram for ExternalSensor< NDIR_I2C >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d1b/class_external_sensor_3_01_n_d_i_r___i2_c_01_4__inherit__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
Collaboration diagram for ExternalSensor< NDIR_I2C >:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d03/class_external_sensor_3_01_n_d_i_r___i2_c_01_4__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b ExternalSensor} (uint8_t i2c_addr)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual uint8_t {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
virtual float {\b read} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NDIR_I2C} {\b sensor} =NULL\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
template<>\par
class ExternalSensor< NDIR_I2C >\par
}

{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b NDIR_I2C} Specialization Class This is the template specialization for the {\b NDIR_I2C} CO2 sensor. \par
}{
Definition at line 205 of file ExternalSensor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v ExternalSensor\:ExternalSensor< NDIR_I2C >}
{\xe \v ExternalSensor< NDIR_I2C >\:ExternalSensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b ExternalSensor}< {\b NDIR_I2C} >::{\b ExternalSensor} (uint8_t  {\i i2c_addr}){\f2 [inline]}}}
\par
{\bkmkstart AAAAAAABCI}
{\bkmkend AAAAAAABCI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensor(I2C address)}: {\b NDIR_I2C} specific constructor \par
}{
Definition at line 213 of file ExternalSensor.h.}\par
{
References ExternalSensor< T >::sensor.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:ExternalSensor< NDIR_I2C >}
{\xe \v ExternalSensor< NDIR_I2C >\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual uint8_t {\b ExternalSensor}< {\b NDIR_I2C} >::begin (void ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASC}
{\bkmkend AAAAAAAASC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b begin()}: {\b NDIR_I2C} specific begin method\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful, false otherwise \par
}}{
Reimplemented from {\b BaseExternalSensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASA \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 233 of file ExternalSensor.h.}\par
{
References ExternalSensor< T >::sensor.}\par
}
{\xe \v read\:ExternalSensor< NDIR_I2C >}
{\xe \v ExternalSensor< NDIR_I2C >\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
virtual float {\b ExternalSensor}< {\b NDIR_I2C} >::read (void ){\f2 [inline]}, {\f2 [virtual]}}}
\par
{\bkmkstart AAAAAAAASG}
{\bkmkend AAAAAAAASG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b read()}: {\b NDIR_I2C} specific read method\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the ppm value if successful, else return -42 \par
}}{
Reimplemented from {\b BaseExternalSensor} ({\i p.{\field\fldedit {\*\fldinst PAGEREF AAAAAAAASE \\*MERGEFORMAT}{\fldrslt pagenum}}}).}\par
{
Definition at line 278 of file ExternalSensor.h.}\par
{
References ExternalSensor< T >::sensor.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v sensor\:ExternalSensor< NDIR_I2C >}
{\xe \v ExternalSensor< NDIR_I2C >\:sensor}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b NDIR_I2C} {\b ExternalSensor}< {\b NDIR_I2C} >::sensor =NULL{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCJ}
{\bkmkend AAAAAAABCJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 320 of file ExternalSensor.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following file:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b ExternalSensor.h}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExternalSensors Class Reference\par \pard\plain 
{\tc\tcl2 \v ExternalSensors}
{\xe \v ExternalSensors}
{\bkmkstart AAAAAAABCK}
{\bkmkend AAAAAAABCK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the external sensors run time defintion , configuartion and actions. }}\par
{
{\f2 #include <ExternalSensors.h>}}\par
Collaboration diagram for ExternalSensors:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/df9/class_external_sensors__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b sensor}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b read} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} (String reference[], String type[], uint8_t address[], int {\b sensorsNumber})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printConf} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ExternalSensors::sensor} {\b sensors} [50]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b sensorsNumber} =0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the external sensors run time defintion , configuartion and actions. \par
}{
Definition at line 47 of file ExternalSensors.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v ExternalSensors::sensor}
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct ExternalSensors::sensor\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Array of 50 External Sensors\par
An External Sensor is described by :\par
{\b sensor.reference} : the sensor's reference ( {\b NDIR_I2C}...)\par
{\b sensor.type} : the sensor's Type ( CO2 , Temperature , .... )\par
{\b sensor.address} : the sensor's Address if it has one\par
{\b sensor.exSensor} : pointer to the dynmacially instanciated sensor \par
}{
Definition at line 76 of file ExternalSensors.h.}\par
}
Collaboration diagram for ExternalSensors::sensor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/db6/struct_external_sensors_1_1sensor__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr String{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\cell }{reference\cell }{\cell }{\row }
{\qr String{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\cell }{type\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\cell }{address\cell }{\cell }{\row }
{\qr {\b BaseExternalSensor} *{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\cell }{exSensor\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:ExternalSensors}
{\xe \v ExternalSensors\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExternalSensors::begin (void )}}
\par
{\bkmkstart AAAAAAABCL}
{\bkmkend AAAAAAABCL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensors::begin()}: This method is provided to initialise the external sensors. \par
}{
Definition at line 58 of file ExternalSensors.cpp.}\par
{
References BaseExternalSensor::begin(), ExternalSensors::sensor::exSensor, oneWire(), BaseExternalSensor::read(), sensors, and sensorsNumber.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d2f/class_external_sensors_a58ede0d786a86417254708870f04a21e_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d2f/class_external_sensors_a58ede0d786a86417254708870f04a21e_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v read\:ExternalSensors}
{\xe \v ExternalSensors\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String ExternalSensors::read (void )}}
\par
{\bkmkstart AAAAAAABCM}
{\bkmkend AAAAAAABCM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensors::read()}: This method is provided to read the data from the external sensors\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid json string that contains the sensors data \par
}}{
Definition at line 102 of file ExternalSensors.cpp.}\par
{
References sensors, sensorsNumber, and ExternalSensors::sensor::type.}\par
{
Referenced by CoolBoard::readSensors().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d2f/class_external_sensors_a53177b81eca3be89508b5511ddcd00fc_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:ExternalSensors}
{\xe \v ExternalSensors\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExternalSensors::config ()}}
\par
{\bkmkstart AAAAAAABCN}
{\bkmkend AAAAAAABCN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensors::config()}: This method is provided to configure the externalSensors through a configuration file\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful,false otherwise \par
}}{
Definition at line 175 of file ExternalSensors.cpp.}\par
{
References ExternalSensors::sensor::address, ExternalSensors::sensor::reference, sensors, sensorsNumber, and ExternalSensors::sensor::type.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d2f/class_external_sensors_a862a4bd11346b37270d0244c2adabe5a_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:ExternalSensors}
{\xe \v ExternalSensors\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool ExternalSensors::config (String  {\i reference}[], String  {\i type}[], uint8_t  {\i address}[], int  {\i sensorsNumber})}}
\par
{\bkmkstart AAAAAAABCO}
{\bkmkend AAAAAAABCO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensors::config(String reference[],String type[],uint8_t address[],int sensorsNumber)}: This method is provided to configure the externalSensors without a configuration file\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful,false otherwise \par
}}{
Definition at line 340 of file ExternalSensors.cpp.}\par
{
References ExternalSensors::sensor::address, ExternalSensors::sensor::reference, sensors, sensorsNumber, and ExternalSensors::sensor::type.}\par
}
{\xe \v printConf\:ExternalSensors}
{\xe \v ExternalSensors\:printConf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void ExternalSensors::printConf ()}}
\par
{\bkmkstart AAAAAAABCP}
{\bkmkend AAAAAAABCP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensors::printConf()}: This method is provided to print the configuration to the Serial Monitor \par
}{
Definition at line 383 of file ExternalSensors.cpp.}\par
{
References sensors, and sensorsNumber.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d2f/class_external_sensors_a78c2bf55084435dd51d3c559b2d3c6f3_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v sensors\:ExternalSensors}
{\xe \v ExternalSensors\:sensors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b ExternalSensors::sensor} ExternalSensors::sensors[50]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCQ}
{\bkmkend AAAAAAABCQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by begin(), config(), printConf(), and read().}\par
}
{\xe \v sensorsNumber\:ExternalSensors}
{\xe \v ExternalSensors\:sensorsNumber}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int ExternalSensors::sensorsNumber =0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABCR}
{\bkmkend AAAAAAABCR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
External Sensors Number Maximum is 50 \par
}{
Definition at line 88 of file ExternalSensors.h.}\par
{
Referenced by begin(), config(), printConf(), and read().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b ExternalSensors.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b ExternalSensors.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Irene3000 Class Reference\par \pard\plain 
{\tc\tcl2 \v Irene3000}
{\xe \v Irene3000}
{\bkmkstart AAAAAAABCS}
{\bkmkend AAAAAAABCS}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is provided to manage the {\b Irene3000} Ph/Temperature Shield. }}\par
{
{\f2 #include <Irene3000.h>}}\par
Collaboration diagram for Irene3000:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d7b/class_irene3000__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b parameters_T}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b state}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printConf} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b read} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b readButton} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setGain} ({\b adsGain_t} gain)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b readADSChannel2} ({\b adsGain_t} gain)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
float {\b readPh} (double t)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
double {\b readTemp} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resetParams} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calibratepH7} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calibratepH4} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b calcpHSlope} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b adsGain_t} {\b gainConvert} (uint16_t tempGain)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b saveParams} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b Adafruit_ADS1115} {\b ads}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Irene3000::parameters_T} {\b params}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Irene3000::state} {\b waterTemp}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Irene3000::state} {\b phProbe}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Irene3000::state} {\b adc2}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const float {\b vRef} = 1.024\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const float {\b opampGain} = 5.25\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is provided to manage the {\b Irene3000} Ph/Temperature Shield. \par
}{
Definition at line 59 of file Irene3000.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Irene3000::parameters_T}
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Irene3000::parameters_T\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PH Sensor Calibration parameters\par
pH7Cal : PH 7 Calibration value\par
pH4Cal : PH 4 Calibration value\par
pHStep : PH Slope Step value \par
}{
Definition at line 111 of file Irene3000.h.}\par
}
Collaboration diagram for Irene3000::parameters_T:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/df5/struct_irene3000_1_1parameters___t__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr unsigned int{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\cell }{WriteCheck\cell }{\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\cell }{pH7Cal\cell }{\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\cell }{pH4Cal\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\cell }{pHStep\cell }{\cell }{\row }
}
{\xe \v Irene3000::state}
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Irene3000::state\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Irene sensors state struct\par
active : if the related sensor is active or not\par
gain : what is the used gain for the related sensor (used only for the free channel)\par
type : the type of the used sensor(used only for the free channel ) \par
}{
Definition at line 128 of file Irene3000.h.}\par
}
Collaboration diagram for Irene3000::state:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d72/struct_irene3000_1_1state__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\cell }{active\cell }{\cell }{\row }
{\qr {\b adsGain_t}{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\cell }{gain\cell }{\cell }{\row }
{\qr String{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\cell }{type\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:Irene3000}
{\xe \v Irene3000\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Irene3000::begin (void )}}
\par
{\bkmkstart AAAAAAABCT}
{\bkmkend AAAAAAABCT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000::begin()}: This method is provided to start the {\b Irene3000} \par
}{
Definition at line 52 of file Irene3000.cpp.}\par
{
References ads, Adafruit_ADS1015::begin(), calibratepH4(), calibratepH7(), readButton(), and saveParams().}\par
{
Referenced by CoolBoard::begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_ad5891806c500ae1007afe52b9e304c2b_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_ad5891806c500ae1007afe52b9e304c2b_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:Irene3000}
{\xe \v Irene3000\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Irene3000::config ()}}
\par
{\bkmkstart AAAAAAABCU}
{\bkmkend AAAAAAABCU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000::config()}: This method is provided to configure the {\b Irene3000} shield through a configuration file\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful,false otherwise \par
}}{
Definition at line 203 of file Irene3000.cpp.}\par
{
References Irene3000::state::active, adc2, Irene3000::state::gain, gainConvert(), params, Irene3000::parameters_T::pH4Cal, Irene3000::parameters_T::pH7Cal, phProbe, Irene3000::parameters_T::pHStep, Irene3000::state::type, and waterTemp.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_afed5c35e4b23963c157847ef27c11e9c_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_afed5c35e4b23963c157847ef27c11e9c_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printConf\:Irene3000}
{\xe \v Irene3000\:printConf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Irene3000::printConf ()}}
\par
{\bkmkstart AAAAAAABCV}
{\bkmkend AAAAAAABCV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000::printConf()}: This method is provided to print the configuration to the Serial Monitor \par
}{
Definition at line 391 of file Irene3000.cpp.}\par
{
References Irene3000::state::active, adc2, Irene3000::state::gain, phProbe, Irene3000::state::type, and waterTemp.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a7bc2414100b5e19eacc6630fa34b2654_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v read\:Irene3000}
{\xe \v Irene3000\:read}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String Irene3000::read (void )}}
\par
{\bkmkstart AAAAAAABCW}
{\bkmkend AAAAAAABCW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000}:{\b read()}: This method is provided to read the {\b Irene3000} sensors data\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid json string of the sensors data \par
}}{
Definition at line 133 of file Irene3000.cpp.}\par
{
References Irene3000::state::active, adc2, Irene3000::state::gain, phProbe, readADSChannel2(), readPh(), readTemp(), Irene3000::state::type, and waterTemp.}\par
{
Referenced by CoolBoard::readSensors().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a852a170feea994ea1df01c6b245b5d9a_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a852a170feea994ea1df01c6b245b5d9a_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readButton\:Irene3000}
{\xe \v Irene3000\:readButton}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Irene3000::readButton ()}}
\par
{\bkmkstart AAAAAAABCX}
{\bkmkend AAAAAAABCX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000::readButton()}: This method is provided to read the {\b Irene3000} button\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the button value \par
}}{
Definition at line 434 of file Irene3000.cpp.}\par
{
References ads, button, GAIN_TWOTHIRDS, Adafruit_ADS1015::readADC_SingleEnded(), and setGain().}\par
{
Referenced by begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a78a87eb7cf295b95c12b2ebd51c2bb77_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a78a87eb7cf295b95c12b2ebd51c2bb77_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setGain\:Irene3000}
{\xe \v Irene3000\:setGain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Irene3000::setGain ({\b adsGain_t}  {\i gain})}}
\par
{\bkmkstart AAAAAAABCY}
{\bkmkend AAAAAAABCY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Irene3000::setGain(gain): This method is provided to set the ADS chip gain \par
}{
Definition at line 462 of file Irene3000.cpp.}\par
{
References ads, and Adafruit_ADS1015::setGain().}\par
{
Referenced by calibratepH4(), calibratepH7(), readADSChannel2(), readButton(), readPh(), and readTemp().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_aff7c5da186b388e7272e63ff88a20c34_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_aff7c5da186b388e7272e63ff88a20c34_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readADSChannel2\:Irene3000}
{\xe \v Irene3000\:readADSChannel2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int Irene3000::readADSChannel2 ({\b adsGain_t}  {\i gain})}}
\par
{\bkmkstart AAAAAAABCZ}
{\bkmkend AAAAAAABCZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Irene3000::readADSChannel2(gain): This method is provided to read from the ADS channel 2 . ADS Channel 2 is free and the user can connect another analog sensor to it.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the ADS Channel 2 value \par
}}{
Definition at line 484 of file Irene3000.cpp.}\par
{
References ads, freeAdc, Adafruit_ADS1015::readADC_SingleEnded(), and setGain().}\par
{
Referenced by read().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_ae73bd2ed14a199a7e83f4d6458476a7c_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_ae73bd2ed14a199a7e83f4d6458476a7c_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readPh\:Irene3000}
{\xe \v Irene3000\:readPh}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
float Irene3000::readPh (double  {\i t})}}
\par
{\bkmkstart AAAAAAABDA}
{\bkmkend AAAAAAABDA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000::readPh(double t)}: This method is provided to read the PH probe note that for the best results, PH must be correlated to Temperature.\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the PH probe value \par
}}{
Definition at line 515 of file Irene3000.cpp.}\par
{
References ADC_MAXIMUM_VALUE, ads, GAIN_FOUR, opampGain, params, ph, Irene3000::parameters_T::pH7Cal, Irene3000::parameters_T::pHStep, Adafruit_ADS1015::readADC_SingleEnded(), REFERENCE_VOLTAGE_GAIN_4, setGain(), and vRef.}\par
{
Referenced by read().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a436fc0a06681cd0784aba56b9707f19a_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a436fc0a06681cd0784aba56b9707f19a_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readTemp\:Irene3000}
{\xe \v Irene3000\:readTemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
double Irene3000::readTemp ()}}
\par
{\bkmkstart AAAAAAABDB}
{\bkmkend AAAAAAABDB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Irene3000::readTemp(gain): This method is provided to read the Temeperature probe\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid the Temperature probe value \par
}}{
Definition at line 561 of file Irene3000.cpp.}\par
{
References ads, GAIN_EIGHT, Adafruit_ADS1015::readADC_SingleEnded(), setGain(), temp, and V_GAIN_8.}\par
{
Referenced by read().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a80bc6dfea106dc3bc54fa20204d4d5dc_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a80bc6dfea106dc3bc54fa20204d4d5dc_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v resetParams\:Irene3000}
{\xe \v Irene3000\:resetParams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Irene3000::resetParams (void )}}
\par
{\bkmkstart AAAAAAABDC}
{\bkmkend AAAAAAABDC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000::resetParams()}: This method is provided to reset the PH configuration, assuming Ideal configuration \par
}{
Definition at line 706 of file Irene3000.cpp.}\par
{
References params, Irene3000::parameters_T::pH4Cal, Irene3000::parameters_T::pH7Cal, Irene3000::parameters_T::pHStep, Write_Check, and Irene3000::parameters_T::WriteCheck.}\par
}
{\xe \v calibratepH7\:Irene3000}
{\xe \v Irene3000\:calibratepH7}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Irene3000::calibratepH7 ()}}
\par
{\bkmkstart AAAAAAABDD}
{\bkmkend AAAAAAABDD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000::calibratepH7()}: This method is provided to calibrate the PH probe to 7 \par
}{
Definition at line 632 of file Irene3000.cpp.}\par
{
References ads, calcpHSlope(), GAIN_FOUR, params, ph, Irene3000::parameters_T::pH7Cal, Adafruit_ADS1015::readADC_SingleEnded(), and setGain().}\par
{
Referenced by begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a1d3299202e4cb7afcff9c9e3e95d94c1_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a1d3299202e4cb7afcff9c9e3e95d94c1_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v calibratepH4\:Irene3000}
{\xe \v Irene3000\:calibratepH4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Irene3000::calibratepH4 ()}}
\par
{\bkmkstart AAAAAAABDE}
{\bkmkend AAAAAAABDE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000::calibratepH4()}: This method is provided to calibrate the PH probe to 4 \par
}{
Definition at line 659 of file Irene3000.cpp.}\par
{
References ads, calcpHSlope(), GAIN_FOUR, params, ph, Irene3000::parameters_T::pH4Cal, Adafruit_ADS1015::readADC_SingleEnded(), and setGain().}\par
{
Referenced by begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_aa140dd026922a04981edfd04d46cabbe_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_aa140dd026922a04981edfd04d46cabbe_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v calcpHSlope\:Irene3000}
{\xe \v Irene3000\:calcpHSlope}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Irene3000::calcpHSlope ()}}
\par
{\bkmkstart AAAAAAABDF}
{\bkmkend AAAAAAABDF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Irene3000::calcpHSlop(): This method is provided to calculate th PH slope \par
}{
Definition at line 685 of file Irene3000.cpp.}\par
{
References opampGain, params, Irene3000::parameters_T::pH4Cal, Irene3000::parameters_T::pH7Cal, Irene3000::parameters_T::pHStep, and vRef.}\par
{
Referenced by calibratepH4(), and calibratepH7().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a81f6a79e546679692053f7ac1af49613_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v gainConvert\:Irene3000}
{\xe \v Irene3000\:gainConvert}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b adsGain_t} Irene3000::gainConvert (uint16_t  {\i tempGain})}}
\par
{\bkmkstart AAAAAAABDG}
{\bkmkend AAAAAAABDG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000::gainConvert}( gain : \{ 0.67 ,1,2,4,8,16 \} ) This method is provided to convert the gain to Internal Constants\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid internal representation of the ADS gain \par
}}{
Definition at line 732 of file Irene3000.cpp.}\par
{
References GAIN_EIGHT, GAIN_FOUR, GAIN_ONE, GAIN_SIXTEEN, GAIN_TWO, and GAIN_TWOTHIRDS.}\par
{
Referenced by config().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_abcad62d1201a59f8dd3ba87048002728_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v saveParams\:Irene3000}
{\xe \v Irene3000\:saveParams}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Irene3000::saveParams ()}}
\par
{\bkmkstart AAAAAAABDH}
{\bkmkend AAAAAAABDH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 757 of file Irene3000.cpp.}\par
{
References params, Irene3000::parameters_T::pH4Cal, Irene3000::parameters_T::pH7Cal, and Irene3000::parameters_T::pHStep.}\par
{
Referenced by begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d03/class_irene3000_a63dbd38e79b8cd5f1fba4b245501a894_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v ads\:Irene3000}
{\xe \v Irene3000\:ads}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b Adafruit_ADS1115} Irene3000::ads{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDI}
{\bkmkend AAAAAAABDI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
ADS1115 instance \par
}{
Definition at line 99 of file Irene3000.h.}\par
{
Referenced by begin(), calibratepH4(), calibratepH7(), readADSChannel2(), readButton(), readPh(), readTemp(), and setGain().}\par
}
{\xe \v params\:Irene3000}
{\xe \v Irene3000\:params}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Irene3000::parameters_T} Irene3000::params{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDJ}
{\bkmkend AAAAAAABDJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by calcpHSlope(), calibratepH4(), calibratepH7(), config(), readPh(), resetParams(), and saveParams().}\par
}
{\xe \v waterTemp\:Irene3000}
{\xe \v Irene3000\:waterTemp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Irene3000::state}  Irene3000::waterTemp{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDK}
{\bkmkend AAAAAAABDK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by config(), printConf(), and read().}\par
}
{\xe \v phProbe\:Irene3000}
{\xe \v Irene3000\:phProbe}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Irene3000::state}  Irene3000::phProbe{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDL}
{\bkmkend AAAAAAABDL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by config(), printConf(), and read().}\par
}
{\xe \v adc2\:Irene3000}
{\xe \v Irene3000\:adc2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Irene3000::state} Irene3000::adc2{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDM}
{\bkmkend AAAAAAABDM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by config(), printConf(), and read().}\par
}
{\xe \v vRef\:Irene3000}
{\xe \v Irene3000\:vRef}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float Irene3000::vRef = 1.024{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDN}
{\bkmkend AAAAAAABDN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
vRef constant used for ADC conversion \par
}{
Definition at line 139 of file Irene3000.h.}\par
{
Referenced by calcpHSlope(), and readPh().}\par
}
{\xe \v opampGain\:Irene3000}
{\xe \v Irene3000\:opampGain}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const float Irene3000::opampGain = 5.25{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABDO}
{\bkmkend AAAAAAABDO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
opAmpGain constant used for ADC conversion \par
}{
Definition at line 144 of file Irene3000.h.}\par
{
Referenced by calcpHSlope(), and readPh().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Irene3000.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Irene3000.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Jetpack Class Reference\par \pard\plain 
{\tc\tcl2 \v Jetpack}
{\xe \v Jetpack}
{\bkmkstart AAAAAAABDP}
{\bkmkend AAAAAAABDP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b Jetpack} shield. }}\par
{
{\f2 #include <Jetpack.h>}}\par
Collaboration diagram for Jetpack:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/db7/class_jetpack__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b state}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b write} (byte {\b action})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b writeBit} (byte pin, bool {\b state})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b doAction} (const char *data)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b normalAction} (int actorNumber, float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b invertedAction} (int actorNumber, float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b temporalActionOff} (int actorNumber)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b temporalActionOn} (int actorNumber)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mixedTemporalActionOff} (int actorNumber, float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mixedTemporalActionOn} (int actorNumber, float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b hourAction} (int actorNumber, int hour)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mixedHourAction} (int actorNumber, int hour, float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b minuteAction} (int actorNumber, int minute)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mixedMinuteAction} (int actorNumber, int minute, float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b hourMinuteAction} (int actorNumber, int hour, int minute)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b mixedHourMinuteAction} (int actorNumber, int hour, int minute, float measurment)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b config} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b printConf} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
byte {\b action} = B00000000\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Jetpack::state} {\b actors} [8]\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b clockPin} = 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b dataPin} = 15\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const int {\b EnI2C} =5\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b Jetpack} shield. \par
}{
Definition at line 45 of file Jetpack.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Jetpack::state}
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Jetpack::state\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the Actor's state \par
}{
Definition at line 95 of file Jetpack.h.}\par
}
Collaboration diagram for Jetpack::state:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/da1/struct_jetpack_1_1state__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\cell }{actif\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
actif flag set to 1 when using an actor set to 0 otherwise \par
}\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\cell }{temporal\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
temporal flag set to 1 to declare a temporal actor set to 0 otherwise \par
}\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\cell }{inverted\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inverted flag set to 1 to declare an inverted actor set to 0 to declare a normal actor \par
}\cell }{\row }
{\qr String{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\cell }{primaryType\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"type":["temperature","hour"]\par
the primary type is related to the sensor's type (type[0])\par
if both types are present and valid, the actor is a mixedActor \par
}\cell }{\row }
{\qr String{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\cell }{secondaryType\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"type":["temperature","hour"]\par
the secondary type if present is hour or minute or hourMinute (type[1])\par
if both types are present and valid, the actor is a mixedActor \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\cell }{rangeLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
rangeLow : this is the minimum at which the actor becomes actif (low[0]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\cell }{timeLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
timeLow : this is the time the actor is off in temporal mode (low[1]) (ms) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\cell }{hourLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
hour low :this is the hour when to turn off the actor in temporal/hour(hourMinute) mode (low[2] ) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{minuteLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
minute low :this is the minute when to turn off the actor in temporal/minute(hourMinute) mode (low[3]) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\cell }{rangeHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
rangeHigh : this is the maximum at which the actor becomes inactif(high[0]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\cell }{timeHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
timeHigh : this is the time the actor is on in temporal mode(high[1]) (ms) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\cell }{hourHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
hourHigh : this is the hour when to turn on the actor in temporal/hour(hourMinute) mode(high[2]) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\cell }{minuteHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
minuteHigh : this is the minute when to turn on the actor in temporal/minute(hourMinute) mode (high[3]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\cell }{actifTime\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
actifTime : period of Time spent actif , used in Temporal mode in ms \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\cell }{inactifTime\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inactifTime : period of Time spent inactif , used in Temporal mode in ms \par
}\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:Jetpack}
{\xe \v Jetpack\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::begin (void )}}
\par
{\bkmkstart AAAAAAABDQ}
{\bkmkend AAAAAAABDQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Jetpack::begin()}: This method is provided to initialise the pin that control the {\b Jetpack} shield \par
}{
Definition at line 50 of file Jetpack.cpp.}\par
{
References clockPin, dataPin, and EnI2C.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_a5a53e1ebf7aaf3bf3e0d37ea64ca09a7_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v write\:Jetpack}
{\xe \v Jetpack\:write}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::write (byte  {\i action})}}
\par
{\bkmkstart AAAAAAABDR}
{\bkmkend AAAAAAABDR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::write(action): This method is provided to write the given action to the entire {\b Jetpack} action is a Byte (8 bits ), each bit goes to an output. MSBFirst \par
}{
Definition at line 77 of file Jetpack.cpp.}\par
{
References action, clockPin, dataPin, and EnI2C.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_a338f1af8cbc6504ac69b47c7328569b5_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeBit\:Jetpack}
{\xe \v Jetpack\:writeBit}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::writeBit (byte  {\i pin}, bool  {\i state})}}
\par
{\bkmkstart AAAAAAABDS}
{\bkmkend AAAAAAABDS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::writeBit(pin,state): This method is provided to write the given state to the given pin \par
}{
Definition at line 108 of file Jetpack.cpp.}\par
{
References action, clockPin, dataPin, and EnI2C.}\par
{
Referenced by CoolBoard::update().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_a79ae7bc3c1828a0551a7c005c4f8bd00_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v doAction\:Jetpack}
{\xe \v Jetpack\:doAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::doAction (const char *  {\i data})}}
\par
{\bkmkstart AAAAAAABDT}
{\bkmkend AAAAAAABDT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::doAction(sensor data ): This method is provided to automate the {\b Jetpack}.\par
The result action is the result of checking the different flags of an actor (actif , temporal ,inverted, primaryType and secondaryType ) and the corresponding call to the appropriate helping method \par
}{
Definition at line 144 of file Jetpack.cpp.}\par
{
References action, actors, hourAction(), hourMinuteAction(), invertedAction(), minuteAction(), mixedHourAction(), mixedHourMinuteAction(), mixedMinuteAction(), mixedTemporalActionOff(), mixedTemporalActionOn(), normalAction(), temporalActionOff(), temporalActionOn(), and write().}\par
{
Referenced by CoolBoard::offLineMode(), and CoolBoard::onLineMode().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_a9e703197093094b963f9ad57817495b8_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_a9e703197093094b963f9ad57817495b8_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v normalAction\:Jetpack}
{\xe \v Jetpack\:normalAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::normalAction (int  {\i actorNumber}, float  {\i measurment})}}
\par
{\bkmkstart AAAAAAABDU}
{\bkmkend AAAAAAABDU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::normalAction(actorNumber , measured value): This method is provided to handle normal actors. it changes the action according to wether the measured value is: > rangeHigh ( deactivate actor) or < rangeLow (activate actor ) \par
}{
Definition at line 637 of file Jetpack.cpp.}\par
{
References action, and actors.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_a65ce9533c39fa71e4945b970bf14b980_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v invertedAction\:Jetpack}
{\xe \v Jetpack\:invertedAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::invertedAction (int  {\i actorNumber}, float  {\i measurment})}}
\par
{\bkmkstart AAAAAAABDV}
{\bkmkend AAAAAAABDV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::invertedAction(actorNumber , measured value): This method is provided to handle inverted actors. it changes the action according to wether the measured value is: \par
{\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid rangeHigh (activate actor) \par
}< rangeLow ( deactivate actor ) \par
}{
Definition at line 694 of file Jetpack.cpp.}\par
{
References action, and actors.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_adacfc35fab4a621357caf98ce1c9cb54_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v temporalActionOff\:Jetpack}
{\xe \v Jetpack\:temporalActionOff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::temporalActionOff (int  {\i actorNumber})}}
\par
{\bkmkstart AAAAAAABDW}
{\bkmkend AAAAAAABDW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::temporalActionOff(actorNumber ): This method is provided to handle temporal actors. it changes the action according to:\par
currentTime - startTime > timeHigh : deactivate actor \par
}{
Definition at line 749 of file Jetpack.cpp.}\par
{
References Jetpack::state::actif, action, actors, and Jetpack::state::inactifTime.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_a2991b302cd99bf89325f9b66b104d575_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v temporalActionOn\:Jetpack}
{\xe \v Jetpack\:temporalActionOn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::temporalActionOn (int  {\i actorNumber})}}
\par
{\bkmkstart AAAAAAABDX}
{\bkmkend AAAAAAABDX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::temporalActionOn(actorNumber ): This method is provided to handle temporal actors. it changes the action according to :\par
currentTime - stopTime > timeLow : activate actor \par
}{
Definition at line 886 of file Jetpack.cpp.}\par
{
References Jetpack::state::actif, Jetpack::state::actifTime, action, and actors.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_ad011d904f639accb5f94ef806846ef59_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mixedTemporalActionOff\:Jetpack}
{\xe \v Jetpack\:mixedTemporalActionOff}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::mixedTemporalActionOff (int  {\i actorNumber}, float  {\i measurment})}}
\par
{\bkmkstart AAAAAAABDY}
{\bkmkend AAAAAAABDY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::mixedTemporalActionOff(actorNumber, measured value ): This method is provided to handle mixed temporal actors. it changes the action according to:\par
currentTime - startTime >= timeHigh : measured value >= rangeHigh : deactivate actor measured value < rangeHigh : activate actor \par
}{
Definition at line 800 of file Jetpack.cpp.}\par
{
References Jetpack::state::actif, action, actors, and Jetpack::state::inactifTime.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_af2f567ef6311a8fc2f7bb948837667b7_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mixedTemporalActionOn\:Jetpack}
{\xe \v Jetpack\:mixedTemporalActionOn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::mixedTemporalActionOn (int  {\i actorNumber}, float  {\i measurment})}}
\par
{\bkmkstart AAAAAAABDZ}
{\bkmkend AAAAAAABDZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::mixedTemporalActionOn(actorNumber, measured value ): This method is provided to handle mixed temporal actors. it changes the action according to :\par
currentTime - stopTime > timeLow : measured value >= rangeLow : deactivate actor measured value < rangeLow : activate actor \par
}{
Definition at line 938 of file Jetpack.cpp.}\par
{
References Jetpack::state::actif, Jetpack::state::actifTime, action, and actors.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_af44bc8a08818e4433dfb1c7104601f12_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v hourAction\:Jetpack}
{\xe \v Jetpack\:hourAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::hourAction (int  {\i actorNumber}, int  {\i hour})}}
\par
{\bkmkstart AAAAAAABEA}
{\bkmkend AAAAAAABEA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::hourAction(actorNumber, current hour ): This method is provided to handle hour actors. it changes the action according to:\par
hour >= hourLow : deactivate the actor hour >= hourHigh : activate the actor \par
}{
Definition at line 1027 of file Jetpack.cpp.}\par
{
References action, and actors.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_acd6889af2fe5b057c6bd51b6dac827ef_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mixedHourAction\:Jetpack}
{\xe \v Jetpack\:mixedHourAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::mixedHourAction (int  {\i actorNumber}, int  {\i hour}, float  {\i measurment})}}
\par
{\bkmkstart AAAAAAABEB}
{\bkmkend AAAAAAABEB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::mixedHourAction(actorNumber, current hour, measured value ): This method is provided to handle mixed hour actors. it changes the action according to :\par
hour >= hourLow : -measuredValue >= rangeHigh : deactivate actor -measured < rangeHigh : activate actor\par
hour >= hourHigh : -measuredValue < rangeLow : activate actor -measuredValue >=rangeLow : activate actor \par
}{
Definition at line 1088 of file Jetpack.cpp.}\par
{
References action, and actors.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_ac1a49ab4867718cdb415ad74c2066b9d_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v minuteAction\:Jetpack}
{\xe \v Jetpack\:minuteAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::minuteAction (int  {\i actorNumber}, int  {\i minute})}}
\par
{\bkmkstart AAAAAAABEC}
{\bkmkend AAAAAAABEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::minteAction(actorNumber, current minute ): This method is provided to handle minute actors. it changes the action according to:\par
minute >= minuteLow : deactivate the actor minute >= minuteHigh : activate the actor \par
}{
Definition at line 1195 of file Jetpack.cpp.}\par
{
References action, and actors.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_a97da41141c7b53ddee61143519c8d17d_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mixedMinuteAction\:Jetpack}
{\xe \v Jetpack\:mixedMinuteAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::mixedMinuteAction (int  {\i actorNumber}, int  {\i minute}, float  {\i measurment})}}
\par
{\bkmkstart AAAAAAABED}
{\bkmkend AAAAAAABED}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::mixedMinuteAction(actorNumber, current minute, measured value ): This method is provided to handle mixed minute actors. it changes the action according to :\par
minute >= minuteLow : -measuredValue >= rangeHigh : deactivate actor -measured < rangeHigh : activate actor\par
minute >= minuteHigh : -measuredValue < rangeLow : activate actor -measuredValue >=rangeLow : activate actor \par
}{
Definition at line 1255 of file Jetpack.cpp.}\par
{
References action, and actors.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_acf8ed1fb594b9e8e224f4ed872a8e093_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v hourMinuteAction\:Jetpack}
{\xe \v Jetpack\:hourMinuteAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::hourMinuteAction (int  {\i actorNumber}, int  {\i hour}, int  {\i minute})}}
\par
{\bkmkstart AAAAAAABEE}
{\bkmkend AAAAAAABEE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::minteAction(actorNumber, current hour,current minute ): This method is provided to handle hour minute actors. it changes the action according to:\par
hour == hourLow : minute >= minuteLow : deactivate the actor\par
hour > hourLow : deactivate the actor\par
hour == hourHigh : minute >= minteHigh : activate the actor\par
hour > hourHigh : activate the actor \par
}{
Definition at line 1371 of file Jetpack.cpp.}\par
{
References action, and actors.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_ae01c13c785ebdf1b0bb5500234aba1bd_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v mixedHourMinuteAction\:Jetpack}
{\xe \v Jetpack\:mixedHourMinuteAction}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::mixedHourMinuteAction (int  {\i actorNumber}, int  {\i hour}, int  {\i minute}, float  {\i measurment})}}
\par
{\bkmkstart AAAAAAABEF}
{\bkmkend AAAAAAABEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Jetpack::minteAction(actorNumber, current hour,current minute , measured Value ): This method is provided to handle hour minute actors. it changes the action according to:\par
hour == hourLow : minute >= minuteLow : measuredValue >= rangeHigh : deactivate actor measuredValue < rangeHigh : activate actor\par
hour > hourLow : measuredValue >= rangeHigh : deactivate actor measuredValue < rangeHigh : activate actor\par
hour == hourHigh : minute >= minteHigh : measuredValue >= rangeLow : deactivate actor measuredValue < rangeLow : activate actor\par
hour > hourHigh : measuredValue >= rangeLow : deactivate actor measuredValue < rangeLow : activate actor \par
}{
Definition at line 1476 of file Jetpack.cpp.}\par
{
References action, and actors.}\par
{
Referenced by doAction().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_a273dae1517b56f0242e28b8944edc26b_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v config\:Jetpack}
{\xe \v Jetpack\:config}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool Jetpack::config ()}}
\par
{\bkmkstart AAAAAAABEG}
{\bkmkend AAAAAAABEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Jetpack::config()}: This method is provided to configure the {\b Jetpack} with a configuration file\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Returns:\par}\pard\plain \s62\li720\widctlpar\ql\adjustright \fs20\cgrid true if successful,false otherwise \par
}}{
Definition at line 307 of file Jetpack.cpp.}\par
{
References Jetpack::state::actif, actors, Jetpack::state::hourHigh, Jetpack::state::hourLow, Jetpack::state::inverted, Jetpack::state::minuteHigh, Jetpack::state::minuteLow, Jetpack::state::primaryType, Jetpack::state::rangeHigh, Jetpack::state::rangeLow, Jetpack::state::secondaryType, Jetpack::state::temporal, Jetpack::state::timeHigh, and Jetpack::state::timeLow.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_ab065ee83e244265a2223a22f3ee4a719_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v printConf\:Jetpack}
{\xe \v Jetpack\:printConf}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void Jetpack::printConf ()}}
\par
{\bkmkstart AAAAAAABEH}
{\bkmkend AAAAAAABEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Jetpack::printConf()}: This method is provided to print the configuration to the Serial Monitor \par
}{
Definition at line 543 of file Jetpack.cpp.}\par
{
References actors.}\par
{
Referenced by CoolBoard::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d1d/class_jetpack_ac54a7bb4f9166bee32052253d9b1d306_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v action\:Jetpack}
{\xe \v Jetpack\:action}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
byte Jetpack::action = B00000000{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEI}
{\bkmkend AAAAAAABEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the {\b Jetpack}'s Action \par
}{
Definition at line 90 of file Jetpack.h.}\par
{
Referenced by doAction(), hourAction(), hourMinuteAction(), invertedAction(), minuteAction(), mixedHourAction(), mixedHourMinuteAction(), mixedMinuteAction(), mixedTemporalActionOff(), mixedTemporalActionOn(), normalAction(), temporalActionOff(), temporalActionOn(), write(), and writeBit().}\par
}
{\xe \v actors\:Jetpack}
{\xe \v Jetpack\:actors}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
struct {\b Jetpack::state} Jetpack::actors[8]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEJ}
{\bkmkend AAAAAAABEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by config(), doAction(), hourAction(), hourMinuteAction(), invertedAction(), minuteAction(), mixedHourAction(), mixedHourMinuteAction(), mixedMinuteAction(), mixedTemporalActionOff(), mixedTemporalActionOn(), normalAction(), printConf(), temporalActionOff(), and temporalActionOn().}\par
}
{\xe \v clockPin\:Jetpack}
{\xe \v Jetpack\:clockPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int Jetpack::clockPin = 4{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEK}
{\bkmkend AAAAAAABEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
clock pin for the shift register \par
}{
Definition at line 211 of file Jetpack.h.}\par
{
Referenced by begin(), write(), and writeBit().}\par
}
{\xe \v dataPin\:Jetpack}
{\xe \v Jetpack\:dataPin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int Jetpack::dataPin = 15{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEL}
{\bkmkend AAAAAAABEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
data pin for the shift register \par
}{
Definition at line 216 of file Jetpack.h.}\par
{
Referenced by begin(), write(), and writeBit().}\par
}
{\xe \v EnI2C\:Jetpack}
{\xe \v Jetpack\:EnI2C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const int Jetpack::EnI2C =5{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEM}
{\bkmkend AAAAAAABEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
I2C Enable pin \par
}{
Definition at line 221 of file Jetpack.h.}\par
{
Referenced by begin(), write(), and writeBit().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Jetpack.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b Jetpack.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
NDIR_I2C Class Reference\par \pard\plain 
{\tc\tcl2 \v NDIR_I2C}
{\xe \v NDIR_I2C}
{\bkmkstart AAAAAAABEN}
{\bkmkend AAAAAAABEN}
\par
{
{\f2 #include <CoolNDIR_I2C.h>}}\par
Collaboration diagram for NDIR_I2C:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dff/class_n_d_i_r___i2_c__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b NDIR_I2C} (uint8_t {\b i2c_addr})\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b begin} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b measure} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b i2c_addr}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint32_t {\b ppm}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b send} (uint8_t *pdata, uint8_t n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b receive} (uint8_t *pbuf, uint8_t n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b read_register} (uint8_t reg_addr, uint8_t *pval)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b write_register} (uint8_t reg_addr, uint8_t *pdata, uint8_t n)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b write_register} (uint8_t reg_addr, uint8_t val)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b parse} (uint8_t *pbuf)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Static Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint8_t {\b cmd_measure} [9] = \{0xFF,0x01,0x9C,0x00,0x00,0x00,0x00,0x00,0x63\}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 27 of file CoolNDIR_I2C.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v NDIR_I2C\:NDIR_I2C}
{\xe \v NDIR_I2C\:NDIR_I2C}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
NDIR_I2C::NDIR_I2C (uint8_t  {\i i2c_addr})}}
\par
{\bkmkstart AAAAAAABEO}
{\bkmkend AAAAAAABEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file CoolNDIR_I2C.cpp.}\par
{
References i2c_addr.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v begin\:NDIR_I2C}
{\xe \v NDIR_I2C\:begin}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t NDIR_I2C::begin (void )}}
\par
{\bkmkstart AAAAAAABEP}
{\bkmkend AAAAAAABEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file CoolNDIR_I2C.cpp.}\par
{
References DLH, DLL, FCR, i2c_addr, IOCONTROL, LCR, measure(), WIRE, and write_register().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ddb/class_n_d_i_r___i2_c_acf82f3dcb41e75709a93f8b68d087a3c_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v measure\:NDIR_I2C}
{\xe \v NDIR_I2C\:measure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t NDIR_I2C::measure ()}}
\par
{\bkmkstart AAAAAAABEQ}
{\bkmkend AAAAAAABEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file CoolNDIR_I2C.cpp.}\par
{
References cmd_measure, FCR, i2c_addr, parse(), receive(), send(), and write_register().}\par
{
Referenced by begin().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ddb/class_n_d_i_r___i2_c_ab8f50d38501d498b802b822bd4844ede_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ddb/class_n_d_i_r___i2_c_ab8f50d38501d498b802b822bd4844ede_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v send\:NDIR_I2C}
{\xe \v NDIR_I2C\:send}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t NDIR_I2C::send (uint8_t *  {\i pdata}, uint8_t  {\i n}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABER}
{\bkmkend AAAAAAABER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 151 of file CoolNDIR_I2C.cpp.}\par
{
References read_register(), THR, TXLVL, and write_register().}\par
{
Referenced by measure().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ddb/class_n_d_i_r___i2_c_aab0c04c2b7d08e99d12af044df179f0c_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ddb/class_n_d_i_r___i2_c_aab0c04c2b7d08e99d12af044df179f0c_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v receive\:NDIR_I2C}
{\xe \v NDIR_I2C\:receive}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t NDIR_I2C::receive (uint8_t *  {\i pbuf}, uint8_t  {\i n}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABES}
{\bkmkend AAAAAAABES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 166 of file CoolNDIR_I2C.cpp.}\par
{
References i2c_addr, read_register(), RECEIVE_TIMEOUT, RHR, RXLVL, and WIRE.}\par
{
Referenced by measure().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ddb/class_n_d_i_r___i2_c_aa6d2b8dd287f9c9015461cebb18f9abc_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ddb/class_n_d_i_r___i2_c_aa6d2b8dd287f9c9015461cebb18f9abc_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v read_register\:NDIR_I2C}
{\xe \v NDIR_I2C\:read_register}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t NDIR_I2C::read_register (uint8_t  {\i reg_addr}, uint8_t *  {\i pval}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABET}
{\bkmkend AAAAAAABET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 208 of file CoolNDIR_I2C.cpp.}\par
{
References i2c_addr, and WIRE.}\par
{
Referenced by receive(), and send().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ddb/class_n_d_i_r___i2_c_aa72058e6e7c6174b14466fee4b2df1e0_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v write_register\:NDIR_I2C}
{\xe \v NDIR_I2C\:write_register}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t NDIR_I2C::write_register (uint8_t  {\i reg_addr}, uint8_t *  {\i pdata}, uint8_t  {\i n}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEU}
{\bkmkend AAAAAAABEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 228 of file CoolNDIR_I2C.cpp.}\par
{
References i2c_addr, and WIRE.}\par
{
Referenced by begin(), measure(), send(), and write_register().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ddb/class_n_d_i_r___i2_c_a5de6a044b00e985f035edca07521e319_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v write_register\:NDIR_I2C}
{\xe \v NDIR_I2C\:write_register}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t NDIR_I2C::write_register (uint8_t  {\i reg_addr}, uint8_t  {\i val}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEV}
{\bkmkend AAAAAAABEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 248 of file CoolNDIR_I2C.cpp.}\par
{
References write_register().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ddb/class_n_d_i_r___i2_c_a8ad2a76f9866b0a1f34810a147b4b20d_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v parse\:NDIR_I2C}
{\xe \v NDIR_I2C\:parse}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t NDIR_I2C::parse (uint8_t *  {\i pbuf}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEW}
{\bkmkend AAAAAAABEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 133 of file CoolNDIR_I2C.cpp.}\par
{
References ppm.}\par
{
Referenced by measure().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/ddb/class_n_d_i_r___i2_c_a907b756fc9244c7398b7d187b73cde94_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v i2c_addr\:NDIR_I2C}
{\xe \v NDIR_I2C\:i2c_addr}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t NDIR_I2C::i2c_addr}}
\par
{\bkmkstart AAAAAAABEX}
{\bkmkend AAAAAAABEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file CoolNDIR_I2C.h.}\par
{
Referenced by begin(), measure(), NDIR_I2C(), read_register(), receive(), and write_register().}\par
}
{\xe \v ppm\:NDIR_I2C}
{\xe \v NDIR_I2C\:ppm}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint32_t NDIR_I2C::ppm}}
\par
{\bkmkstart AAAAAAABEY}
{\bkmkend AAAAAAABEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file CoolNDIR_I2C.h.}\par
{
Referenced by parse().}\par
}
{\xe \v cmd_measure\:NDIR_I2C}
{\xe \v NDIR_I2C\:cmd_measure}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t NDIR_I2C::cmd_measure = \{0xFF,0x01,0x9C,0x00,0x00,0x00,0x00,0x00,0x63\}{\f2 [static]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABEZ}
{\bkmkend AAAAAAABEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file CoolNDIR_I2C.h.}\par
{
Referenced by measure().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolNDIR_I2C.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b CoolNDIR_I2C.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WiFiManager Class Reference\par \pard\plain 
{\tc\tcl2 \v WiFiManager}
{\xe \v WiFiManager}
{\bkmkstart AAAAAAABFA}
{\bkmkend AAAAAAABFA}
\par
{
{\f2 #include <WiFiManagerReadFileButton.h>}}\par
Collaboration diagram for WiFiManager:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d8d/class_wi_fi_manager__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WiFiManager} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b autoConnect} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b autoConnect} (char const *apName, char const *apPassword=NULL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b startConfigPortal} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b startConfigPortal} (char const *apName, char const *apPassword=NULL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getConfigPortalSSID} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b resetSettings} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setConfigPortalTimeout} (unsigned long seconds)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setTimeout} (unsigned long seconds)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setConnectTimeout} (unsigned long seconds)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setDebugOutput} (boolean debug)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setMinimumSignalQuality} (int quality=8)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAPStaticIPConfig} (IPAddress ip, IPAddress gw, IPAddress sn)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSTAStaticIPConfig} (IPAddress ip, IPAddress gw, IPAddress sn)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setAPCallback} (void(*func)({\b WiFiManager} *))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setSaveConfigCallback} (void(*func)(void))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b addParameter} ({\b WiFiManagerParameter} *p)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setBreakAfterConfig} (boolean shouldBreak)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setCustomHeadElement} (const char *element)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setRemoveDuplicateAPs} (boolean removeDuplicates)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b setupConfigPortal} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b startWPS} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b connectWifi} (String ssid, String pass)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
uint8_t {\b waitForConnectResult} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleRoot} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleWifi} (boolean scan)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleWifiSave} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleInfo} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleReset} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handleNotFound} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b handle204} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
bool {\b handleFileRead} (String path)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b captivePortal} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b getContentType} (String filename)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getRSSIasQuality} (int RSSI)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b isIp} (String str)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b toStringIp} (IPAddress ip)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<typename Generic > void {\b DEBUG_WM} (Generic text)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
template<class T > auto {\b optionalIPFromString} (T *obj, const char *s) -> decltype(obj->fromString(s))\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
auto {\b optionalIPFromString} (...) -> bool\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::unique_ptr< DNSServer > {\b dnsServer}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
std::unique_ptr< ESP8266WebServer > {\b server}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b _apName} = "no-net"\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b _apPassword} = NULL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b _ssid} = ""\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
String {\b _pass} = ""\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b _configPortalTimeout} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b _connectTimeout} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
unsigned long {\b _configPortalStart} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b _ap_static_ip}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b _ap_static_gw}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b _ap_static_sn}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b _sta_static_ip}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b _sta_static_gw}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
IPAddress {\b _sta_static_sn}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b _paramsCount} = 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b _minimumQuality} = -1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b _removeDuplicateAPs} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b _shouldBreakAfterConfig} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b _tryWPS} = false\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b _customHeadElement} = ""\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b status} = WL_IDLE_STATUS\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const byte {\b DNS_PORT} = 53\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b connect}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
boolean {\b _debug} = true\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void(* {\b _apcallback} )({\b WiFiManager} *) = NULL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void(* {\b _savecallback} )(void) = NULL\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WiFiManagerParameter} * {\b _params} [{\b WIFI_MANAGER_MAX_PARAMS}]\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 67 of file WiFiManagerReadFileButton.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v WiFiManager\:WiFiManager}
{\xe \v WiFiManager\:WiFiManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiManager::WiFiManager ()}}
\par
{\bkmkstart AAAAAAABFB}
{\bkmkend AAAAAAABFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file WiFiManagerReadFileButton.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v autoConnect\:WiFiManager}
{\xe \v WiFiManager\:autoConnect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean WiFiManager::autoConnect ()}}
\par
{\bkmkstart AAAAAAABFC}
{\bkmkend AAAAAAABFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 129 of file WiFiManagerReadFileButton.cpp.}\par
{
Referenced by CoolWifi::connectAP().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_ae3cdfa6b02edcfe63d7da4f696b62136_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v autoConnect\:WiFiManager}
{\xe \v WiFiManager\:autoConnect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean WiFiManager::autoConnect (char const *  {\i apName}, char const *  {\i apPassword} = {\f2 NULL})}}
\par
{\bkmkstart AAAAAAABFD}
{\bkmkend AAAAAAABFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 134 of file WiFiManagerReadFileButton.cpp.}\par
{
References connectWifi(), DEBUG_WM(), and startConfigPortal().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_ab1d094034e5e3e36e2e1b3624edad469_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v startConfigPortal\:WiFiManager}
{\xe \v WiFiManager\:startConfigPortal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean WiFiManager::startConfigPortal ()}}
\par
{\bkmkstart AAAAAAABFE}
{\bkmkend AAAAAAABFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 155 of file WiFiManagerReadFileButton.cpp.}\par
{
Referenced by autoConnect().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_ad781751307f7f623956126096a09a545_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v startConfigPortal\:WiFiManager}
{\xe \v WiFiManager\:startConfigPortal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean WiFiManager::startConfigPortal (char const *  {\i apName}, char const *  {\i apPassword} = {\f2 NULL})}}
\par
{\bkmkstart AAAAAAABFF}
{\bkmkend AAAAAAABFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 160 of file WiFiManagerReadFileButton.cpp.}\par
{
References _apcallback, _apName, _apPassword, _configPortalStart, _configPortalTimeout, _pass, _savecallback, _shouldBreakAfterConfig, _ssid, connect, connectWifi(), DEBUG_WM(), dnsServer, server, and setupConfigPortal().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_afaca5021edffb4d9a5bd39f7b0f7a686_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getConfigPortalSSID\:WiFiManager}
{\xe \v WiFiManager\:getConfigPortalSSID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String WiFiManager::getConfigPortalSSID ()}}
\par
{\bkmkstart AAAAAAABFG}
{\bkmkend AAAAAAABFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 314 of file WiFiManagerReadFileButton.cpp.}\par
{
References _apName.}\par
}
{\xe \v resetSettings\:WiFiManager}
{\xe \v WiFiManager\:resetSettings}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::resetSettings ()}}
\par
{\bkmkstart AAAAAAABFH}
{\bkmkend AAAAAAABFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 318 of file WiFiManagerReadFileButton.cpp.}\par
{
References DEBUG_WM().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a0027749816b6c66bc845d7c5db760a33_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setConfigPortalTimeout\:WiFiManager}
{\xe \v WiFiManager\:setConfigPortalTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setConfigPortalTimeout (unsigned long  {\i seconds})}}
\par
{\bkmkstart AAAAAAABFI}
{\bkmkend AAAAAAABFI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 328 of file WiFiManagerReadFileButton.cpp.}\par
{
References _configPortalTimeout.}\par
{
Referenced by setTimeout().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a904006cb4d2c769e93bfdef336853766_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setTimeout\:WiFiManager}
{\xe \v WiFiManager\:setTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setTimeout (unsigned long  {\i seconds})}}
\par
{\bkmkstart AAAAAAABFJ}
{\bkmkend AAAAAAABFJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 324 of file WiFiManagerReadFileButton.cpp.}\par
{
References setConfigPortalTimeout().}\par
{
Referenced by CoolWifi::connectAP().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_aa6493d59c284ff245edb767ff684756d_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_aa6493d59c284ff245edb767ff684756d_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setConnectTimeout\:WiFiManager}
{\xe \v WiFiManager\:setConnectTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setConnectTimeout (unsigned long  {\i seconds})}}
\par
{\bkmkstart AAAAAAABFK}
{\bkmkend AAAAAAABFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 332 of file WiFiManagerReadFileButton.cpp.}\par
{
References _connectTimeout.}\par
}
{\xe \v setDebugOutput\:WiFiManager}
{\xe \v WiFiManager\:setDebugOutput}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setDebugOutput (boolean  {\i debug})}}
\par
{\bkmkstart AAAAAAABFL}
{\bkmkend AAAAAAABFL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 336 of file WiFiManagerReadFileButton.cpp.}\par
{
References _debug.}\par
}
{\xe \v setMinimumSignalQuality\:WiFiManager}
{\xe \v WiFiManager\:setMinimumSignalQuality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setMinimumSignalQuality (int  {\i quality} = {\f2 8})}}
\par
{\bkmkstart AAAAAAABFM}
{\bkmkend AAAAAAABFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 352 of file WiFiManagerReadFileButton.cpp.}\par
{
References _minimumQuality.}\par
}
{\xe \v setAPStaticIPConfig\:WiFiManager}
{\xe \v WiFiManager\:setAPStaticIPConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setAPStaticIPConfig (IPAddress  {\i ip}, IPAddress  {\i gw}, IPAddress  {\i sn})}}
\par
{\bkmkstart AAAAAAABFN}
{\bkmkend AAAAAAABFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 340 of file WiFiManagerReadFileButton.cpp.}\par
{
References _ap_static_gw, _ap_static_ip, and _ap_static_sn.}\par
}
{\xe \v setSTAStaticIPConfig\:WiFiManager}
{\xe \v WiFiManager\:setSTAStaticIPConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setSTAStaticIPConfig (IPAddress  {\i ip}, IPAddress  {\i gw}, IPAddress  {\i sn})}}
\par
{\bkmkstart AAAAAAABFO}
{\bkmkend AAAAAAABFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 346 of file WiFiManagerReadFileButton.cpp.}\par
{
References _sta_static_gw, _sta_static_ip, and _sta_static_sn.}\par
}
{\xe \v setAPCallback\:WiFiManager}
{\xe \v WiFiManager\:setAPCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setAPCallback (void(*)({\b WiFiManager} *)  {\i func})}}
\par
{\bkmkstart AAAAAAABFP}
{\bkmkend AAAAAAABFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 758 of file WiFiManagerReadFileButton.cpp.}\par
{
References _apcallback.}\par
}
{\xe \v setSaveConfigCallback\:WiFiManager}
{\xe \v WiFiManager\:setSaveConfigCallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setSaveConfigCallback (void(*)(void)  {\i func})}}
\par
{\bkmkstart AAAAAAABFQ}
{\bkmkend AAAAAAABFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 763 of file WiFiManagerReadFileButton.cpp.}\par
{
References _savecallback.}\par
}
{\xe \v addParameter\:WiFiManager}
{\xe \v WiFiManager\:addParameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::addParameter ({\b WiFiManagerParameter} *  {\i p})}}
\par
{\bkmkstart AAAAAAABFR}
{\bkmkend AAAAAAABFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file WiFiManagerReadFileButton.cpp.}\par
{
References _params, _paramsCount, DEBUG_WM(), and WiFiManagerParameter::getID().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a62907428e5874de097d83c33ef46c80d_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setBreakAfterConfig\:WiFiManager}
{\xe \v WiFiManager\:setBreakAfterConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setBreakAfterConfig (boolean  {\i shouldBreak})}}
\par
{\bkmkstart AAAAAAABFS}
{\bkmkend AAAAAAABFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 356 of file WiFiManagerReadFileButton.cpp.}\par
{
References _shouldBreakAfterConfig.}\par
}
{\xe \v setCustomHeadElement\:WiFiManager}
{\xe \v WiFiManager\:setCustomHeadElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setCustomHeadElement (const char *  {\i element})}}
\par
{\bkmkstart AAAAAAABFT}
{\bkmkend AAAAAAABFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 768 of file WiFiManagerReadFileButton.cpp.}\par
{
References _customHeadElement.}\par
}
{\xe \v setRemoveDuplicateAPs\:WiFiManager}
{\xe \v WiFiManager\:setRemoveDuplicateAPs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setRemoveDuplicateAPs (boolean  {\i removeDuplicates})}}
\par
{\bkmkstart AAAAAAABFU}
{\bkmkend AAAAAAABFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 773 of file WiFiManagerReadFileButton.cpp.}\par
{
References _removeDuplicateAPs.}\par
{
Referenced by CoolWifi::connectAP().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a4dd1dbf4f22900f226a3897b88155212_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v setupConfigPortal\:WiFiManager}
{\xe \v WiFiManager\:setupConfigPortal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::setupConfigPortal (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFV}
{\bkmkend AAAAAAABFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file WiFiManagerReadFileButton.cpp.}\par
{
References _ap_static_gw, _ap_static_ip, _ap_static_sn, _apName, _apPassword, _configPortalStart, DEBUG_WM(), DNS_PORT, dnsServer, handleFileRead(), handleInfo(), handleNotFound(), handleReset(), handleRoot(), handleWifi(), handleWifiSave(), and server.}\par
{
Referenced by startConfigPortal().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a1743325d0dd86d011df96b22d2a0ddd6_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a1743325d0dd86d011df96b22d2a0ddd6_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v startWPS\:WiFiManager}
{\xe \v WiFiManager\:startWPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::startWPS (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFW}
{\bkmkend AAAAAAABFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 288 of file WiFiManagerReadFileButton.cpp.}\par
{
References DEBUG_WM().}\par
{
Referenced by connectWifi().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_abcc403fc26a47f7a111d1271f1d0869e_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_abcc403fc26a47f7a111d1271f1d0869e_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v connectWifi\:WiFiManager}
{\xe \v WiFiManager\:connectWifi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiManager::connectWifi (String  {\i ssid}, String  {\i pass}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFX}
{\bkmkend AAAAAAABFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 222 of file WiFiManagerReadFileButton.cpp.}\par
{
References _sta_static_gw, _sta_static_ip, _sta_static_sn, _tryWPS, DEBUG_WM(), startWPS(), and waitForConnectResult().}\par
{
Referenced by autoConnect(), and startConfigPortal().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_ae0ae27b5543b47585728c084c3bbdca7_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_ae0ae27b5543b47585728c084c3bbdca7_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v waitForConnectResult\:WiFiManager}
{\xe \v WiFiManager\:waitForConnectResult}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
uint8_t WiFiManager::waitForConnectResult (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFY}
{\bkmkend AAAAAAABFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 265 of file WiFiManagerReadFileButton.cpp.}\par
{
References _connectTimeout, DEBUG_WM(), and status.}\par
{
Referenced by connectWifi().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a89a3f33997aa662ad223d6c150c1eede_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a89a3f33997aa662ad223d6c150c1eede_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleRoot\:WiFiManager}
{\xe \v WiFiManager\:handleRoot}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::handleRoot (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABFZ}
{\bkmkend AAAAAAABFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle root or redirect to captive portal \par
}{
Definition at line 361 of file WiFiManagerReadFileButton.cpp.}\par
{
References _apName, _customHeadElement, captivePortal(), DEBUG_WM(), and server.}\par
{
Referenced by setupConfigPortal().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a47e4c7df7478f690c53ff9f5125c9760_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a47e4c7df7478f690c53ff9f5125c9760_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleWifi\:WiFiManager}
{\xe \v WiFiManager\:handleWifi}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::handleWifi (boolean  {\i scan}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGA}
{\bkmkend AAAAAAABGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Wifi config page handler \par
}{
Definition at line 385 of file WiFiManagerReadFileButton.cpp.}\par
{
References _customHeadElement, _minimumQuality, _params, _paramsCount, _removeDuplicateAPs, _sta_static_gw, _sta_static_ip, _sta_static_sn, DEBUG_WM(), WiFiManagerParameter::getCustomHTML(), getRSSIasQuality(), and server.}\par
{
Referenced by setupConfigPortal().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a57a9048175c1918340ab9d0a2c53601f_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a57a9048175c1918340ab9d0a2c53601f_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleWifiSave\:WiFiManager}
{\xe \v WiFiManager\:handleWifiSave}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::handleWifiSave (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGB}
{\bkmkend AAAAAAABGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle the WLAN save form and redirect to WLAN config page again \par
}{
Definition at line 540 of file WiFiManagerReadFileButton.cpp.}\par
{
References _customHeadElement, _params, _paramsCount, _pass, _ssid, _sta_static_gw, _sta_static_ip, _sta_static_sn, connect, DEBUG_WM(), optionalIPFromString(), and server.}\par
{
Referenced by setupConfigPortal().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a2a8c2b60aa86dfdeab8a1a90f7122dc7_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a2a8c2b60aa86dfdeab8a1a90f7122dc7_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleInfo\:WiFiManager}
{\xe \v WiFiManager\:handleInfo}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::handleInfo (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGC}
{\bkmkend AAAAAAABGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle the info page \par
}{
Definition at line 598 of file WiFiManagerReadFileButton.cpp.}\par
{
References _customHeadElement, DEBUG_WM(), and server.}\par
{
Referenced by setupConfigPortal().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_ac35e46661f8a209d84bba62d9aa43a35_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_ac35e46661f8a209d84bba62d9aa43a35_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleReset\:WiFiManager}
{\xe \v WiFiManager\:handleReset}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::handleReset (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGD}
{\bkmkend AAAAAAABGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle the reset page \par
}{
Definition at line 638 of file WiFiManagerReadFileButton.cpp.}\par
{
References _customHeadElement, DEBUG_WM(), and server.}\par
{
Referenced by setupConfigPortal().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a94fb1a8fcfbd0d02714c69138bf72f9c_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a94fb1a8fcfbd0d02714c69138bf72f9c_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handleNotFound\:WiFiManager}
{\xe \v WiFiManager\:handleNotFound}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::handleNotFound (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGE}
{\bkmkend AAAAAAABGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 722 of file WiFiManagerReadFileButton.cpp.}\par
{
References captivePortal(), and server.}\par
{
Referenced by setupConfigPortal().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a7d01f7de3e4b76acdabffac79fa3d0ab_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a7d01f7de3e4b76acdabffac79fa3d0ab_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v handle204\:WiFiManager}
{\xe \v WiFiManager\:handle204}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManager::handle204 (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGF}
{\bkmkend AAAAAAABGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
}
{\xe \v handleFileRead\:WiFiManager}
{\xe \v WiFiManager\:handleFileRead}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
bool WiFiManager::handleFileRead (String  {\i path}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGG}
{\bkmkend AAAAAAABGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Handle the read file button \par
}{
Definition at line 676 of file WiFiManagerReadFileButton.cpp.}\par
{
References DEBUG_WM(), getContentType(), and server.}\par
{
Referenced by setupConfigPortal().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a9e802fa4ca834a622f058a7176f47806_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a9e802fa4ca834a622f058a7176f47806_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v captivePortal\:WiFiManager}
{\xe \v WiFiManager\:captivePortal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean WiFiManager::captivePortal (){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGH}
{\bkmkend AAAAAAABGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Redirect to captive portal if we got a request for another domain. Return true in that case so the page handler do not try to handle the request again. \par
}{
Definition at line 746 of file WiFiManagerReadFileButton.cpp.}\par
{
References DEBUG_WM(), isIp(), server, and toStringIp().}\par
{
Referenced by handleNotFound(), and handleRoot().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a4ef4298deb224212e5242c456669a973_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a4ef4298deb224212e5242c456669a973_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getContentType\:WiFiManager}
{\xe \v WiFiManager\:getContentType}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String WiFiManager::getContentType (String  {\i filename}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGI}
{\bkmkend AAAAAAABGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 821 of file WiFiManagerReadFileButton.cpp.}\par
{
References server.}\par
{
Referenced by handleFileRead().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a40f123fd290c3e331c9785d19a88f3b8_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getRSSIasQuality\:WiFiManager}
{\xe \v WiFiManager\:getRSSIasQuality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiManager::getRSSIasQuality (int  {\i RSSI}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGJ}
{\bkmkend AAAAAAABGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 787 of file WiFiManagerReadFileButton.cpp.}\par
{
Referenced by handleWifi().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_ae71cfd6bd70ada2ca02e1d20b152d0e5_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v isIp\:WiFiManager}
{\xe \v WiFiManager\:isIp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean WiFiManager::isIp (String  {\i str}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGK}
{\bkmkend AAAAAAABGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Is this an IP? \par
}{
Definition at line 801 of file WiFiManagerReadFileButton.cpp.}\par
{
Referenced by captivePortal().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a9c78a8774f746ec22a99d03a53baa607_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v toStringIp\:WiFiManager}
{\xe \v WiFiManager\:toStringIp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String WiFiManager::toStringIp (IPAddress  {\i ip}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGL}
{\bkmkend AAAAAAABGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
IP to String? \par
}{
Definition at line 812 of file WiFiManagerReadFileButton.cpp.}\par
{
Referenced by captivePortal().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a8dfd64cefecbdf26242b16eca335c20b_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v DEBUG_WM\:WiFiManager}
{\xe \v WiFiManager\:DEBUG_WM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<typename Generic > void WiFiManager::DEBUG_WM (Generic  {\i text}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGM}
{\bkmkend AAAAAAABGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 780 of file WiFiManagerReadFileButton.cpp.}\par
{
References _debug.}\par
{
Referenced by addParameter(), autoConnect(), captivePortal(), connectWifi(), handleFileRead(), handleInfo(), handleReset(), handleRoot(), handleWifi(), handleWifiSave(), optionalIPFromString(), resetSettings(), setupConfigPortal(), startConfigPortal(), startWPS(), and waitForConnectResult().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_ae5f595c670ccbcf9a191baf50f5c7c26_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v optionalIPFromString\:WiFiManager}
{\xe \v WiFiManager\:optionalIPFromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
template<class T > auto WiFiManager::optionalIPFromString (T *  {\i obj}, const char *  {\i s}) -> decltype(  obj->fromString(s)  ) {\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGN}
{\bkmkend AAAAAAABGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 192 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by handleWifiSave().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_a6a94f08eb43e0871932556a4ccfa11b7_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v optionalIPFromString\:WiFiManager}
{\xe \v WiFiManager\:optionalIPFromString}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
auto WiFiManager::optionalIPFromString (  {\i ...}) -> bool {\f2 [inline]}, {\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGO}
{\bkmkend AAAAAAABGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 195 of file WiFiManagerReadFileButton.h.}\par
{
References DEBUG_WM().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/dc8/class_wi_fi_manager_aa248b818eee0423b14a88c637f7c4637_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v dnsServer\:WiFiManager}
{\xe \v WiFiManager\:dnsServer}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::unique_ptr<DNSServer> WiFiManager::dnsServer{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGP}
{\bkmkend AAAAAAABGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 117 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setupConfigPortal(), and startConfigPortal().}\par
}
{\xe \v server\:WiFiManager}
{\xe \v WiFiManager\:server}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
std::unique_ptr<ESP8266WebServer> WiFiManager::server{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGQ}
{\bkmkend AAAAAAABGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 118 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by captivePortal(), getContentType(), handleFileRead(), handleInfo(), handleNotFound(), handleReset(), handleRoot(), handleWifi(), handleWifiSave(), setupConfigPortal(), and startConfigPortal().}\par
}
{\xe \v _apName\:WiFiManager}
{\xe \v WiFiManager\:_apName}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* WiFiManager::_apName = "no-net"{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGR}
{\bkmkend AAAAAAABGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 128 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by getConfigPortalSSID(), handleRoot(), setupConfigPortal(), and startConfigPortal().}\par
}
{\xe \v _apPassword\:WiFiManager}
{\xe \v WiFiManager\:_apPassword}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* WiFiManager::_apPassword = NULL{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGS}
{\bkmkend AAAAAAABGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 129 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setupConfigPortal(), and startConfigPortal().}\par
}
{\xe \v _ssid\:WiFiManager}
{\xe \v WiFiManager\:_ssid}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String WiFiManager::_ssid = ""{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGT}
{\bkmkend AAAAAAABGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by handleWifiSave(), and startConfigPortal().}\par
}
{\xe \v _pass\:WiFiManager}
{\xe \v WiFiManager\:_pass}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
String WiFiManager::_pass = ""{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGU}
{\bkmkend AAAAAAABGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 131 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by handleWifiSave(), and startConfigPortal().}\par
}
{\xe \v _configPortalTimeout\:WiFiManager}
{\xe \v WiFiManager\:_configPortalTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long WiFiManager::_configPortalTimeout = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGV}
{\bkmkend AAAAAAABGV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 132 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setConfigPortalTimeout(), and startConfigPortal().}\par
}
{\xe \v _connectTimeout\:WiFiManager}
{\xe \v WiFiManager\:_connectTimeout}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long WiFiManager::_connectTimeout = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGW}
{\bkmkend AAAAAAABGW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 133 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setConnectTimeout(), and waitForConnectResult().}\par
}
{\xe \v _configPortalStart\:WiFiManager}
{\xe \v WiFiManager\:_configPortalStart}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
unsigned long WiFiManager::_configPortalStart = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGX}
{\bkmkend AAAAAAABGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 134 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setupConfigPortal(), and startConfigPortal().}\par
}
{\xe \v _ap_static_ip\:WiFiManager}
{\xe \v WiFiManager\:_ap_static_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress WiFiManager::_ap_static_ip{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGY}
{\bkmkend AAAAAAABGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 136 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setAPStaticIPConfig(), and setupConfigPortal().}\par
}
{\xe \v _ap_static_gw\:WiFiManager}
{\xe \v WiFiManager\:_ap_static_gw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress WiFiManager::_ap_static_gw{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABGZ}
{\bkmkend AAAAAAABGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 137 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setAPStaticIPConfig(), and setupConfigPortal().}\par
}
{\xe \v _ap_static_sn\:WiFiManager}
{\xe \v WiFiManager\:_ap_static_sn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress WiFiManager::_ap_static_sn{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHA}
{\bkmkend AAAAAAABHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 138 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setAPStaticIPConfig(), and setupConfigPortal().}\par
}
{\xe \v _sta_static_ip\:WiFiManager}
{\xe \v WiFiManager\:_sta_static_ip}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress WiFiManager::_sta_static_ip{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHB}
{\bkmkend AAAAAAABHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 139 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by connectWifi(), handleWifi(), handleWifiSave(), and setSTAStaticIPConfig().}\par
}
{\xe \v _sta_static_gw\:WiFiManager}
{\xe \v WiFiManager\:_sta_static_gw}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress WiFiManager::_sta_static_gw{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHC}
{\bkmkend AAAAAAABHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 140 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by connectWifi(), handleWifi(), handleWifiSave(), and setSTAStaticIPConfig().}\par
}
{\xe \v _sta_static_sn\:WiFiManager}
{\xe \v WiFiManager\:_sta_static_sn}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
IPAddress WiFiManager::_sta_static_sn{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHD}
{\bkmkend AAAAAAABHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 141 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by connectWifi(), handleWifi(), handleWifiSave(), and setSTAStaticIPConfig().}\par
}
{\xe \v _paramsCount\:WiFiManager}
{\xe \v WiFiManager\:_paramsCount}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiManager::_paramsCount = 0{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHE}
{\bkmkend AAAAAAABHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by addParameter(), handleWifi(), and handleWifiSave().}\par
}
{\xe \v _minimumQuality\:WiFiManager}
{\xe \v WiFiManager\:_minimumQuality}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiManager::_minimumQuality = -1{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHF}
{\bkmkend AAAAAAABHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 144 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by handleWifi(), and setMinimumSignalQuality().}\par
}
{\xe \v _removeDuplicateAPs\:WiFiManager}
{\xe \v WiFiManager\:_removeDuplicateAPs}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean WiFiManager::_removeDuplicateAPs = true{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHG}
{\bkmkend AAAAAAABHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 145 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by handleWifi(), and setRemoveDuplicateAPs().}\par
}
{\xe \v _shouldBreakAfterConfig\:WiFiManager}
{\xe \v WiFiManager\:_shouldBreakAfterConfig}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean WiFiManager::_shouldBreakAfterConfig = false{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHH}
{\bkmkend AAAAAAABHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setBreakAfterConfig(), and startConfigPortal().}\par
}
{\xe \v _tryWPS\:WiFiManager}
{\xe \v WiFiManager\:_tryWPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean WiFiManager::_tryWPS = false{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHI}
{\bkmkend AAAAAAABHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 147 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by connectWifi().}\par
}
{\xe \v _customHeadElement\:WiFiManager}
{\xe \v WiFiManager\:_customHeadElement}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* WiFiManager::_customHeadElement = ""{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHJ}
{\bkmkend AAAAAAABHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 149 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by handleInfo(), handleReset(), handleRoot(), handleWifi(), handleWifiSave(), and setCustomHeadElement().}\par
}
{\xe \v status\:WiFiManager}
{\xe \v WiFiManager\:status}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiManager::status = WL_IDLE_STATUS{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHK}
{\bkmkend AAAAAAABHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 154 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by waitForConnectResult().}\par
}
{\xe \v DNS_PORT\:WiFiManager}
{\xe \v WiFiManager\:DNS_PORT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const byte WiFiManager::DNS_PORT = 53{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHL}
{\bkmkend AAAAAAABHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 173 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setupConfigPortal().}\par
}
{\xe \v connect\:WiFiManager}
{\xe \v WiFiManager\:connect}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean WiFiManager::connect{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHM}
{\bkmkend AAAAAAABHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 180 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by handleWifiSave(), and startConfigPortal().}\par
}
{\xe \v _debug\:WiFiManager}
{\xe \v WiFiManager\:_debug}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
boolean WiFiManager::_debug = true{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHN}
{\bkmkend AAAAAAABHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 181 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by DEBUG_WM(), and setDebugOutput().}\par
}
{\xe \v _apcallback\:WiFiManager}
{\xe \v WiFiManager\:_apcallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void(* WiFiManager::_apcallback) ({\b WiFiManager} *) = NULL{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHO}
{\bkmkend AAAAAAABHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 183 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setAPCallback(), and startConfigPortal().}\par
}
{\xe \v _savecallback\:WiFiManager}
{\xe \v WiFiManager\:_savecallback}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void(* WiFiManager::_savecallback) (void) = NULL{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHP}
{\bkmkend AAAAAAABHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 184 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by setSaveConfigCallback(), and startConfigPortal().}\par
}
{\xe \v _params\:WiFiManager}
{\xe \v WiFiManager\:_params}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
{\b WiFiManagerParameter}* WiFiManager::_params[{\b WIFI_MANAGER_MAX_PARAMS}]{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABHQ}
{\bkmkend AAAAAAABHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 186 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by addParameter(), handleWifi(), and handleWifiSave().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b WiFiManagerReadFileButton.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b WiFiManagerReadFileButton.cpp}\par
}\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WiFiManagerParameter Class Reference\par \pard\plain 
{\tc\tcl2 \v WiFiManagerParameter}
{\xe \v WiFiManagerParameter}
{\bkmkstart AAAAAAABHR}
{\bkmkend AAAAAAABHR}
\par
{
{\f2 #include <WiFiManagerReadFileButton.h>}}\par
Collaboration diagram for WiFiManagerParameter:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d83/class_wi_fi_manager_parameter__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Public Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WiFiManagerParameter} (const char *custom)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WiFiManagerParameter} (const char *id, const char *placeholder, const char *defaultValue, int length)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
{\b WiFiManagerParameter} (const char *id, const char *placeholder, const char *defaultValue, int length, const char *custom)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b getID} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b getValue} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b getPlaceholder} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b getValueLength} ()\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b getCustomHTML} ()\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Member Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
void {\b init} (const char *id, const char *placeholder, const char *defaultValue, int length, const char *custom)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Private Attributes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b _id}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b _placeholder}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
char * {\b _value}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
int {\b _length}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char * {\b _customHTML}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WiFiManager}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 43 of file WiFiManagerReadFileButton.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Constructor & Destructor Documentation\par
\pard\plain 
{\xe \v WiFiManagerParameter\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:WiFiManagerParameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiManagerParameter::WiFiManagerParameter (const char *  {\i custom})}}
\par
{\bkmkstart AAAAAAABHS}
{\bkmkend AAAAAAABHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 17 of file WiFiManagerReadFileButton.cpp.}\par
{
References _customHTML, _id, _length, _placeholder, and _value.}\par
}
{\xe \v WiFiManagerParameter\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:WiFiManagerParameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiManagerParameter::WiFiManagerParameter (const char *  {\i id}, const char *  {\i placeholder}, const char *  {\i defaultValue}, int  {\i length})}}
\par
{\bkmkstart AAAAAAABHT}
{\bkmkend AAAAAAABHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 26 of file WiFiManagerReadFileButton.cpp.}\par
{
References init().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d08/class_wi_fi_manager_parameter_a8e55ac907530d04ab60d30045e1382a1_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v WiFiManagerParameter\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:WiFiManagerParameter}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
WiFiManagerParameter::WiFiManagerParameter (const char *  {\i id}, const char *  {\i placeholder}, const char *  {\i defaultValue}, int  {\i length}, const char *  {\i custom})}}
\par
{\bkmkstart AAAAAAABHU}
{\bkmkend AAAAAAABHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file WiFiManagerReadFileButton.cpp.}\par
{
References init().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d08/class_wi_fi_manager_parameter_a45967e1d29d52f5fc8e47e99cb693b98_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Function Documentation\par
\pard\plain 
{\xe \v getID\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:getID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * WiFiManagerParameter::getID ()}}
\par
{\bkmkstart AAAAAAABHV}
{\bkmkend AAAAAAABHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file WiFiManagerReadFileButton.cpp.}\par
{
References _id.}\par
{
Referenced by WiFiManager::addParameter().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d08/class_wi_fi_manager_parameter_af57919615418fff788310ba9cc2664d8_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v getValue\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:getValue}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * WiFiManagerParameter::getValue ()}}
\par
{\bkmkstart AAAAAAABHW}
{\bkmkend AAAAAAABHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file WiFiManagerReadFileButton.cpp.}\par
{
References _value.}\par
}
{\xe \v getPlaceholder\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:getPlaceholder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * WiFiManagerParameter::getPlaceholder ()}}
\par
{\bkmkstart AAAAAAABHX}
{\bkmkend AAAAAAABHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file WiFiManagerReadFileButton.cpp.}\par
{
References _placeholder.}\par
}
{\xe \v getValueLength\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:getValueLength}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiManagerParameter::getValueLength ()}}
\par
{\bkmkstart AAAAAAABHY}
{\bkmkend AAAAAAABHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file WiFiManagerReadFileButton.cpp.}\par
{
References _length.}\par
}
{\xe \v getCustomHTML\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:getCustomHTML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char * WiFiManagerParameter::getCustomHTML ()}}
\par
{\bkmkstart AAAAAAABHZ}
{\bkmkend AAAAAAABHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file WiFiManagerReadFileButton.cpp.}\par
{
References _customHTML.}\par
{
Referenced by WiFiManager::handleWifi().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d08/class_wi_fi_manager_parameter_a596273c189eb40107500cee3ad31b13b_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v init\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:init}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
void WiFiManagerParameter::init (const char *  {\i id}, const char *  {\i placeholder}, const char *  {\i defaultValue}, int  {\i length}, const char *  {\i custom}){\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIA}
{\bkmkend AAAAAAABIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file WiFiManagerReadFileButton.cpp.}\par
{
References _customHTML, _id, _length, _placeholder, and _value.}\par
{
Referenced by WiFiManagerParameter().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d08/class_wi_fi_manager_parameter_a137b764027d3851a428f3ab185a5660f_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Friends And Related Function Documentation\par
\pard\plain 
{\xe \v WiFiManager\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:WiFiManager}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
friend class {\b WiFiManager}{\f2 [friend]}}}
\par
{\bkmkstart AAAAAAABIB}
{\bkmkend AAAAAAABIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file WiFiManagerReadFileButton.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Member Data Documentation\par
\pard\plain 
{\xe \v _id\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:_id}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* WiFiManagerParameter::_id{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIC}
{\bkmkend AAAAAAABIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by getID(), init(), and WiFiManagerParameter().}\par
}
{\xe \v _placeholder\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:_placeholder}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* WiFiManagerParameter::_placeholder{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABID}
{\bkmkend AAAAAAABID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by getPlaceholder(), init(), and WiFiManagerParameter().}\par
}
{\xe \v _value\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:_value}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
char* WiFiManagerParameter::_value{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIE}
{\bkmkend AAAAAAABIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by getValue(), init(), and WiFiManagerParameter().}\par
}
{\xe \v _length\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:_length}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
int WiFiManagerParameter::_length{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIF}
{\bkmkend AAAAAAABIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by getValueLength(), init(), and WiFiManagerParameter().}\par
}
{\xe \v _customHTML\:WiFiManagerParameter}
{\xe \v WiFiManagerParameter\:_customHTML}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char* WiFiManagerParameter::_customHTML{\f2 [private]}}}
\par
{\bkmkstart AAAAAAABIG}
{\bkmkend AAAAAAABIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file WiFiManagerReadFileButton.h.}\par
{
Referenced by getCustomHTML(), init(), and WiFiManagerParameter().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
The documentation for this class was generated from the following files:{\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b WiFiManagerReadFileButton.h}\par
\pard\plain \s81\fi-360\li720\widctlpar\jclisttab\tx720{\*\pn \pnlvlbody\ilvl0\ls2\pnrnot0\pndec }\ls2\adjustright \fs20\cgrid 
{\b WiFiManagerReadFileButton.cpp}\par
}
\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
File Documentation{\tc \v File Documentation}
\par \pard\plain 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolAdafruit_ADS1015.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolAdafruit_ADS1015.cpp}
{\xe \v CoolAdafruit_ADS1015.cpp}
{\bkmkstart AAAAAAAAAA}
{\bkmkend AAAAAAAAAA}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
{\f2 #include "CoolAdafruit_ADS1015.h"}\par
{\f2 #include <Wire.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolAdafruit_ADS1015.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d37/_cool_adafruit___a_d_s1015_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint8_t {\b i2cread} (void)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract away platform differences in Arduino wire library. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b i2cwrite} (uint8_t x)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract away platform differences in Arduino wire library. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static void {\b writeRegister} (uint8_t i2cAddress, uint8_t reg, uint16_t value)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes 16-bits to the specified destination register. }{
}\par
}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
static uint16_t {\b readRegister} (uint8_t i2cAddress, uint8_t reg)\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes 16-bits to the specified destination register. }{
}\par
}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v i2cread\:CoolAdafruit_ADS1015.cpp}
{\xe \v CoolAdafruit_ADS1015.cpp\:i2cread}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static uint8_t i2cread (void ){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAB}
{\bkmkend AAAAAAAAAB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract away platform differences in Arduino wire library. }}\par
{
Definition at line 36 of file CoolAdafruit_ADS1015.cpp.}\par
{
Referenced by readRegister().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/daa/_cool_adafruit___a_d_s1015_8cpp_af89e2442d757f6ec8100c473022f6701_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v i2cwrite\:CoolAdafruit_ADS1015.cpp}
{\xe \v CoolAdafruit_ADS1015.cpp\:i2cwrite}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void i2cwrite (uint8_t  {\i x}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAC}
{\bkmkend AAAAAAAAAC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Abstract away platform differences in Arduino wire library. }}\par
{
Definition at line 49 of file CoolAdafruit_ADS1015.cpp.}\par
{
Referenced by readRegister(), and writeRegister().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/daa/_cool_adafruit___a_d_s1015_8cpp_a6db5edba66e20bba6d5b421c2789af54_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v writeRegister\:CoolAdafruit_ADS1015.cpp}
{\xe \v CoolAdafruit_ADS1015.cpp\:writeRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static void writeRegister (uint8_t  {\i i2cAddress}, uint8_t  {\i reg}, uint16_t  {\i value}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAD}
{\bkmkend AAAAAAAAAD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes 16-bits to the specified destination register. }}\par
{
Definition at line 62 of file CoolAdafruit_ADS1015.cpp.}\par
{
References i2cwrite().}\par
{
Referenced by Adafruit_ADS1015::readADC_Differential_0_1(), Adafruit_ADS1015::readADC_Differential_2_3(), Adafruit_ADS1015::readADC_SingleEnded(), and Adafruit_ADS1015::startComparator_SingleEnded().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/daa/_cool_adafruit___a_d_s1015_8cpp_a00ef55774dfb93dd0a7bf561d8451b71_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/daa/_cool_adafruit___a_d_s1015_8cpp_a00ef55774dfb93dd0a7bf561d8451b71_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
{\xe \v readRegister\:CoolAdafruit_ADS1015.cpp}
{\xe \v CoolAdafruit_ADS1015.cpp\:readRegister}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
static uint16_t readRegister (uint8_t  {\i i2cAddress}, uint8_t  {\i reg}){\f2 [static]}}}
\par
{\bkmkstart AAAAAAAAAE}
{\bkmkend AAAAAAAAAE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Writes 16-bits to the specified destination register. }}\par
{
Definition at line 75 of file CoolAdafruit_ADS1015.cpp.}\par
{
References ADS1015_REG_POINTER_CONVERT, i2cread(), and i2cwrite().}\par
{
Referenced by Adafruit_ADS1015::getLastConversionResults(), Adafruit_ADS1015::readADC_Differential_0_1(), Adafruit_ADS1015::readADC_Differential_2_3(), and Adafruit_ADS1015::readADC_SingleEnded().}\par
Here is the call graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/daa/_cool_adafruit___a_d_s1015_8cpp_a319539381b7551b2f83a92b0b596e97d_cgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/daa/_cool_adafruit___a_d_s1015_8cpp_a319539381b7551b2f83a92b0b596e97d_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolAdafruit_ADS1015.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h}
{\bkmkstart AAAAAAAAAF}
{\bkmkend AAAAAAAAAF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolAdafruit_ADS1015.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d7/d26/_cool_adafruit___a_d_s1015_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/db3/_cool_adafruit___a_d_s1015_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Adafruit_ADS1015}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Adafruit_ADS1115}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_ADDRESS}\~ (0x48)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_CONVERSIONDELAY}\~ (1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1115_CONVERSIONDELAY}\~ (8)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_POINTER_MASK}\~ (0x03)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_POINTER_CONVERT}\~ (0x00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_POINTER_CONFIG}\~ (0x01)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_POINTER_LOWTHRESH}\~ (0x02)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_POINTER_HITHRESH}\~ (0x03)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_OS_MASK}\~ (0x8000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_OS_SINGLE}\~ (0x8000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_OS_BUSY}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_OS_NOTBUSY}\~ (0x8000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MUX_MASK}\~ (0x7000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MUX_DIFF_0_1}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MUX_DIFF_0_3}\~ (0x1000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MUX_DIFF_1_3}\~ (0x2000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MUX_DIFF_2_3}\~ (0x3000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MUX_SINGLE_0}\~ (0x4000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MUX_SINGLE_1}\~ (0x5000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MUX_SINGLE_2}\~ (0x6000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MUX_SINGLE_3}\~ (0x7000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_PGA_MASK}\~ (0x0E00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_PGA_6_144V}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_PGA_4_096V}\~ (0x0200)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_PGA_2_048V}\~ (0x0400)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_PGA_1_024V}\~ (0x0600)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_PGA_0_512V}\~ (0x0800)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_PGA_0_256V}\~ (0x0A00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MODE_MASK}\~ (0x0100)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MODE_CONTIN}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_MODE_SINGLE}\~ (0x0100)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_DR_MASK}\~ (0x00E0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_DR_128SPS}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_DR_250SPS}\~ (0x0020)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_DR_490SPS}\~ (0x0040)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_DR_920SPS}\~ (0x0060)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_DR_1600SPS}\~ (0x0080)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_DR_2400SPS}\~ (0x00A0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_DR_3300SPS}\~ (0x00C0)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CMODE_MASK}\~ (0x0010)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CMODE_TRAD}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CMODE_WINDOW}\~ (0x0010)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CPOL_MASK}\~ (0x0008)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CPOL_ACTVLOW}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CPOL_ACTVHI}\~ (0x0008)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CLAT_MASK}\~ (0x0004)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CLAT_NONLAT}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CLAT_LATCH}\~ (0x0004)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CQUE_MASK}\~ (0x0003)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CQUE_1CONV}\~ (0x0000)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CQUE_2CONV}\~ (0x0001)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CQUE_4CONV}\~ (0x0002)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADS1015_REG_CONFIG_CQUE_NONE}\~ (0x0003)\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumerations\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
enum {\b adsGain_t} \{ {\b GAIN_TWOTHIRDS} = ADS1015_REG_CONFIG_PGA_6_144V, 
{\b GAIN_ONE} = ADS1015_REG_CONFIG_PGA_4_096V, 
{\b GAIN_TWO} = ADS1015_REG_CONFIG_PGA_2_048V, 
{\b GAIN_FOUR} = ADS1015_REG_CONFIG_PGA_1_024V, 
{\b GAIN_EIGHT} = ADS1015_REG_CONFIG_PGA_0_512V, 
{\b GAIN_SIXTEEN} = ADS1015_REG_CONFIG_PGA_0_256V
 \}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ADS1015_ADDRESS\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_ADDRESS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_ADDRESS\~ (0x48)}}
\par
{\bkmkstart AAAAAAAAAG}
{\bkmkend AAAAAAAAAG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_CONVERSIONDELAY\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_CONVERSIONDELAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_CONVERSIONDELAY\~ (1)}}
\par
{\bkmkstart AAAAAAAAAH}
{\bkmkend AAAAAAAAAH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::Adafruit_ADS1015().}\par
}
{\xe \v ADS1115_CONVERSIONDELAY\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1115_CONVERSIONDELAY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1115_CONVERSIONDELAY\~ (8)}}
\par
{\bkmkstart AAAAAAAAAI}
{\bkmkend AAAAAAAAAI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1115::Adafruit_ADS1115().}\par
}
{\xe \v ADS1015_REG_POINTER_MASK\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_POINTER_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_POINTER_MASK\~ (0x03)}}
\par
{\bkmkstart AAAAAAAAAJ}
{\bkmkend AAAAAAAAAJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_POINTER_CONVERT\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_POINTER_CONVERT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_POINTER_CONVERT\~ (0x00)}}
\par
{\bkmkstart AAAAAAAAAK}
{\bkmkend AAAAAAAAAK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::getLastConversionResults(), Adafruit_ADS1015::readADC_Differential_0_1(), Adafruit_ADS1015::readADC_Differential_2_3(), Adafruit_ADS1015::readADC_SingleEnded(), and readRegister().}\par
}
{\xe \v ADS1015_REG_POINTER_CONFIG\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_POINTER_CONFIG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_POINTER_CONFIG\~ (0x01)}}
\par
{\bkmkstart AAAAAAAAAL}
{\bkmkend AAAAAAAAAL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_Differential_0_1(), Adafruit_ADS1015::readADC_Differential_2_3(), Adafruit_ADS1015::readADC_SingleEnded(), and Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_POINTER_LOWTHRESH\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_POINTER_LOWTHRESH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_POINTER_LOWTHRESH\~ (0x02)}}
\par
{\bkmkstart AAAAAAAAAM}
{\bkmkend AAAAAAAAAM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_POINTER_HITHRESH\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_POINTER_HITHRESH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_POINTER_HITHRESH\~ (0x03)}}
\par
{\bkmkstart AAAAAAAAAN}
{\bkmkend AAAAAAAAAN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_OS_MASK\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_OS_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_OS_MASK\~ (0x8000)}}
\par
{\bkmkstart AAAAAAAAAO}
{\bkmkend AAAAAAAAAO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_OS_SINGLE\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_OS_SINGLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_OS_SINGLE\~ (0x8000)}}
\par
{\bkmkstart AAAAAAAAAP}
{\bkmkend AAAAAAAAAP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_Differential_0_1(), Adafruit_ADS1015::readADC_Differential_2_3(), and Adafruit_ADS1015::readADC_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_OS_BUSY\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_OS_BUSY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_OS_BUSY\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAAAQ}
{\bkmkend AAAAAAAAAQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_OS_NOTBUSY\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_OS_NOTBUSY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_OS_NOTBUSY\~ (0x8000)}}
\par
{\bkmkstart AAAAAAAAAR}
{\bkmkend AAAAAAAAAR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_MUX_MASK\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MUX_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MUX_MASK\~ (0x7000)}}
\par
{\bkmkstart AAAAAAAAAS}
{\bkmkend AAAAAAAAAS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_MUX_DIFF_0_1\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MUX_DIFF_0_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MUX_DIFF_0_1\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAAAT}
{\bkmkend AAAAAAAAAT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_Differential_0_1().}\par
}
{\xe \v ADS1015_REG_CONFIG_MUX_DIFF_0_3\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MUX_DIFF_0_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MUX_DIFF_0_3\~ (0x1000)}}
\par
{\bkmkstart AAAAAAAAAU}
{\bkmkend AAAAAAAAAU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_MUX_DIFF_1_3\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MUX_DIFF_1_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MUX_DIFF_1_3\~ (0x2000)}}
\par
{\bkmkstart AAAAAAAAAV}
{\bkmkend AAAAAAAAAV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_MUX_DIFF_2_3\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MUX_DIFF_2_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MUX_DIFF_2_3\~ (0x3000)}}
\par
{\bkmkstart AAAAAAAAAW}
{\bkmkend AAAAAAAAAW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_Differential_2_3().}\par
}
{\xe \v ADS1015_REG_CONFIG_MUX_SINGLE_0\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MUX_SINGLE_0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MUX_SINGLE_0\~ (0x4000)}}
\par
{\bkmkstart AAAAAAAAAX}
{\bkmkend AAAAAAAAAX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_SingleEnded(), and Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_MUX_SINGLE_1\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MUX_SINGLE_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MUX_SINGLE_1\~ (0x5000)}}
\par
{\bkmkstart AAAAAAAAAY}
{\bkmkend AAAAAAAAAY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_SingleEnded(), and Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_MUX_SINGLE_2\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MUX_SINGLE_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MUX_SINGLE_2\~ (0x6000)}}
\par
{\bkmkstart AAAAAAAAAZ}
{\bkmkend AAAAAAAAAZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_SingleEnded(), and Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_MUX_SINGLE_3\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MUX_SINGLE_3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MUX_SINGLE_3\~ (0x7000)}}
\par
{\bkmkstart AAAAAAAABA}
{\bkmkend AAAAAAAABA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_SingleEnded(), and Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_PGA_MASK\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_PGA_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_PGA_MASK\~ (0x0E00)}}
\par
{\bkmkstart AAAAAAAABB}
{\bkmkend AAAAAAAABB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_PGA_6_144V\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_PGA_6_144V}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_PGA_6_144V\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAABC}
{\bkmkend AAAAAAAABC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_PGA_4_096V\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_PGA_4_096V}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_PGA_4_096V\~ (0x0200)}}
\par
{\bkmkstart AAAAAAAABD}
{\bkmkend AAAAAAAABD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_PGA_2_048V\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_PGA_2_048V}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_PGA_2_048V\~ (0x0400)}}
\par
{\bkmkstart AAAAAAAABE}
{\bkmkend AAAAAAAABE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_PGA_1_024V\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_PGA_1_024V}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_PGA_1_024V\~ (0x0600)}}
\par
{\bkmkstart AAAAAAAABF}
{\bkmkend AAAAAAAABF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_PGA_0_512V\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_PGA_0_512V}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_PGA_0_512V\~ (0x0800)}}
\par
{\bkmkstart AAAAAAAABG}
{\bkmkend AAAAAAAABG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_PGA_0_256V\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_PGA_0_256V}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_PGA_0_256V\~ (0x0A00)}}
\par
{\bkmkstart AAAAAAAABH}
{\bkmkend AAAAAAAABH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_MODE_MASK\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MODE_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MODE_MASK\~ (0x0100)}}
\par
{\bkmkstart AAAAAAAABI}
{\bkmkend AAAAAAAABI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_MODE_CONTIN\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MODE_CONTIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MODE_CONTIN\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAABJ}
{\bkmkend AAAAAAAABJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_MODE_SINGLE\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_MODE_SINGLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_MODE_SINGLE\~ (0x0100)}}
\par
{\bkmkstart AAAAAAAABK}
{\bkmkend AAAAAAAABK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_Differential_0_1(), Adafruit_ADS1015::readADC_Differential_2_3(), and Adafruit_ADS1015::readADC_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_DR_MASK\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_DR_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_DR_MASK\~ (0x00E0)}}
\par
{\bkmkstart AAAAAAAABL}
{\bkmkend AAAAAAAABL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_DR_128SPS\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_DR_128SPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_DR_128SPS\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAABM}
{\bkmkend AAAAAAAABM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_DR_250SPS\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_DR_250SPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_DR_250SPS\~ (0x0020)}}
\par
{\bkmkstart AAAAAAAABN}
{\bkmkend AAAAAAAABN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 83 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_DR_490SPS\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_DR_490SPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_DR_490SPS\~ (0x0040)}}
\par
{\bkmkstart AAAAAAAABO}
{\bkmkend AAAAAAAABO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_DR_920SPS\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_DR_920SPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_DR_920SPS\~ (0x0060)}}
\par
{\bkmkstart AAAAAAAABP}
{\bkmkend AAAAAAAABP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_DR_1600SPS\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_DR_1600SPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_DR_1600SPS\~ (0x0080)}}
\par
{\bkmkstart AAAAAAAABQ}
{\bkmkend AAAAAAAABQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_Differential_0_1(), Adafruit_ADS1015::readADC_Differential_2_3(), Adafruit_ADS1015::readADC_SingleEnded(), and Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_DR_2400SPS\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_DR_2400SPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_DR_2400SPS\~ (0x00A0)}}
\par
{\bkmkstart AAAAAAAABR}
{\bkmkend AAAAAAAABR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 87 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_DR_3300SPS\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_DR_3300SPS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_DR_3300SPS\~ (0x00C0)}}
\par
{\bkmkstart AAAAAAAABS}
{\bkmkend AAAAAAAABS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_CMODE_MASK\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CMODE_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CMODE_MASK\~ (0x0010)}}
\par
{\bkmkstart AAAAAAAABT}
{\bkmkend AAAAAAAABT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_CMODE_TRAD\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CMODE_TRAD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CMODE_TRAD\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAABU}
{\bkmkend AAAAAAAABU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 91 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_Differential_0_1(), Adafruit_ADS1015::readADC_Differential_2_3(), Adafruit_ADS1015::readADC_SingleEnded(), and Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_CMODE_WINDOW\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CMODE_WINDOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CMODE_WINDOW\~ (0x0010)}}
\par
{\bkmkstart AAAAAAAABV}
{\bkmkend AAAAAAAABV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_CPOL_MASK\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CPOL_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CPOL_MASK\~ (0x0008)}}
\par
{\bkmkstart AAAAAAAABW}
{\bkmkend AAAAAAAABW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 94 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_CPOL_ACTVLOW\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CPOL_ACTVLOW}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CPOL_ACTVLOW\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAABX}
{\bkmkend AAAAAAAABX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_Differential_0_1(), Adafruit_ADS1015::readADC_Differential_2_3(), Adafruit_ADS1015::readADC_SingleEnded(), and Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_CPOL_ACTVHI\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CPOL_ACTVHI}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CPOL_ACTVHI\~ (0x0008)}}
\par
{\bkmkstart AAAAAAAABY}
{\bkmkend AAAAAAAABY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_CLAT_MASK\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CLAT_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CLAT_MASK\~ (0x0004)}}
\par
{\bkmkstart AAAAAAAABZ}
{\bkmkend AAAAAAAABZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 98 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_CLAT_NONLAT\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CLAT_NONLAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CLAT_NONLAT\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAACA}
{\bkmkend AAAAAAAACA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_Differential_0_1(), Adafruit_ADS1015::readADC_Differential_2_3(), and Adafruit_ADS1015::readADC_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_CLAT_LATCH\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CLAT_LATCH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CLAT_LATCH\~ (0x0004)}}
\par
{\bkmkstart AAAAAAAACB}
{\bkmkend AAAAAAAACB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 100 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_CQUE_MASK\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CQUE_MASK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CQUE_MASK\~ (0x0003)}}
\par
{\bkmkstart AAAAAAAACC}
{\bkmkend AAAAAAAACC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 102 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_CQUE_1CONV\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CQUE_1CONV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CQUE_1CONV\~ (0x0000)}}
\par
{\bkmkstart AAAAAAAACD}
{\bkmkend AAAAAAAACD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::startComparator_SingleEnded().}\par
}
{\xe \v ADS1015_REG_CONFIG_CQUE_2CONV\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CQUE_2CONV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CQUE_2CONV\~ (0x0001)}}
\par
{\bkmkstart AAAAAAAACE}
{\bkmkend AAAAAAAACE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 104 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_CQUE_4CONV\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CQUE_4CONV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CQUE_4CONV\~ (0x0002)}}
\par
{\bkmkstart AAAAAAAACF}
{\bkmkend AAAAAAAACF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 105 of file CoolAdafruit_ADS1015.h.}\par
}
{\xe \v ADS1015_REG_CONFIG_CQUE_NONE\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:ADS1015_REG_CONFIG_CQUE_NONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADS1015_REG_CONFIG_CQUE_NONE\~ (0x0003)}}
\par
{\bkmkstart AAAAAAAACG}
{\bkmkend AAAAAAAACG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 106 of file CoolAdafruit_ADS1015.h.}\par
{
Referenced by Adafruit_ADS1015::readADC_Differential_0_1(), Adafruit_ADS1015::readADC_Differential_2_3(), and Adafruit_ADS1015::readADC_SingleEnded().}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Enumeration Type Documentation\par
\pard\plain 
{\xe \v adsGain_t\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:adsGain_t}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
enum {\b adsGain_t}}}
\par
{\bkmkstart AAAAAAAACH}
{\bkmkend AAAAAAAACH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Enumerator:\par}
\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\xe \v GAIN_TWOTHIRDS\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:GAIN_TWOTHIRDS}
{\qr GAIN_TWOTHIRDS{\bkmkstart AAAAAAAACI}
{\bkmkend AAAAAAAACI}
\cell }{\cell }{\row }
{\xe \v GAIN_ONE\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:GAIN_ONE}
{\qr GAIN_ONE{\bkmkstart AAAAAAAACJ}
{\bkmkend AAAAAAAACJ}
\cell }{\cell }{\row }
{\xe \v GAIN_TWO\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:GAIN_TWO}
{\qr GAIN_TWO{\bkmkstart AAAAAAAACK}
{\bkmkend AAAAAAAACK}
\cell }{\cell }{\row }
{\xe \v GAIN_FOUR\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:GAIN_FOUR}
{\qr GAIN_FOUR{\bkmkstart AAAAAAAACL}
{\bkmkend AAAAAAAACL}
\cell }{\cell }{\row }
{\xe \v GAIN_EIGHT\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:GAIN_EIGHT}
{\qr GAIN_EIGHT{\bkmkstart AAAAAAAACM}
{\bkmkend AAAAAAAACM}
\cell }{\cell }{\row }
{\xe \v GAIN_SIXTEEN\:CoolAdafruit_ADS1015.h}
{\xe \v CoolAdafruit_ADS1015.h\:GAIN_SIXTEEN}
{\qr GAIN_SIXTEEN{\bkmkstart AAAAAAAACN}
{\bkmkend AAAAAAAACN}
\cell }{\cell }{\row }
}
\par
{
Definition at line 109 of file CoolAdafruit_ADS1015.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoard.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoard.cpp}
{\xe \v CoolBoard.cpp}
{\bkmkstart AAAAAAAACO}
{\bkmkend AAAAAAAACO}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard} Source file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FS.h"}\par
{\f2 #include "CoolBoard.h"}\par
{\f2 #include "ArduinoJson.h"}\par
{\f2 #include "Arduino.h"}\par
{\f2 #include <Wire.h>}\par
{\f2 #include <memory>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolBoard.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d9d/_cool_board_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG}\~ 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard} Source file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG\:CoolBoard.cpp}
{\xe \v CoolBoard.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG\~ 0}}
\par
{\bkmkstart AAAAAAAACP}
{\bkmkend AAAAAAAACP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file CoolBoard.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoard.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoard.h}
{\xe \v CoolBoard.h}
{\bkmkstart AAAAAAAACQ}
{\bkmkend AAAAAAAACQ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard} Header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CoolFileSystem.h"}\par
{\f2 #include "CoolBoardSensors.h"}\par
{\f2 #include "CoolBoardLed.h"}\par
{\f2 #include "CoolTime.h"}\par
{\f2 #include "CoolMQTT.h"}\par
{\f2 #include "Jetpack.h"}\par
{\f2 #include "Irene3000.h"}\par
{\f2 #include "ExternalSensors.h"}\par
{\f2 #include "CoolWifi.h"}\par
{\f2 #include "CoolBoardActor.h"}\par
{\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolBoard.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d32/_cool_board_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/de0/_cool_board_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CoolBoard}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b CoolBoard} and all of Its functions. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoard} Header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoardActor.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoardActor.cpp}
{\xe \v CoolBoardActor.cpp}
{\bkmkstart AAAAAAAACR}
{\bkmkend AAAAAAAACR}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardActor} Source file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FS.h"}\par
{\f2 #include "Arduino.h"}\par
{\f2 #include "ArduinoJson.h"}\par
{\f2 #include "CoolBoardActor.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolBoardActor.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d36/_cool_board_actor_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG}\~ 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardActor} Source file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG\:CoolBoardActor.cpp}
{\xe \v CoolBoardActor.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG\~ 0}}
\par
{\bkmkstart AAAAAAAACS}
{\bkmkend AAAAAAAACS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file CoolBoardActor.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoardActor.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoardActor.h}
{\xe \v CoolBoardActor.h}
{\bkmkstart AAAAAAAACT}
{\bkmkend AAAAAAAACT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardActor} Header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolBoardActor.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d6d/_cool_board_actor_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d07/_cool_board_actor_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CoolBoardActor}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b CoolBoardActor}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CoolBoardActor::state}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardActor} Header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v CoolBoardActor::state}
{\bkmkstart AAAAAAAACU}
{\bkmkend AAAAAAAACU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct CoolBoardActor::state\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the Actor's state \par
}{
Definition at line 87 of file CoolBoardActor.h.}\par
}
Collaboration diagram for CoolBoardActor::state:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d44/struct_cool_board_actor_1_1state__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAACV}
{\bkmkend AAAAAAAACV}
\cell }{actif\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
actif flag set to 1 when using an actor set to 0 otherwise \par
}\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAACW}
{\bkmkend AAAAAAAACW}
\cell }{temporal\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
temporal flag set to 1 to declare a temporal actor set to 0 otherwise \par
}\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAACX}
{\bkmkend AAAAAAAACX}
\cell }{inverted\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inverted flag set to 1 to declare an inverted actor set to 0 to declare a normal actor \par
}\cell }{\row }
{\qr String{\bkmkstart AAAAAAAACY}
{\bkmkend AAAAAAAACY}
\cell }{primaryType\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"type":["temperature","hour"]\par
the primary type is related to the sensor's type (type[0])\par
if both types are present and valid, the actor is a mixedActor \par
}\cell }{\row }
{\qr String{\bkmkstart AAAAAAAACZ}
{\bkmkend AAAAAAAACZ}
\cell }{secondaryType\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"type":["temperature","hour"]\par
the secondary type if present is hour or minute or hourMinute (type[1])\par
if both types are present and valid, the actor is a mixedActor \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADA}
{\bkmkend AAAAAAAADA}
\cell }{rangeLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
rangeLow : this is the minimum at which the actor becomes actif (low[0]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAADB}
{\bkmkend AAAAAAAADB}
\cell }{timeLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
timeLow : this is the time the actor is off in temporal mode (low[1]) (ms) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADC}
{\bkmkend AAAAAAAADC}
\cell }{hourLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
hour low :this is the hour when to turn off the actor in temporal/hour(hourMinute) mode (low[2] ) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADD}
{\bkmkend AAAAAAAADD}
\cell }{minuteLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
minute low :this is the minute when to turn off the actor in temporal/minute(hourMinute) mode (low[3]) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADE}
{\bkmkend AAAAAAAADE}
\cell }{rangeHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
rangeHigh : this is the maximum at which the actor becomes inactif(high[0]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAADF}
{\bkmkend AAAAAAAADF}
\cell }{timeHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
timeHigh : this is the time the actor is on in temporal mode(high[1]) (ms) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADG}
{\bkmkend AAAAAAAADG}
\cell }{hourHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
hourHigh : this is the hour when to turn on the actor in temporal/hour(hourMinute) mode(high[2]) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAADH}
{\bkmkend AAAAAAAADH}
\cell }{minuteHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
minuteHigh : this is the minute when to turn on the actor in temporal/minute(hourMinute) mode (high[3]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAADI}
{\bkmkend AAAAAAAADI}
\cell }{actifTime\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
actifTime : period of Time spent actif , used in Temporal mode in ms \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAADJ}
{\bkmkend AAAAAAAADJ}
\cell }{inactifTime\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inactifTime : period of Time spent inactif , used in Temporal mode in ms \par
}\cell }{\row }
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoardLed.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoardLed.cpp}
{\xe \v CoolBoardLed.cpp}
{\bkmkstart AAAAAAAADK}
{\bkmkend AAAAAAAADK}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed} Source file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FS.h"}\par
{\f2 #include "Arduino.h"}\par
{\f2 #include <NeoPixelBus.h>}\par
{\f2 #include "CoolBoardLed.h"}\par
{\f2 #include "ArduinoJson.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolBoardLed.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d71/_cool_board_led_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG}\~ 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed} Source file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG\:CoolBoardLed.cpp}
{\xe \v CoolBoardLed.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG\~ 0}}
\par
{\bkmkstart AAAAAAAADL}
{\bkmkend AAAAAAAADL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file CoolBoardLed.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoardLed.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoardLed.h}
{\xe \v CoolBoardLed.h}
{\bkmkstart AAAAAAAADM}
{\bkmkend AAAAAAAADM}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed} Header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
{\f2 #include <NeoPixelBus.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolBoardLed.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d68/_cool_board_led_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/df4/_cool_board_led_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CoolBoardLed}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the led in the Sensor Board. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardLed} Header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoardSensors.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoardSensors.cpp}
{\xe \v CoolBoardSensors.cpp}
{\bkmkstart AAAAAAAADN}
{\bkmkend AAAAAAAADN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors} Source file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FS.h"}\par
{\f2 #include "Arduino.h"}\par
{\f2 #include <stdint.h>}\par
{\f2 #include "ArduinoJson.h"}\par
{\f2 #include "CoolBoardSensors.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolBoardSensors.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/dd0/_cool_board_sensors_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG}\~ 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors} Source file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG\:CoolBoardSensors.cpp}
{\xe \v CoolBoardSensors.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG\~ 0}}
\par
{\bkmkstart AAAAAAAADO}
{\bkmkend AAAAAAAADO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file CoolBoardSensors.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolBoardSensors.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolBoardSensors.h}
{\xe \v CoolBoardSensors.h}
{\bkmkstart AAAAAAAADP}
{\bkmkend AAAAAAAADP}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors} Header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
{\f2 #include "internals/CoolSI114X.h"}\par
{\f2 #include "internals/CoolSparkFunBME280.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolBoardSensors.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d6/d72/_cool_board_sensors_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/daf/_cool_board_sensors_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CoolBoardSensors}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the On-Board Sensors. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CoolBoardSensors::lightActive}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b CoolBoardSensors::airActive}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolBoardSensors} Header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v CoolBoardSensors::lightActive}
{\bkmkstart AAAAAAAADQ}
{\bkmkend AAAAAAAADQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct CoolBoardSensors::lightActive\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b lightActive} structure\par
set visible to 1 to have visibleLight Readings\par
set ir to 1 to have infraRed Readings\par
set uv to 1 to have ultraViolet Readings \par
}{
Definition at line 106 of file CoolBoardSensors.h.}\par
}
Collaboration diagram for CoolBoardSensors::lightActive:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d9f/struct_cool_board_sensors_1_1light_active__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAADR}
{\bkmkend AAAAAAAADR}
\cell }{visible\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAADS}
{\bkmkend AAAAAAAADS}
\cell }{ir\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAADT}
{\bkmkend AAAAAAAADT}
\cell }{uv\cell }{\cell }{\row }
}
{\xe \v CoolBoardSensors::airActive}
{\bkmkstart AAAAAAAADU}
{\bkmkend AAAAAAAADU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct CoolBoardSensors::airActive\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b airActive} structure\par
set temperature to 1 to have temperature Readings\par
set humidity to 1 to have humidity Readings\par
set pressure to 1 to have pressure Readings \par
}{
Definition at line 123 of file CoolBoardSensors.h.}\par
}
Collaboration diagram for CoolBoardSensors::airActive:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d30/struct_cool_board_sensors_1_1air_active__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAADV}
{\bkmkend AAAAAAAADV}
\cell }{temperature\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAADW}
{\bkmkend AAAAAAAADW}
\cell }{humidity\cell }{\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAADX}
{\bkmkend AAAAAAAADX}
\cell }{pressure\cell }{\cell }{\row }
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolFileSystem.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolFileSystem.cpp}
{\xe \v CoolFileSystem.cpp}
{\bkmkstart AAAAAAAADY}
{\bkmkend AAAAAAAADY}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolFileSystem} Source file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <FS.h>}\par
{\f2 #include "CoolFileSystem.h"}\par
{\f2 #include "ArduinoJson.h"}\par
{\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolFileSystem.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/dc8/_cool_file_system_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG}\~ 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolFileSystem} Source file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG\:CoolFileSystem.cpp}
{\xe \v CoolFileSystem.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG\~ 0}}
\par
{\bkmkstart AAAAAAAADZ}
{\bkmkend AAAAAAAADZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file CoolFileSystem.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolFileSystem.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolFileSystem.h}
{\xe \v CoolFileSystem.h}
{\bkmkstart AAAAAAAAEA}
{\bkmkend AAAAAAAAEA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolFileSystem} Header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolFileSystem.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d26/_cool_file_system_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/deb/_cool_file_system_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CoolFileSystem}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the file system. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolFileSystem} Header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolMQTT.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolMQTT.cpp}
{\xe \v CoolMQTT.cpp}
{\bkmkstart AAAAAAAAEB}
{\bkmkend AAAAAAAAEB}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT} Source file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FS.h"}\par
{\f2 #include "Arduino.h"}\par
{\f2 #include <ESP8266WiFi.h>}\par
{\f2 #include "CoolMQTT.h"}\par
{\f2 #include "ArduinoJson.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolMQTT.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d20/_cool_m_q_t_t_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG}\~ 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT} Source file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG\:CoolMQTT.cpp}
{\xe \v CoolMQTT.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG\~ 0}}
\par
{\bkmkstart AAAAAAAAEC}
{\bkmkend AAAAAAAAEC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file CoolMQTT.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolMQTT.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolMQTT.h}
{\xe \v CoolMQTT.h}
{\bkmkstart AAAAAAAAED}
{\bkmkend AAAAAAAAED}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT} Header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
{\f2 #include <ESP8266WiFi.h>}\par
{\f2 #include "internals/CoolPubSubClient.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolMQTT.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d5c/_cool_m_q_t_t_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d91/_cool_m_q_t_t_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CoolMQTT}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the mqtt client. }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolMQTT} Header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolNDIR_I2C.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp}
{\bkmkstart AAAAAAAAEE}
{\bkmkend AAAAAAAAEE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Wire.h>}\par
{\f2 #include "CoolNDIR_I2C.h"}\par
{\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolNDIR_I2C.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d4/d4e/_cool_n_d_i_r___i2_c_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RHR}\~ (0x00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b THR}\~ (0X00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IER}\~ (0X01)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b FCR}\~ (0X02)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IIR}\~ (0X02)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LCR}\~ (0X03)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MCR}\~ (0X04)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b LSR}\~ (0X05)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MSR}\~ (0X06)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SPR}\~ (0X07)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TCR}\~ (0X06)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TLR}\~ (0X07)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b TXLVL}\~ (0X08)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RXLVL}\~ (0X09)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IODIR}\~ (0X0A)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IOSTATE}\~ (0X0B)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IOINTENA}\~ (0X0C)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b IOCONTROL}\~ (0X0E)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EFCR}\~ (0X0F)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DLL}\~ (0x00)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DLH}\~ (0X01)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b EFR}\~ (0X02)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b XON1}\~ (0X04)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b XON2}\~ (0X05)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b XOFF1}\~ (0X06)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b XOFF2}\~ (0X07)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SC16IS750_CRYSTCAL_FREQ}\~ (14745600UL)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b RECEIVE_TIMEOUT}\~ (100)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WIRE}\~ Wire\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v RHR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:RHR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RHR\~ (0x00)}}
\par
{\bkmkstart AAAAAAAAEF}
{\bkmkend AAAAAAAAEF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file CoolNDIR_I2C.cpp.}\par
{
Referenced by NDIR_I2C::receive().}\par
}
{\xe \v THR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:THR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define THR\~ (0X00)}}
\par
{\bkmkstart AAAAAAAAEG}
{\bkmkend AAAAAAAAEG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file CoolNDIR_I2C.cpp.}\par
{
Referenced by NDIR_I2C::send().}\par
}
{\xe \v IER\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:IER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IER\~ (0X01)}}
\par
{\bkmkstart AAAAAAAAEH}
{\bkmkend AAAAAAAAEH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v FCR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:FCR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define FCR\~ (0X02)}}
\par
{\bkmkstart AAAAAAAAEI}
{\bkmkend AAAAAAAAEI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file CoolNDIR_I2C.cpp.}\par
{
Referenced by NDIR_I2C::begin(), and NDIR_I2C::measure().}\par
}
{\xe \v IIR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:IIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IIR\~ (0X02)}}
\par
{\bkmkstart AAAAAAAAEJ}
{\bkmkend AAAAAAAAEJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v LCR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:LCR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LCR\~ (0X03)}}
\par
{\bkmkstart AAAAAAAAEK}
{\bkmkend AAAAAAAAEK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file CoolNDIR_I2C.cpp.}\par
{
Referenced by NDIR_I2C::begin().}\par
}
{\xe \v MCR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:MCR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MCR\~ (0X04)}}
\par
{\bkmkstart AAAAAAAAEL}
{\bkmkend AAAAAAAAEL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v LSR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:LSR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define LSR\~ (0X05)}}
\par
{\bkmkstart AAAAAAAAEM}
{\bkmkend AAAAAAAAEM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v MSR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:MSR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MSR\~ (0X06)}}
\par
{\bkmkstart AAAAAAAAEN}
{\bkmkend AAAAAAAAEN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v SPR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:SPR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SPR\~ (0X07)}}
\par
{\bkmkstart AAAAAAAAEO}
{\bkmkend AAAAAAAAEO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v TCR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:TCR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TCR\~ (0X06)}}
\par
{\bkmkstart AAAAAAAAEP}
{\bkmkend AAAAAAAAEP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v TLR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:TLR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TLR\~ (0X07)}}
\par
{\bkmkstart AAAAAAAAEQ}
{\bkmkend AAAAAAAAEQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v TXLVL\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:TXLVL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define TXLVL\~ (0X08)}}
\par
{\bkmkstart AAAAAAAAER}
{\bkmkend AAAAAAAAER}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file CoolNDIR_I2C.cpp.}\par
{
Referenced by NDIR_I2C::send().}\par
}
{\xe \v RXLVL\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:RXLVL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RXLVL\~ (0X09)}}
\par
{\bkmkstart AAAAAAAAES}
{\bkmkend AAAAAAAAES}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file CoolNDIR_I2C.cpp.}\par
{
Referenced by NDIR_I2C::receive().}\par
}
{\xe \v IODIR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:IODIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IODIR\~ (0X0A)}}
\par
{\bkmkstart AAAAAAAAET}
{\bkmkend AAAAAAAAET}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v IOSTATE\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:IOSTATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IOSTATE\~ (0X0B)}}
\par
{\bkmkstart AAAAAAAAEU}
{\bkmkend AAAAAAAAEU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v IOINTENA\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:IOINTENA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IOINTENA\~ (0X0C)}}
\par
{\bkmkstart AAAAAAAAEV}
{\bkmkend AAAAAAAAEV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v IOCONTROL\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:IOCONTROL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define IOCONTROL\~ (0X0E)}}
\par
{\bkmkstart AAAAAAAAEW}
{\bkmkend AAAAAAAAEW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file CoolNDIR_I2C.cpp.}\par
{
Referenced by NDIR_I2C::begin().}\par
}
{\xe \v EFCR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:EFCR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EFCR\~ (0X0F)}}
\par
{\bkmkstart AAAAAAAAEX}
{\bkmkend AAAAAAAAEX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v DLL\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:DLL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DLL\~ (0x00)}}
\par
{\bkmkstart AAAAAAAAEY}
{\bkmkend AAAAAAAAEY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file CoolNDIR_I2C.cpp.}\par
{
Referenced by NDIR_I2C::begin().}\par
}
{\xe \v DLH\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:DLH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DLH\~ (0X01)}}
\par
{\bkmkstart AAAAAAAAEZ}
{\bkmkend AAAAAAAAEZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file CoolNDIR_I2C.cpp.}\par
{
Referenced by NDIR_I2C::begin().}\par
}
{\xe \v EFR\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:EFR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define EFR\~ (0X02)}}
\par
{\bkmkstart AAAAAAAAFA}
{\bkmkend AAAAAAAAFA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v XON1\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:XON1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define XON1\~ (0X04)}}
\par
{\bkmkstart AAAAAAAAFB}
{\bkmkend AAAAAAAAFB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v XON2\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:XON2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define XON2\~ (0X05)}}
\par
{\bkmkstart AAAAAAAAFC}
{\bkmkend AAAAAAAAFC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v XOFF1\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:XOFF1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define XOFF1\~ (0X06)}}
\par
{\bkmkstart AAAAAAAAFD}
{\bkmkend AAAAAAAAFD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v XOFF2\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:XOFF2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define XOFF2\~ (0X07)}}
\par
{\bkmkstart AAAAAAAAFE}
{\bkmkend AAAAAAAAFE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v SC16IS750_CRYSTCAL_FREQ\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:SC16IS750_CRYSTCAL_FREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SC16IS750_CRYSTCAL_FREQ\~ (14745600UL)}}
\par
{\bkmkstart AAAAAAAAFF}
{\bkmkend AAAAAAAAFF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file CoolNDIR_I2C.cpp.}\par
}
{\xe \v RECEIVE_TIMEOUT\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:RECEIVE_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define RECEIVE_TIMEOUT\~ (100)}}
\par
{\bkmkstart AAAAAAAAFG}
{\bkmkend AAAAAAAAFG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file CoolNDIR_I2C.cpp.}\par
{
Referenced by NDIR_I2C::receive().}\par
}
{\xe \v WIRE\:CoolNDIR_I2C.cpp}
{\xe \v CoolNDIR_I2C.cpp\:WIRE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WIRE\~ Wire}}
\par
{\bkmkstart AAAAAAAAFH}
{\bkmkend AAAAAAAAFH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file CoolNDIR_I2C.cpp.}\par
{
Referenced by NDIR_I2C::begin(), NDIR_I2C::read_register(), NDIR_I2C::receive(), and NDIR_I2C::write_register().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolNDIR_I2C.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolNDIR_I2C.h}
{\xe \v CoolNDIR_I2C.h}
{\bkmkstart AAAAAAAAFI}
{\bkmkend AAAAAAAAFI}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d5f/_cool_n_d_i_r___i2_c_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b NDIR_I2C}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolPubSubClient.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolPubSubClient.cpp}
{\xe \v CoolPubSubClient.cpp}
{\bkmkstart AAAAAAAAFJ}
{\bkmkend AAAAAAAAFJ}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CoolPubSubClient.h"}\par
{\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolPubSubClient.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d86/_cool_pub_sub_client_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_HEADER_VERSION_LENGTH}\~ 7\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MQTT_HEADER_VERSION_LENGTH\:CoolPubSubClient.cpp}
{\xe \v CoolPubSubClient.cpp\:MQTT_HEADER_VERSION_LENGTH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_HEADER_VERSION_LENGTH\~ 7}}
\par
{\bkmkstart AAAAAAAAFK}
{\bkmkend AAAAAAAAFK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by CoolPubSubClient::connect().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolPubSubClient.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h}
{\bkmkstart AAAAAAAAFL}
{\bkmkend AAAAAAAAFL}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <Arduino.h>}\par
{\f2 #include "IPAddress.h"}\par
{\f2 #include "Client.h"}\par
{\f2 #include "Stream.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolPubSubClient.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d35/_cool_pub_sub_client_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d9e/_cool_pub_sub_client_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CoolPubSubClient}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_VERSION_3_1}\~ 3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_VERSION_3_1_1}\~ 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_VERSION}\~ {\b MQTT_VERSION_3_1_1}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_MAX_PACKET_SIZE}\~ 128\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_KEEPALIVE}\~ 15\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_SOCKET_TIMEOUT}\~ 15\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_CONNECTION_TIMEOUT}\~ -4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_CONNECTION_LOST}\~ -3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_CONNECT_FAILED}\~ -2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_DISCONNECTED}\~ -1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_CONNECTED}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_CONNECT_BAD_PROTOCOL}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_CONNECT_BAD_CLIENT_ID}\~ 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_CONNECT_UNAVAILABLE}\~ 3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_CONNECT_BAD_CREDENTIALS}\~ 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_CONNECT_UNAUTHORIZED}\~ 5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTCONNECT}\~ 1 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTCONNACK}\~ 2 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTPUBLISH}\~ 3 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTPUBACK}\~ 4 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTPUBREC}\~ 5 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTPUBREL}\~ 6 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTPUBCOMP}\~ 7 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTSUBSCRIBE}\~ 8 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTSUBACK}\~ 9 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTUNSUBSCRIBE}\~ 10 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTUNSUBACK}\~ 11 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTPINGREQ}\~ 12 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTPINGRESP}\~ 13 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTDISCONNECT}\~ 14 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTReserved}\~ 15 << 4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTQOS0}\~ (0 << 1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTQOS1}\~ (1 << 1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTTQOS2}\~ (2 << 1)\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b MQTT_CALLBACK_SIGNATURE}\~ void (*callback)(char*, uint8_t*, unsigned int)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v MQTT_VERSION_3_1\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_VERSION_3_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_VERSION_3_1\~ 3}}
\par
{\bkmkstart AAAAAAAAFM}
{\bkmkend AAAAAAAAFM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTT_VERSION_3_1_1\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_VERSION_3_1_1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_VERSION_3_1_1\~ 4}}
\par
{\bkmkstart AAAAAAAAFN}
{\bkmkend AAAAAAAAFN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 21 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTT_VERSION\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_VERSION}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_VERSION\~ {\b MQTT_VERSION_3_1_1}}}
\par
{\bkmkstart AAAAAAAAFO}
{\bkmkend AAAAAAAAFO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 26 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::connect().}\par
}
{\xe \v MQTT_MAX_PACKET_SIZE\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_MAX_PACKET_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_MAX_PACKET_SIZE\~ 128}}
\par
{\bkmkstart AAAAAAAAFP}
{\bkmkend AAAAAAAAFP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::CoolPubSubClient().}\par
}
{\xe \v MQTT_KEEPALIVE\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_KEEPALIVE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_KEEPALIVE\~ 15}}
\par
{\bkmkstart AAAAAAAAFQ}
{\bkmkend AAAAAAAAFQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::connect().}\par
}
{\xe \v MQTT_SOCKET_TIMEOUT\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_SOCKET_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_SOCKET_TIMEOUT\~ 15}}
\par
{\bkmkstart AAAAAAAAFR}
{\bkmkend AAAAAAAAFR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::connect().}\par
}
{\xe \v MQTT_CONNECTION_TIMEOUT\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_CONNECTION_TIMEOUT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_CONNECTION_TIMEOUT\~ -4}}
\par
{\bkmkstart AAAAAAAAFS}
{\bkmkend AAAAAAAAFS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::connect(), and CoolPubSubClient::loop().}\par
}
{\xe \v MQTT_CONNECTION_LOST\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_CONNECTION_LOST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_CONNECTION_LOST\~ -3}}
\par
{\bkmkstart AAAAAAAAFT}
{\bkmkend AAAAAAAAFT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::connected().}\par
}
{\xe \v MQTT_CONNECT_FAILED\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_CONNECT_FAILED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_CONNECT_FAILED\~ -2}}
\par
{\bkmkstart AAAAAAAAFU}
{\bkmkend AAAAAAAAFU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::connect().}\par
}
{\xe \v MQTT_DISCONNECTED\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_DISCONNECTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_DISCONNECTED\~ -1}}
\par
{\bkmkstart AAAAAAAAFV}
{\bkmkend AAAAAAAAFV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::CoolPubSubClient(), and CoolPubSubClient::disconnect().}\par
}
{\xe \v MQTT_CONNECTED\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_CONNECTED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_CONNECTED\~ 0}}
\par
{\bkmkstart AAAAAAAAFW}
{\bkmkend AAAAAAAAFW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::connect(), and CoolPubSubClient::connected().}\par
}
{\xe \v MQTT_CONNECT_BAD_PROTOCOL\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_CONNECT_BAD_PROTOCOL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_CONNECT_BAD_PROTOCOL\~ 1}}
\par
{\bkmkstart AAAAAAAAFX}
{\bkmkend AAAAAAAAFX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTT_CONNECT_BAD_CLIENT_ID\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_CONNECT_BAD_CLIENT_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_CONNECT_BAD_CLIENT_ID\~ 2}}
\par
{\bkmkstart AAAAAAAAFY}
{\bkmkend AAAAAAAAFY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTT_CONNECT_UNAVAILABLE\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_CONNECT_UNAVAILABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_CONNECT_UNAVAILABLE\~ 3}}
\par
{\bkmkstart AAAAAAAAFZ}
{\bkmkend AAAAAAAAFZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTT_CONNECT_BAD_CREDENTIALS\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_CONNECT_BAD_CREDENTIALS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_CONNECT_BAD_CREDENTIALS\~ 4}}
\par
{\bkmkstart AAAAAAAAGA}
{\bkmkend AAAAAAAAGA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTT_CONNECT_UNAUTHORIZED\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_CONNECT_UNAUTHORIZED}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_CONNECT_UNAUTHORIZED\~ 5}}
\par
{\bkmkstart AAAAAAAAGB}
{\bkmkend AAAAAAAAGB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTTCONNECT\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTCONNECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTCONNECT\~ 1 << 4}}
\par
{\bkmkstart AAAAAAAAGC}
{\bkmkend AAAAAAAAGC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::connect().}\par
}
{\xe \v MQTTCONNACK\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTCONNACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTCONNACK\~ 2 << 4}}
\par
{\bkmkstart AAAAAAAAGD}
{\bkmkend AAAAAAAAGD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTTPUBLISH\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTPUBLISH}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTPUBLISH\~ 3 << 4}}
\par
{\bkmkstart AAAAAAAAGE}
{\bkmkend AAAAAAAAGE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::loop(), CoolPubSubClient::publish(), CoolPubSubClient::publish_P(), and CoolPubSubClient::readPacket().}\par
}
{\xe \v MQTTPUBACK\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTPUBACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTPUBACK\~ 4 << 4}}
\par
{\bkmkstart AAAAAAAAGF}
{\bkmkend AAAAAAAAGF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::loop().}\par
}
{\xe \v MQTTPUBREC\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTPUBREC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTPUBREC\~ 5 << 4}}
\par
{\bkmkstart AAAAAAAAGG}
{\bkmkend AAAAAAAAGG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTTPUBREL\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTPUBREL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTPUBREL\~ 6 << 4}}
\par
{\bkmkstart AAAAAAAAGH}
{\bkmkend AAAAAAAAGH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTTPUBCOMP\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTPUBCOMP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTPUBCOMP\~ 7 << 4}}
\par
{\bkmkstart AAAAAAAAGI}
{\bkmkend AAAAAAAAGI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTTSUBSCRIBE\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTSUBSCRIBE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTSUBSCRIBE\~ 8 << 4}}
\par
{\bkmkstart AAAAAAAAGJ}
{\bkmkend AAAAAAAAGJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::subscribe().}\par
}
{\xe \v MQTTSUBACK\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTSUBACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTSUBACK\~ 9 << 4}}
\par
{\bkmkstart AAAAAAAAGK}
{\bkmkend AAAAAAAAGK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTTUNSUBSCRIBE\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTUNSUBSCRIBE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTUNSUBSCRIBE\~ 10 << 4}}
\par
{\bkmkstart AAAAAAAAGL}
{\bkmkend AAAAAAAAGL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::unsubscribe().}\par
}
{\xe \v MQTTUNSUBACK\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTUNSUBACK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTUNSUBACK\~ 11 << 4}}
\par
{\bkmkstart AAAAAAAAGM}
{\bkmkend AAAAAAAAGM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTTPINGREQ\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTPINGREQ}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTPINGREQ\~ 12 << 4}}
\par
{\bkmkstart AAAAAAAAGN}
{\bkmkend AAAAAAAAGN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::loop().}\par
}
{\xe \v MQTTPINGRESP\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTPINGRESP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTPINGRESP\~ 13 << 4}}
\par
{\bkmkstart AAAAAAAAGO}
{\bkmkend AAAAAAAAGO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::loop().}\par
}
{\xe \v MQTTDISCONNECT\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTDISCONNECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTDISCONNECT\~ 14 << 4}}
\par
{\bkmkstart AAAAAAAAGP}
{\bkmkend AAAAAAAAGP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::disconnect().}\par
}
{\xe \v MQTTReserved\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTReserved}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTReserved\~ 15 << 4}}
\par
{\bkmkstart AAAAAAAAGQ}
{\bkmkend AAAAAAAAGQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTTQOS0\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTQOS0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTQOS0\~ (0 << 1)}}
\par
{\bkmkstart AAAAAAAAGR}
{\bkmkend AAAAAAAAGR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTTQOS1\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTQOS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTQOS1\~ (1 << 1)}}
\par
{\bkmkstart AAAAAAAAGS}
{\bkmkend AAAAAAAAGS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file CoolPubSubClient.h.}\par
{
Referenced by CoolPubSubClient::loop(), CoolPubSubClient::readPacket(), CoolPubSubClient::subscribe(), and CoolPubSubClient::unsubscribe().}\par
}
{\xe \v MQTTQOS2\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTTQOS2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTTQOS2\~ (2 << 1)}}
\par
{\bkmkstart AAAAAAAAGT}
{\bkmkend AAAAAAAAGT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file CoolPubSubClient.h.}\par
}
{\xe \v MQTT_CALLBACK_SIGNATURE\:CoolPubSubClient.h}
{\xe \v CoolPubSubClient.h\:MQTT_CALLBACK_SIGNATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define MQTT_CALLBACK_SIGNATURE\~ void (*callback)(char*, uint8_t*, unsigned int)}}
\par
{\bkmkstart AAAAAAAAGU}
{\bkmkend AAAAAAAAGU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file CoolPubSubClient.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolSI114X.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolSI114X.cpp}
{\xe \v CoolSI114X.cpp}
{\bkmkstart AAAAAAAAGV}
{\bkmkend AAAAAAAAGV}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CoolSI114X.h"}\par
{\f2 #include "Wire.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolSI114X.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d51/_cool_s_i114_x_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolSI114X.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolSI114X.h}
{\xe \v CoolSI114X.h}
{\bkmkstart AAAAAAAAGW}
{\bkmkend AAAAAAAAGW}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolSI114X.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d0d/_cool_s_i114_x_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d23/_cool_s_i114_x_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CoolSI114X}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_QUERY}\~ 0X80\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_SET}\~ 0XA0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_NOP}\~ 0X0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_RESET}\~ 0X01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_BUSADDR}\~ 0X02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS_FORCE}\~ 0X05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_GET_CAL}\~ 0X12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_FORCE}\~ 0X06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSALS_FORCE}\~ 0X07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS_PAUSE}\~ 0X09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_PAUSE}\~ 0X0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSALS_PAUSE}\~ 0XB\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS_AUTO}\~ 0X0D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_AUTO}\~ 0X0E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSALS_AUTO}\~ 0X0F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PART_ID}\~ 0X00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_REV_ID}\~ 0X01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_SEQ_ID}\~ 0X02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_INT_CFG}\~ 0X03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_IRQ_ENABLE}\~ 0X04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_IRQ_MODE1}\~ 0x05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_IRQ_MODE2}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_HW_KEY}\~ 0X07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_MEAS_RATE0}\~ 0X08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_MEAS_RATE1}\~ 0X09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS_RATE}\~ 0X0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS_LED21}\~ 0X0F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS_LED3}\~ 0X10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_UCOEFF0}\~ 0X13\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_UCOEFF1}\~ 0X14\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_UCOEFF2}\~ 0X15\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_UCOEFF3}\~ 0X16\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_WR}\~ 0X17\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_COMMAND}\~ 0X18\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_RESPONSE}\~ 0X20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_IRQ_STATUS}\~ 0X21\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_VIS_DATA0}\~ 0X22\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_VIS_DATA1}\~ 0X23\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_IR_DATA0}\~ 0X24\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_IR_DATA1}\~ 0X25\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS1_DATA0}\~ 0X26\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS1_DATA1}\~ 0X27\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS2_DATA0}\~ 0X28\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS2_DATA1}\~ 0X29\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS3_DATA0}\~ 0X2A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS3_DATA1}\~ 0X2B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_AUX_DATA0_UVINDEX0}\~ 0X2C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_AUX_DATA1_UVINDEX1}\~ 0X2D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_RD}\~ 0X2E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_CHIP_STAT}\~ 0X30\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_I2C_ADDR}\~ 0X00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_CHLIST}\~ 0X01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_CHLIST_ENUV}\~ 0x80\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_CHLIST_ENAUX}\~ 0x40\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_CHLIST_ENALSIR}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_CHLIST_ENALSVIS}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_CHLIST_ENPS1}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_CHLIST_ENPS2}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_CHLIST_ENPS3}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED12_SELECT}\~ 0X02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED3_SELECT}\~ 0X03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS_ENCODE}\~ 0X05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_ENCODE}\~ 0X06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS1_ADCMUX}\~ 0X07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS2_ADCMUX}\~ 0X08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS3_ADCMUX}\~ 0X09\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS_ADC_COUNTER}\~ 0X0A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS_ADC_GAIN}\~ 0X0B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PS_ADC_MISC}\~ 0X0C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_IR_ADC_MUX}\~ 0X0E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_AUX_ADC_MUX}\~ 0X0F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_VIS_ADC_COUNTER}\~ 0X10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_VIS_ADC_GAIN}\~ 0X11\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_VIS_ADC_MISC}\~ 0X12\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_LED_REC}\~ 0X1C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_IR_ADC_COUNTER}\~ 0X1D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_IR_ADC_GAIN}\~ 0X1E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ALS_IR_ADC_MISC}\~ 0X1F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADCMUX_SMALL_IR}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADCMUX_VISIABLE}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADCMUX_LARGE_IR}\~ 0x03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADCMUX_NO}\~ 0x06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADCMUX_GND}\~ 0x25\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADCMUX_TEMPERATURE}\~ 0x65\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADCMUX_VDD}\~ 0x75\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED12_SELECT_PS1_NONE}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED12_SELECT_PS1_LED1}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED12_SELECT_PS1_LED2}\~ 0x02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED12_SELECT_PS1_LED3}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED12_SELECT_PS2_NONE}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED12_SELECT_PS2_LED1}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED12_SELECT_PS2_LED2}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED12_SELECT_PS2_LED3}\~ 0x40\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED3_SELECT_PS2_NONE}\~ 0x00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED3_SELECT_PS2_LED1}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED3_SELECT_PS2_LED2}\~ 0x20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_PSLED3_SELECT_PS2_LED3}\~ 0x40\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_GAIN_DIV1}\~ 0X00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_GAIN_DIV2}\~ 0X01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_GAIN_DIV4}\~ 0X02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_GAIN_DIV8}\~ 0X03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_GAIN_DIV16}\~ 0X04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_GAIN_DIV32}\~ 0X05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_LED_CURRENT_5MA}\~ 0X01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_LED_CURRENT_11MA}\~ 0X02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_LED_CURRENT_22MA}\~ 0X03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_LED_CURRENT_45MA}\~ 0X04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_COUNTER_1ADCCLK}\~ 0X00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_COUNTER_7ADCCLK}\~ 0X01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_COUNTER_15ADCCLK}\~ 0X02\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_COUNTER_31ADCCLK}\~ 0X03\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_COUNTER_63ADCCLK}\~ 0X04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_COUNTER_127ADCCLK}\~ 0X05\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_COUNTER_255ADCCLK}\~ 0X06\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_COUNTER_511ADCCLK}\~ 0X07\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_MISC_LOWRANGE}\~ 0X00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_MISC_HIGHRANGE}\~ 0X20\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_MISC_ADC_NORMALPROXIMITY}\~ 0X00\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADC_MISC_ADC_RAWADC}\~ 0X04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_INT_CFG_INTOE}\~ 0X01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_IRQEN_ALS}\~ 0x01\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_IRQEN_PS1}\~ 0x04\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_IRQEN_PS2}\~ 0x08\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_IRQEN_PS3}\~ 0x10\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b CoolSI114X_ADDR}\~ 0x60\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v CoolSI114X_QUERY\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_QUERY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_QUERY\~ 0X80}}
\par
{\bkmkstart AAAAAAAAGX}
{\bkmkend AAAAAAAAGX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 11 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::ReadParamData().}\par
}
{\xe \v CoolSI114X_SET\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_SET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_SET\~ 0XA0}}
\par
{\bkmkstart AAAAAAAAGY}
{\bkmkend AAAAAAAAGY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 12 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::WriteParamData().}\par
}
{\xe \v CoolSI114X_NOP\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_NOP}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_NOP\~ 0X0}}
\par
{\bkmkstart AAAAAAAAGZ}
{\bkmkend AAAAAAAAGZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 13 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_RESET\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_RESET}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_RESET\~ 0X01}}
\par
{\bkmkstart AAAAAAAAHA}
{\bkmkend AAAAAAAAHA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 14 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::Reset().}\par
}
{\xe \v CoolSI114X_BUSADDR\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_BUSADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_BUSADDR\~ 0X02}}
\par
{\bkmkstart AAAAAAAAHB}
{\bkmkend AAAAAAAAHB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 15 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS_FORCE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS_FORCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS_FORCE\~ 0X05}}
\par
{\bkmkstart AAAAAAAAHC}
{\bkmkend AAAAAAAAHC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 16 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_GET_CAL\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_GET_CAL}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_GET_CAL\~ 0X12}}
\par
{\bkmkstart AAAAAAAAHD}
{\bkmkend AAAAAAAAHD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 17 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ALS_FORCE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_FORCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_FORCE\~ 0X06}}
\par
{\bkmkstart AAAAAAAAHE}
{\bkmkend AAAAAAAAHE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 18 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSALS_FORCE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSALS_FORCE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSALS_FORCE\~ 0X07}}
\par
{\bkmkstart AAAAAAAAHF}
{\bkmkend AAAAAAAAHF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 19 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS_PAUSE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS_PAUSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS_PAUSE\~ 0X09}}
\par
{\bkmkstart AAAAAAAAHG}
{\bkmkend AAAAAAAAHG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 20 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ALS_PAUSE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_PAUSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_PAUSE\~ 0X0A}}
\par
{\bkmkstart AAAAAAAAHH}
{\bkmkend AAAAAAAAHH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 21 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSALS_PAUSE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSALS_PAUSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSALS_PAUSE\~ 0XB}}
\par
{\bkmkstart AAAAAAAAHI}
{\bkmkend AAAAAAAAHI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 22 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS_AUTO\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS_AUTO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS_AUTO\~ 0X0D}}
\par
{\bkmkstart AAAAAAAAHJ}
{\bkmkend AAAAAAAAHJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 23 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ALS_AUTO\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_AUTO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_AUTO\~ 0X0E}}
\par
{\bkmkstart AAAAAAAAHK}
{\bkmkend AAAAAAAAHK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 24 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSALS_AUTO\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSALS_AUTO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSALS_AUTO\~ 0X0F}}
\par
{\bkmkstart AAAAAAAAHL}
{\bkmkend AAAAAAAAHL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 25 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_PART_ID\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PART_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PART_ID\~ 0X00}}
\par
{\bkmkstart AAAAAAAAHM}
{\bkmkend AAAAAAAAHM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 29 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::Begin().}\par
}
{\xe \v CoolSI114X_REV_ID\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_REV_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_REV_ID\~ 0X01}}
\par
{\bkmkstart AAAAAAAAHN}
{\bkmkend AAAAAAAAHN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 30 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_SEQ_ID\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_SEQ_ID}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_SEQ_ID\~ 0X02}}
\par
{\bkmkstart AAAAAAAAHO}
{\bkmkend AAAAAAAAHO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 31 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_INT_CFG\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_INT_CFG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_INT_CFG\~ 0X03}}
\par
{\bkmkstart AAAAAAAAHP}
{\bkmkend AAAAAAAAHP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 32 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit(), and CoolSI114X::Reset().}\par
}
{\xe \v CoolSI114X_IRQ_ENABLE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_IRQ_ENABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_IRQ_ENABLE\~ 0X04}}
\par
{\bkmkstart AAAAAAAAHQ}
{\bkmkend AAAAAAAAHQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit(), and CoolSI114X::Reset().}\par
}
{\xe \v CoolSI114X_IRQ_MODE1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_IRQ_MODE1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_IRQ_MODE1\~ 0x05}}
\par
{\bkmkstart AAAAAAAAHR}
{\bkmkend AAAAAAAAHR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::Reset().}\par
}
{\xe \v CoolSI114X_IRQ_MODE2\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_IRQ_MODE2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_IRQ_MODE2\~ 0x06}}
\par
{\bkmkstart AAAAAAAAHS}
{\bkmkend AAAAAAAAHS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 35 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::Reset().}\par
}
{\xe \v CoolSI114X_HW_KEY\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_HW_KEY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_HW_KEY\~ 0X07}}
\par
{\bkmkstart AAAAAAAAHT}
{\bkmkend AAAAAAAAHT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 36 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::Reset().}\par
}
{\xe \v CoolSI114X_MEAS_RATE0\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_MEAS_RATE0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_MEAS_RATE0\~ 0X08}}
\par
{\bkmkstart AAAAAAAAHU}
{\bkmkend AAAAAAAAHU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit(), and CoolSI114X::Reset().}\par
}
{\xe \v CoolSI114X_MEAS_RATE1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_MEAS_RATE1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_MEAS_RATE1\~ 0X09}}
\par
{\bkmkstart AAAAAAAAHV}
{\bkmkend AAAAAAAAHV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::Reset().}\par
}
{\xe \v CoolSI114X_PS_RATE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS_RATE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS_RATE\~ 0X0A}}
\par
{\bkmkstart AAAAAAAAHW}
{\bkmkend AAAAAAAAHW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS_LED21\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS_LED21}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS_LED21\~ 0X0F}}
\par
{\bkmkstart AAAAAAAAHX}
{\bkmkend AAAAAAAAHX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_PS_LED3\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS_LED3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS_LED3\~ 0X10}}
\par
{\bkmkstart AAAAAAAAHY}
{\bkmkend AAAAAAAAHY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_UCOEFF0\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_UCOEFF0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_UCOEFF0\~ 0X13}}
\par
{\bkmkstart AAAAAAAAHZ}
{\bkmkend AAAAAAAAHZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_UCOEFF1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_UCOEFF1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_UCOEFF1\~ 0X14}}
\par
{\bkmkstart AAAAAAAAIA}
{\bkmkend AAAAAAAAIA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_UCOEFF2\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_UCOEFF2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_UCOEFF2\~ 0X15}}
\par
{\bkmkstart AAAAAAAAIB}
{\bkmkend AAAAAAAAIB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_UCOEFF3\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_UCOEFF3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_UCOEFF3\~ 0X16}}
\par
{\bkmkstart AAAAAAAAIC}
{\bkmkend AAAAAAAAIC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_WR\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_WR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_WR\~ 0X17}}
\par
{\bkmkstart AAAAAAAAID}
{\bkmkend AAAAAAAAID}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::WriteParamData().}\par
}
{\xe \v CoolSI114X_COMMAND\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_COMMAND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_COMMAND\~ 0X18}}
\par
{\bkmkstart AAAAAAAAIE}
{\bkmkend AAAAAAAAIE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit(), CoolSI114X::ReadParamData(), CoolSI114X::Reset(), and CoolSI114X::WriteParamData().}\par
}
{\xe \v CoolSI114X_RESPONSE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_RESPONSE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_RESPONSE\~ 0X20}}
\par
{\bkmkstart AAAAAAAAIF}
{\bkmkend AAAAAAAAIF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_IRQ_STATUS\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_IRQ_STATUS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_IRQ_STATUS\~ 0X21}}
\par
{\bkmkstart AAAAAAAAIG}
{\bkmkend AAAAAAAAIG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::Reset().}\par
}
{\xe \v CoolSI114X_ALS_VIS_DATA0\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_VIS_DATA0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_VIS_DATA0\~ 0X22}}
\par
{\bkmkstart AAAAAAAAIH}
{\bkmkend AAAAAAAAIH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::ReadVisible().}\par
}
{\xe \v CoolSI114X_ALS_VIS_DATA1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_VIS_DATA1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_VIS_DATA1\~ 0X23}}
\par
{\bkmkstart AAAAAAAAII}
{\bkmkend AAAAAAAAII}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ALS_IR_DATA0\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_IR_DATA0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_IR_DATA0\~ 0X24}}
\par
{\bkmkstart AAAAAAAAIJ}
{\bkmkend AAAAAAAAIJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::ReadIR().}\par
}
{\xe \v CoolSI114X_ALS_IR_DATA1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_IR_DATA1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_IR_DATA1\~ 0X25}}
\par
{\bkmkstart AAAAAAAAIK}
{\bkmkend AAAAAAAAIK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS1_DATA0\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS1_DATA0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS1_DATA0\~ 0X26}}
\par
{\bkmkstart AAAAAAAAIL}
{\bkmkend AAAAAAAAIL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS1_DATA1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS1_DATA1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS1_DATA1\~ 0X27}}
\par
{\bkmkstart AAAAAAAAIM}
{\bkmkend AAAAAAAAIM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS2_DATA0\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS2_DATA0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS2_DATA0\~ 0X28}}
\par
{\bkmkstart AAAAAAAAIN}
{\bkmkend AAAAAAAAIN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS2_DATA1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS2_DATA1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS2_DATA1\~ 0X29}}
\par
{\bkmkstart AAAAAAAAIO}
{\bkmkend AAAAAAAAIO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS3_DATA0\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS3_DATA0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS3_DATA0\~ 0X2A}}
\par
{\bkmkstart AAAAAAAAIP}
{\bkmkend AAAAAAAAIP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS3_DATA1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS3_DATA1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS3_DATA1\~ 0X2B}}
\par
{\bkmkstart AAAAAAAAIQ}
{\bkmkend AAAAAAAAIQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_AUX_DATA0_UVINDEX0\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_AUX_DATA0_UVINDEX0}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_AUX_DATA0_UVINDEX0\~ 0X2C}}
\par
{\bkmkstart AAAAAAAAIR}
{\bkmkend AAAAAAAAIR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::ReadUV().}\par
}
{\xe \v CoolSI114X_AUX_DATA1_UVINDEX1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_AUX_DATA1_UVINDEX1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_AUX_DATA1_UVINDEX1\~ 0X2D}}
\par
{\bkmkstart AAAAAAAAIS}
{\bkmkend AAAAAAAAIS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_RD\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_RD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_RD\~ 0X2E}}
\par
{\bkmkstart AAAAAAAAIT}
{\bkmkend AAAAAAAAIT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::ReadParamData(), and CoolSI114X::WriteParamData().}\par
}
{\xe \v CoolSI114X_CHIP_STAT\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_CHIP_STAT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_CHIP_STAT\~ 0X30}}
\par
{\bkmkstart AAAAAAAAIU}
{\bkmkend AAAAAAAAIU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_I2C_ADDR\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_I2C_ADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_I2C_ADDR\~ 0X00}}
\par
{\bkmkstart AAAAAAAAIV}
{\bkmkend AAAAAAAAIV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_CHLIST\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_CHLIST}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_CHLIST\~ 0X01}}
\par
{\bkmkstart AAAAAAAAIW}
{\bkmkend AAAAAAAAIW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_CHLIST_ENUV\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_CHLIST_ENUV}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_CHLIST_ENUV\~ 0x80}}
\par
{\bkmkstart AAAAAAAAIX}
{\bkmkend AAAAAAAAIX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_CHLIST_ENAUX\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_CHLIST_ENAUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_CHLIST_ENAUX\~ 0x40}}
\par
{\bkmkstart AAAAAAAAIY}
{\bkmkend AAAAAAAAIY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_CHLIST_ENALSIR\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_CHLIST_ENALSIR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_CHLIST_ENALSIR\~ 0x20}}
\par
{\bkmkstart AAAAAAAAIZ}
{\bkmkend AAAAAAAAIZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_CHLIST_ENALSVIS\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_CHLIST_ENALSVIS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_CHLIST_ENALSVIS\~ 0x10}}
\par
{\bkmkstart AAAAAAAAJA}
{\bkmkend AAAAAAAAJA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_CHLIST_ENPS1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_CHLIST_ENPS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_CHLIST_ENPS1\~ 0x01}}
\par
{\bkmkstart AAAAAAAAJB}
{\bkmkend AAAAAAAAJB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_CHLIST_ENPS2\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_CHLIST_ENPS2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_CHLIST_ENPS2\~ 0x02}}
\par
{\bkmkstart AAAAAAAAJC}
{\bkmkend AAAAAAAAJC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_CHLIST_ENPS3\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_CHLIST_ENPS3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_CHLIST_ENPS3\~ 0x04}}
\par
{\bkmkstart AAAAAAAAJD}
{\bkmkend AAAAAAAAJD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED12_SELECT\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED12_SELECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED12_SELECT\~ 0X02}}
\par
{\bkmkstart AAAAAAAAJE}
{\bkmkend AAAAAAAAJE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_PSLED3_SELECT\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED3_SELECT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED3_SELECT\~ 0X03}}
\par
{\bkmkstart AAAAAAAAJF}
{\bkmkend AAAAAAAAJF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS_ENCODE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS_ENCODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS_ENCODE\~ 0X05}}
\par
{\bkmkstart AAAAAAAAJG}
{\bkmkend AAAAAAAAJG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ALS_ENCODE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_ENCODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_ENCODE\~ 0X06}}
\par
{\bkmkstart AAAAAAAAJH}
{\bkmkend AAAAAAAAJH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS1_ADCMUX\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS1_ADCMUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS1_ADCMUX\~ 0X07}}
\par
{\bkmkstart AAAAAAAAJI}
{\bkmkend AAAAAAAAJI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 84 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_PS2_ADCMUX\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS2_ADCMUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS2_ADCMUX\~ 0X08}}
\par
{\bkmkstart AAAAAAAAJJ}
{\bkmkend AAAAAAAAJJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 85 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS3_ADCMUX\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS3_ADCMUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS3_ADCMUX\~ 0X09}}
\par
{\bkmkstart AAAAAAAAJK}
{\bkmkend AAAAAAAAJK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 86 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PS_ADC_COUNTER\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS_ADC_COUNTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS_ADC_COUNTER\~ 0X0A}}
\par
{\bkmkstart AAAAAAAAJL}
{\bkmkend AAAAAAAAJL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 88 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_PS_ADC_GAIN\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS_ADC_GAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS_ADC_GAIN\~ 0X0B}}
\par
{\bkmkstart AAAAAAAAJM}
{\bkmkend AAAAAAAAJM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 89 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_PS_ADC_MISC\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PS_ADC_MISC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PS_ADC_MISC\~ 0X0C}}
\par
{\bkmkstart AAAAAAAAJN}
{\bkmkend AAAAAAAAJN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 90 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_ALS_IR_ADC_MUX\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_IR_ADC_MUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_IR_ADC_MUX\~ 0X0E}}
\par
{\bkmkstart AAAAAAAAJO}
{\bkmkend AAAAAAAAJO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 92 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_AUX_ADC_MUX\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_AUX_ADC_MUX}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_AUX_ADC_MUX\~ 0X0F}}
\par
{\bkmkstart AAAAAAAAJP}
{\bkmkend AAAAAAAAJP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 93 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ALS_VIS_ADC_COUNTER\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_VIS_ADC_COUNTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_VIS_ADC_COUNTER\~ 0X10}}
\par
{\bkmkstart AAAAAAAAJQ}
{\bkmkend AAAAAAAAJQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 95 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_ALS_VIS_ADC_GAIN\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_VIS_ADC_GAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_VIS_ADC_GAIN\~ 0X11}}
\par
{\bkmkstart AAAAAAAAJR}
{\bkmkend AAAAAAAAJR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 96 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_ALS_VIS_ADC_MISC\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_VIS_ADC_MISC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_VIS_ADC_MISC\~ 0X12}}
\par
{\bkmkstart AAAAAAAAJS}
{\bkmkend AAAAAAAAJS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 97 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_LED_REC\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_LED_REC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_LED_REC\~ 0X1C}}
\par
{\bkmkstart AAAAAAAAJT}
{\bkmkend AAAAAAAAJT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 99 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ALS_IR_ADC_COUNTER\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_IR_ADC_COUNTER}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_IR_ADC_COUNTER\~ 0X1D}}
\par
{\bkmkstart AAAAAAAAJU}
{\bkmkend AAAAAAAAJU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 101 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_ALS_IR_ADC_GAIN\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_IR_ADC_GAIN}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_IR_ADC_GAIN\~ 0X1E}}
\par
{\bkmkstart AAAAAAAAJV}
{\bkmkend AAAAAAAAJV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 102 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_ALS_IR_ADC_MISC\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ALS_IR_ADC_MISC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ALS_IR_ADC_MISC\~ 0X1F}}
\par
{\bkmkstart AAAAAAAAJW}
{\bkmkend AAAAAAAAJW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 103 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_ADCMUX_SMALL_IR\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADCMUX_SMALL_IR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADCMUX_SMALL_IR\~ 0x00}}
\par
{\bkmkstart AAAAAAAAJX}
{\bkmkend AAAAAAAAJX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 108 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADCMUX_VISIABLE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADCMUX_VISIABLE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADCMUX_VISIABLE\~ 0x02}}
\par
{\bkmkstart AAAAAAAAJY}
{\bkmkend AAAAAAAAJY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 109 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADCMUX_LARGE_IR\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADCMUX_LARGE_IR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADCMUX_LARGE_IR\~ 0x03}}
\par
{\bkmkstart AAAAAAAAJZ}
{\bkmkend AAAAAAAAJZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 110 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_ADCMUX_NO\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADCMUX_NO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADCMUX_NO\~ 0x06}}
\par
{\bkmkstart AAAAAAAAKA}
{\bkmkend AAAAAAAAKA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 111 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADCMUX_GND\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADCMUX_GND}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADCMUX_GND\~ 0x25}}
\par
{\bkmkstart AAAAAAAAKB}
{\bkmkend AAAAAAAAKB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 112 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADCMUX_TEMPERATURE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADCMUX_TEMPERATURE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADCMUX_TEMPERATURE\~ 0x65}}
\par
{\bkmkstart AAAAAAAAKC}
{\bkmkend AAAAAAAAKC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 113 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADCMUX_VDD\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADCMUX_VDD}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADCMUX_VDD\~ 0x75}}
\par
{\bkmkstart AAAAAAAAKD}
{\bkmkend AAAAAAAAKD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 114 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED12_SELECT_PS1_NONE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED12_SELECT_PS1_NONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED12_SELECT_PS1_NONE\~ 0x00}}
\par
{\bkmkstart AAAAAAAAKE}
{\bkmkend AAAAAAAAKE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 116 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED12_SELECT_PS1_LED1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED12_SELECT_PS1_LED1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED12_SELECT_PS1_LED1\~ 0x01}}
\par
{\bkmkstart AAAAAAAAKF}
{\bkmkend AAAAAAAAKF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 117 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_PSLED12_SELECT_PS1_LED2\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED12_SELECT_PS1_LED2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED12_SELECT_PS1_LED2\~ 0x02}}
\par
{\bkmkstart AAAAAAAAKG}
{\bkmkend AAAAAAAAKG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 118 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED12_SELECT_PS1_LED3\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED12_SELECT_PS1_LED3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED12_SELECT_PS1_LED3\~ 0x04}}
\par
{\bkmkstart AAAAAAAAKH}
{\bkmkend AAAAAAAAKH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 119 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED12_SELECT_PS2_NONE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED12_SELECT_PS2_NONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED12_SELECT_PS2_NONE\~ 0x00}}
\par
{\bkmkstart AAAAAAAAKI}
{\bkmkend AAAAAAAAKI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 120 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED12_SELECT_PS2_LED1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED12_SELECT_PS2_LED1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED12_SELECT_PS2_LED1\~ 0x10}}
\par
{\bkmkstart AAAAAAAAKJ}
{\bkmkend AAAAAAAAKJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 121 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED12_SELECT_PS2_LED2\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED12_SELECT_PS2_LED2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED12_SELECT_PS2_LED2\~ 0x20}}
\par
{\bkmkstart AAAAAAAAKK}
{\bkmkend AAAAAAAAKK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 122 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED12_SELECT_PS2_LED3\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED12_SELECT_PS2_LED3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED12_SELECT_PS2_LED3\~ 0x40}}
\par
{\bkmkstart AAAAAAAAKL}
{\bkmkend AAAAAAAAKL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 123 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED3_SELECT_PS2_NONE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED3_SELECT_PS2_NONE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED3_SELECT_PS2_NONE\~ 0x00}}
\par
{\bkmkstart AAAAAAAAKM}
{\bkmkend AAAAAAAAKM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 124 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED3_SELECT_PS2_LED1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED3_SELECT_PS2_LED1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED3_SELECT_PS2_LED1\~ 0x10}}
\par
{\bkmkstart AAAAAAAAKN}
{\bkmkend AAAAAAAAKN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 125 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED3_SELECT_PS2_LED2\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED3_SELECT_PS2_LED2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED3_SELECT_PS2_LED2\~ 0x20}}
\par
{\bkmkstart AAAAAAAAKO}
{\bkmkend AAAAAAAAKO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 126 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_PSLED3_SELECT_PS2_LED3\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_PSLED3_SELECT_PS2_LED3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_PSLED3_SELECT_PS2_LED3\~ 0x40}}
\par
{\bkmkstart AAAAAAAAKP}
{\bkmkend AAAAAAAAKP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 127 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_GAIN_DIV1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_GAIN_DIV1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_GAIN_DIV1\~ 0X00}}
\par
{\bkmkstart AAAAAAAAKQ}
{\bkmkend AAAAAAAAKQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 129 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_ADC_GAIN_DIV2\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_GAIN_DIV2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_GAIN_DIV2\~ 0X01}}
\par
{\bkmkstart AAAAAAAAKR}
{\bkmkend AAAAAAAAKR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 130 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_GAIN_DIV4\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_GAIN_DIV4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_GAIN_DIV4\~ 0X02}}
\par
{\bkmkstart AAAAAAAAKS}
{\bkmkend AAAAAAAAKS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 131 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_GAIN_DIV8\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_GAIN_DIV8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_GAIN_DIV8\~ 0X03}}
\par
{\bkmkstart AAAAAAAAKT}
{\bkmkend AAAAAAAAKT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 132 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_GAIN_DIV16\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_GAIN_DIV16}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_GAIN_DIV16\~ 0X04}}
\par
{\bkmkstart AAAAAAAAKU}
{\bkmkend AAAAAAAAKU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 133 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_GAIN_DIV32\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_GAIN_DIV32}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_GAIN_DIV32\~ 0X05}}
\par
{\bkmkstart AAAAAAAAKV}
{\bkmkend AAAAAAAAKV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 134 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_LED_CURRENT_5MA\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_LED_CURRENT_5MA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_LED_CURRENT_5MA\~ 0X01}}
\par
{\bkmkstart AAAAAAAAKW}
{\bkmkend AAAAAAAAKW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 136 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_LED_CURRENT_11MA\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_LED_CURRENT_11MA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_LED_CURRENT_11MA\~ 0X02}}
\par
{\bkmkstart AAAAAAAAKX}
{\bkmkend AAAAAAAAKX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 137 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_LED_CURRENT_22MA\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_LED_CURRENT_22MA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_LED_CURRENT_22MA\~ 0X03}}
\par
{\bkmkstart AAAAAAAAKY}
{\bkmkend AAAAAAAAKY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 138 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_LED_CURRENT_45MA\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_LED_CURRENT_45MA}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_LED_CURRENT_45MA\~ 0X04}}
\par
{\bkmkstart AAAAAAAAKZ}
{\bkmkend AAAAAAAAKZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 139 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_COUNTER_1ADCCLK\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_COUNTER_1ADCCLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_COUNTER_1ADCCLK\~ 0X00}}
\par
{\bkmkstart AAAAAAAALA}
{\bkmkend AAAAAAAALA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 141 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_COUNTER_7ADCCLK\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_COUNTER_7ADCCLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_COUNTER_7ADCCLK\~ 0X01}}
\par
{\bkmkstart AAAAAAAALB}
{\bkmkend AAAAAAAALB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 142 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_COUNTER_15ADCCLK\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_COUNTER_15ADCCLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_COUNTER_15ADCCLK\~ 0X02}}
\par
{\bkmkstart AAAAAAAALC}
{\bkmkend AAAAAAAALC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 143 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_COUNTER_31ADCCLK\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_COUNTER_31ADCCLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_COUNTER_31ADCCLK\~ 0X03}}
\par
{\bkmkstart AAAAAAAALD}
{\bkmkend AAAAAAAALD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 144 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_COUNTER_63ADCCLK\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_COUNTER_63ADCCLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_COUNTER_63ADCCLK\~ 0X04}}
\par
{\bkmkstart AAAAAAAALE}
{\bkmkend AAAAAAAALE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 145 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_COUNTER_127ADCCLK\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_COUNTER_127ADCCLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_COUNTER_127ADCCLK\~ 0X05}}
\par
{\bkmkstart AAAAAAAALF}
{\bkmkend AAAAAAAALF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 146 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_COUNTER_255ADCCLK\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_COUNTER_255ADCCLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_COUNTER_255ADCCLK\~ 0X06}}
\par
{\bkmkstart AAAAAAAALG}
{\bkmkend AAAAAAAALG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 147 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_COUNTER_511ADCCLK\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_COUNTER_511ADCCLK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_COUNTER_511ADCCLK\~ 0X07}}
\par
{\bkmkstart AAAAAAAALH}
{\bkmkend AAAAAAAALH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 148 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_ADC_MISC_LOWRANGE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_MISC_LOWRANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_MISC_LOWRANGE\~ 0X00}}
\par
{\bkmkstart AAAAAAAALI}
{\bkmkend AAAAAAAALI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 150 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_MISC_HIGHRANGE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_MISC_HIGHRANGE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_MISC_HIGHRANGE\~ 0X20}}
\par
{\bkmkstart AAAAAAAALJ}
{\bkmkend AAAAAAAALJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 151 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_ADC_MISC_ADC_NORMALPROXIMITY\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_MISC_ADC_NORMALPROXIMITY}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_MISC_ADC_NORMALPROXIMITY\~ 0X00}}
\par
{\bkmkstart AAAAAAAALK}
{\bkmkend AAAAAAAALK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 152 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADC_MISC_ADC_RAWADC\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADC_MISC_ADC_RAWADC}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADC_MISC_ADC_RAWADC\~ 0X04}}
\par
{\bkmkstart AAAAAAAALL}
{\bkmkend AAAAAAAALL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 153 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_INT_CFG_INTOE\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_INT_CFG_INTOE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_INT_CFG_INTOE\~ 0X01}}
\par
{\bkmkstart AAAAAAAALM}
{\bkmkend AAAAAAAALM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 155 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_IRQEN_ALS\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_IRQEN_ALS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_IRQEN_ALS\~ 0x01}}
\par
{\bkmkstart AAAAAAAALN}
{\bkmkend AAAAAAAALN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 157 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::DeInit().}\par
}
{\xe \v CoolSI114X_IRQEN_PS1\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_IRQEN_PS1}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_IRQEN_PS1\~ 0x04}}
\par
{\bkmkstart AAAAAAAALO}
{\bkmkend AAAAAAAALO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 158 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_IRQEN_PS2\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_IRQEN_PS2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_IRQEN_PS2\~ 0x08}}
\par
{\bkmkstart AAAAAAAALP}
{\bkmkend AAAAAAAALP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 159 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_IRQEN_PS3\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_IRQEN_PS3}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_IRQEN_PS3\~ 0x10}}
\par
{\bkmkstart AAAAAAAALQ}
{\bkmkend AAAAAAAALQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 160 of file CoolSI114X.h.}\par
}
{\xe \v CoolSI114X_ADDR\:CoolSI114X.h}
{\xe \v CoolSI114X.h\:CoolSI114X_ADDR}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define CoolSI114X_ADDR\~ 0x60}}
\par
{\bkmkstart AAAAAAAALR}
{\bkmkend AAAAAAAALR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 162 of file CoolSI114X.h.}\par
{
Referenced by CoolSI114X::ReadByte(), CoolSI114X::ReadHalfWord(), and CoolSI114X::WriteByte().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolSparkFunBME280.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolSparkFunBME280.cpp}
{\xe \v CoolSparkFunBME280.cpp}
{\bkmkstart AAAAAAAALS}
{\bkmkend AAAAAAAALS}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "CoolSparkFunBME280.h"}\par
{\f2 #include "stdint.h"}\par
{\f2 #include <math.h>}\par
{\f2 #include "Wire.h"}\par
{\f2 #include "SPI.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolSparkFunBME280.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "db/dcb/_cool_spark_fun_b_m_e280_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolSparkFunBME280.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h}
{\bkmkstart AAAAAAAALT}
{\bkmkend AAAAAAAALT}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "stdint.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolSparkFunBME280.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d3f/_cool_spark_fun_b_m_e280_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d44/_cool_spark_fun_b_m_e280_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SensorSettings}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b SensorCalibration}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BME280}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b I2C_MODE}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b SPI_MODE}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_T1_LSB_REG}\~ 0x88\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_T1_MSB_REG}\~ 0x89\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_T2_LSB_REG}\~ 0x8A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_T2_MSB_REG}\~ 0x8B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_T3_LSB_REG}\~ 0x8C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_T3_MSB_REG}\~ 0x8D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P1_LSB_REG}\~ 0x8E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P1_MSB_REG}\~ 0x8F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P2_LSB_REG}\~ 0x90\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P2_MSB_REG}\~ 0x91\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P3_LSB_REG}\~ 0x92\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P3_MSB_REG}\~ 0x93\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P4_LSB_REG}\~ 0x94\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P4_MSB_REG}\~ 0x95\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P5_LSB_REG}\~ 0x96\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P5_MSB_REG}\~ 0x97\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P6_LSB_REG}\~ 0x98\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P6_MSB_REG}\~ 0x99\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P7_LSB_REG}\~ 0x9A\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P7_MSB_REG}\~ 0x9B\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P8_LSB_REG}\~ 0x9C\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P8_MSB_REG}\~ 0x9D\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P9_LSB_REG}\~ 0x9E\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_P9_MSB_REG}\~ 0x9F\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_H1_REG}\~ 0xA1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_CHIP_ID_REG}\~ 0xD0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_RST_REG}\~ 0xE0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_H2_LSB_REG}\~ 0xE1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_H2_MSB_REG}\~ 0xE2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_H3_REG}\~ 0xE3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_H4_MSB_REG}\~ 0xE4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_H4_LSB_REG}\~ 0xE5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_H5_MSB_REG}\~ 0xE6\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_DIG_H6_REG}\~ 0xE7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_CTRL_HUMIDITY_REG}\~ 0xF2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_STAT_REG}\~ 0xF3\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_CTRL_MEAS_REG}\~ 0xF4\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_CONFIG_REG}\~ 0xF5\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_PRESSURE_MSB_REG}\~ 0xF7\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_PRESSURE_LSB_REG}\~ 0xF8\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_PRESSURE_XLSB_REG}\~ 0xF9\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_TEMPERATURE_MSB_REG}\~ 0xFA\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_TEMPERATURE_LSB_REG}\~ 0xFB\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_TEMPERATURE_XLSB_REG}\~ 0xFC\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_HUMIDITY_MSB_REG}\~ 0xFD\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b BME280_HUMIDITY_LSB_REG}\~ 0xFE\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v SensorSettings}
{\bkmkstart AAAAAAAALU}
{\bkmkend AAAAAAAALU}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct SensorSettings\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 95 of file CoolSparkFunBME280.h.}\par
}
Collaboration diagram for SensorSettings:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d99/struct_sensor_settings__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint8_t{\bkmkstart AAAAAAAALV}
{\bkmkend AAAAAAAALV}
\cell }{commInterface\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAALW}
{\bkmkend AAAAAAAALW}
\cell }{I2CAddress\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAALX}
{\bkmkend AAAAAAAALX}
\cell }{chipSelectPin\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAALY}
{\bkmkend AAAAAAAALY}
\cell }{runMode\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAALZ}
{\bkmkend AAAAAAAALZ}
\cell }{tStandby\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAMA}
{\bkmkend AAAAAAAAMA}
\cell }{filter\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAMB}
{\bkmkend AAAAAAAAMB}
\cell }{tempOverSample\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAMC}
{\bkmkend AAAAAAAAMC}
\cell }{pressOverSample\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAMD}
{\bkmkend AAAAAAAAMD}
\cell }{humidOverSample\cell }{\cell }{\row }
}
{\xe \v SensorCalibration}
{\bkmkstart AAAAAAAAME}
{\bkmkend AAAAAAAAME}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct SensorCalibration\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {
Definition at line 115 of file CoolSparkFunBME280.h.}\par
}
Collaboration diagram for SensorCalibration:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d4a/struct_sensor_calibration__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr uint16_t{\bkmkstart AAAAAAAAMF}
{\bkmkend AAAAAAAAMF}
\cell }{dig_T1\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMG}
{\bkmkend AAAAAAAAMG}
\cell }{dig_T2\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMH}
{\bkmkend AAAAAAAAMH}
\cell }{dig_T3\cell }{\cell }{\row }
{\qr uint16_t{\bkmkstart AAAAAAAAMI}
{\bkmkend AAAAAAAAMI}
\cell }{dig_P1\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMJ}
{\bkmkend AAAAAAAAMJ}
\cell }{dig_P2\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMK}
{\bkmkend AAAAAAAAMK}
\cell }{dig_P3\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAML}
{\bkmkend AAAAAAAAML}
\cell }{dig_P4\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMM}
{\bkmkend AAAAAAAAMM}
\cell }{dig_P5\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMN}
{\bkmkend AAAAAAAAMN}
\cell }{dig_P6\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMO}
{\bkmkend AAAAAAAAMO}
\cell }{dig_P7\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMP}
{\bkmkend AAAAAAAAMP}
\cell }{dig_P8\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMQ}
{\bkmkend AAAAAAAAMQ}
\cell }{dig_P9\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAMR}
{\bkmkend AAAAAAAAMR}
\cell }{dig_H1\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMS}
{\bkmkend AAAAAAAAMS}
\cell }{dig_H2\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAMT}
{\bkmkend AAAAAAAAMT}
\cell }{dig_H3\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMU}
{\bkmkend AAAAAAAAMU}
\cell }{dig_H4\cell }{\cell }{\row }
{\qr int16_t{\bkmkstart AAAAAAAAMV}
{\bkmkend AAAAAAAAMV}
\cell }{dig_H5\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAMW}
{\bkmkend AAAAAAAAMW}
\cell }{dig_H6\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v I2C_MODE\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:I2C_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define I2C_MODE\~ 0}}
\par
{\bkmkstart AAAAAAAAMX}
{\bkmkend AAAAAAAAMX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 33 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin(), BME280::BME280(), BME280::readRegister(), BME280::readRegisterRegion(), and BME280::writeRegister().}\par
}
{\xe \v SPI_MODE\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:SPI_MODE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define SPI_MODE\~ 1}}
\par
{\bkmkstart AAAAAAAAMY}
{\bkmkend AAAAAAAAMY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 34 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin(), BME280::readRegister(), BME280::readRegisterRegion(), and BME280::writeRegister().}\par
}
{\xe \v BME280_DIG_T1_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_T1_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_T1_LSB_REG\~ 0x88}}
\par
{\bkmkstart AAAAAAAAMZ}
{\bkmkend AAAAAAAAMZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 37 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_T1_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_T1_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_T1_MSB_REG\~ 0x89}}
\par
{\bkmkstart AAAAAAAANA}
{\bkmkend AAAAAAAANA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 38 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_T2_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_T2_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_T2_LSB_REG\~ 0x8A}}
\par
{\bkmkstart AAAAAAAANB}
{\bkmkend AAAAAAAANB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 39 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_T2_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_T2_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_T2_MSB_REG\~ 0x8B}}
\par
{\bkmkstart AAAAAAAANC}
{\bkmkend AAAAAAAANC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 40 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_T3_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_T3_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_T3_LSB_REG\~ 0x8C}}
\par
{\bkmkstart AAAAAAAAND}
{\bkmkend AAAAAAAAND}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_T3_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_T3_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_T3_MSB_REG\~ 0x8D}}
\par
{\bkmkstart AAAAAAAANE}
{\bkmkend AAAAAAAANE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P1_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P1_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P1_LSB_REG\~ 0x8E}}
\par
{\bkmkstart AAAAAAAANF}
{\bkmkend AAAAAAAANF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P1_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P1_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P1_MSB_REG\~ 0x8F}}
\par
{\bkmkstart AAAAAAAANG}
{\bkmkend AAAAAAAANG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P2_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P2_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P2_LSB_REG\~ 0x90}}
\par
{\bkmkstart AAAAAAAANH}
{\bkmkend AAAAAAAANH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P2_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P2_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P2_MSB_REG\~ 0x91}}
\par
{\bkmkstart AAAAAAAANI}
{\bkmkend AAAAAAAANI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P3_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P3_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P3_LSB_REG\~ 0x92}}
\par
{\bkmkstart AAAAAAAANJ}
{\bkmkend AAAAAAAANJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 47 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P3_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P3_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P3_MSB_REG\~ 0x93}}
\par
{\bkmkstart AAAAAAAANK}
{\bkmkend AAAAAAAANK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P4_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P4_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P4_LSB_REG\~ 0x94}}
\par
{\bkmkstart AAAAAAAANL}
{\bkmkend AAAAAAAANL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P4_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P4_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P4_MSB_REG\~ 0x95}}
\par
{\bkmkstart AAAAAAAANM}
{\bkmkend AAAAAAAANM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P5_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P5_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P5_LSB_REG\~ 0x96}}
\par
{\bkmkstart AAAAAAAANN}
{\bkmkend AAAAAAAANN}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P5_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P5_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P5_MSB_REG\~ 0x97}}
\par
{\bkmkstart AAAAAAAANO}
{\bkmkend AAAAAAAANO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 52 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P6_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P6_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P6_LSB_REG\~ 0x98}}
\par
{\bkmkstart AAAAAAAANP}
{\bkmkend AAAAAAAANP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 53 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P6_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P6_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P6_MSB_REG\~ 0x99}}
\par
{\bkmkstart AAAAAAAANQ}
{\bkmkend AAAAAAAANQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 54 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P7_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P7_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P7_LSB_REG\~ 0x9A}}
\par
{\bkmkstart AAAAAAAANR}
{\bkmkend AAAAAAAANR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 55 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P7_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P7_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P7_MSB_REG\~ 0x9B}}
\par
{\bkmkstart AAAAAAAANS}
{\bkmkend AAAAAAAANS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 56 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P8_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P8_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P8_LSB_REG\~ 0x9C}}
\par
{\bkmkstart AAAAAAAANT}
{\bkmkend AAAAAAAANT}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 57 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P8_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P8_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P8_MSB_REG\~ 0x9D}}
\par
{\bkmkstart AAAAAAAANU}
{\bkmkend AAAAAAAANU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 58 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P9_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P9_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P9_LSB_REG\~ 0x9E}}
\par
{\bkmkstart AAAAAAAANV}
{\bkmkend AAAAAAAANV}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 59 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_P9_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_P9_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_P9_MSB_REG\~ 0x9F}}
\par
{\bkmkstart AAAAAAAANW}
{\bkmkend AAAAAAAANW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 60 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_H1_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_H1_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_H1_REG\~ 0xA1}}
\par
{\bkmkstart AAAAAAAANX}
{\bkmkend AAAAAAAANX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 61 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_CHIP_ID_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_CHIP_ID_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_CHIP_ID_REG\~ 0xD0}}
\par
{\bkmkstart AAAAAAAANY}
{\bkmkend AAAAAAAANY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 62 of file CoolSparkFunBME280.h.}\par
}
{\xe \v BME280_RST_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_RST_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_RST_REG\~ 0xE0}}
\par
{\bkmkstart AAAAAAAANZ}
{\bkmkend AAAAAAAANZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 63 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::reset().}\par
}
{\xe \v BME280_DIG_H2_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_H2_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_H2_LSB_REG\~ 0xE1}}
\par
{\bkmkstart AAAAAAAAOA}
{\bkmkend AAAAAAAAOA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 64 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_H2_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_H2_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_H2_MSB_REG\~ 0xE2}}
\par
{\bkmkstart AAAAAAAAOB}
{\bkmkend AAAAAAAAOB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 65 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_H3_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_H3_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_H3_REG\~ 0xE3}}
\par
{\bkmkstart AAAAAAAAOC}
{\bkmkend AAAAAAAAOC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 66 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_H4_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_H4_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_H4_MSB_REG\~ 0xE4}}
\par
{\bkmkstart AAAAAAAAOD}
{\bkmkend AAAAAAAAOD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 67 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_H4_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_H4_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_H4_LSB_REG\~ 0xE5}}
\par
{\bkmkstart AAAAAAAAOE}
{\bkmkend AAAAAAAAOE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 68 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_H5_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_H5_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_H5_MSB_REG\~ 0xE6}}
\par
{\bkmkstart AAAAAAAAOF}
{\bkmkend AAAAAAAAOF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 69 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_DIG_H6_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_DIG_H6_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_DIG_H6_REG\~ 0xE7}}
\par
{\bkmkstart AAAAAAAAOG}
{\bkmkend AAAAAAAAOG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 70 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_CTRL_HUMIDITY_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_CTRL_HUMIDITY_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_CTRL_HUMIDITY_REG\~ 0xF2}}
\par
{\bkmkstart AAAAAAAAOH}
{\bkmkend AAAAAAAAOH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 71 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_STAT_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_STAT_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_STAT_REG\~ 0xF3}}
\par
{\bkmkstart AAAAAAAAOI}
{\bkmkend AAAAAAAAOI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 72 of file CoolSparkFunBME280.h.}\par
}
{\xe \v BME280_CTRL_MEAS_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_CTRL_MEAS_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_CTRL_MEAS_REG\~ 0xF4}}
\par
{\bkmkstart AAAAAAAAOJ}
{\bkmkend AAAAAAAAOJ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 73 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_CONFIG_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_CONFIG_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_CONFIG_REG\~ 0xF5}}
\par
{\bkmkstart AAAAAAAAOK}
{\bkmkend AAAAAAAAOK}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 74 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::begin().}\par
}
{\xe \v BME280_PRESSURE_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_PRESSURE_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_PRESSURE_MSB_REG\~ 0xF7}}
\par
{\bkmkstart AAAAAAAAOL}
{\bkmkend AAAAAAAAOL}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 75 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::readFloatPressure().}\par
}
{\xe \v BME280_PRESSURE_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_PRESSURE_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_PRESSURE_LSB_REG\~ 0xF8}}
\par
{\bkmkstart AAAAAAAAOM}
{\bkmkend AAAAAAAAOM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 76 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::readFloatPressure().}\par
}
{\xe \v BME280_PRESSURE_XLSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_PRESSURE_XLSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_PRESSURE_XLSB_REG\~ 0xF9}}
\par
{\bkmkstart AAAAAAAAON}
{\bkmkend AAAAAAAAON}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 77 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::readFloatPressure().}\par
}
{\xe \v BME280_TEMPERATURE_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_TEMPERATURE_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_TEMPERATURE_MSB_REG\~ 0xFA}}
\par
{\bkmkstart AAAAAAAAOO}
{\bkmkend AAAAAAAAOO}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 78 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::readTempC().}\par
}
{\xe \v BME280_TEMPERATURE_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_TEMPERATURE_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_TEMPERATURE_LSB_REG\~ 0xFB}}
\par
{\bkmkstart AAAAAAAAOP}
{\bkmkend AAAAAAAAOP}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 79 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::readTempC().}\par
}
{\xe \v BME280_TEMPERATURE_XLSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_TEMPERATURE_XLSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_TEMPERATURE_XLSB_REG\~ 0xFC}}
\par
{\bkmkstart AAAAAAAAOQ}
{\bkmkend AAAAAAAAOQ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 80 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::readTempC().}\par
}
{\xe \v BME280_HUMIDITY_MSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_HUMIDITY_MSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_HUMIDITY_MSB_REG\~ 0xFD}}
\par
{\bkmkstart AAAAAAAAOR}
{\bkmkend AAAAAAAAOR}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 81 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::readFloatHumidity().}\par
}
{\xe \v BME280_HUMIDITY_LSB_REG\:CoolSparkFunBME280.h}
{\xe \v CoolSparkFunBME280.h\:BME280_HUMIDITY_LSB_REG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define BME280_HUMIDITY_LSB_REG\~ 0xFE}}
\par
{\bkmkstart AAAAAAAAOS}
{\bkmkend AAAAAAAAOS}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 82 of file CoolSparkFunBME280.h.}\par
{
Referenced by BME280::readFloatHumidity().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolTime.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolTime.cpp}
{\xe \v CoolTime.cpp}
{\bkmkstart AAAAAAAAOT}
{\bkmkend AAAAAAAAOT}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime} Source file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FS.h"}\par
{\f2 #include "Arduino.h"}\par
{\f2 #include "CoolTime.h"}\par
{\f2 #include "ArduinoJson.h"}\par
{\f2 #include "TimeLib.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolTime.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d0/d9d/_cool_time_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG}\~ 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime} Source file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG\:CoolTime.cpp}
{\xe \v CoolTime.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG\~ 0}}
\par
{\bkmkstart AAAAAAAAOU}
{\bkmkend AAAAAAAAOU}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file CoolTime.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolTime.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolTime.h}
{\xe \v CoolTime.h}
{\bkmkstart AAAAAAAAOV}
{\bkmkend AAAAAAAAOV}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime} Header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
{\f2 #include "TimeLib.h"}\par
{\f2 #include <WiFiUdp.h>}\par
{\f2 #include <DS1337RTC.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolTime.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/d60/_cool_time_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d65/_cool_time_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CoolTime}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the DS1337 RTC . }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b NTP_PACKET_SIZE}\~ 48\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolTime} Header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v NTP_PACKET_SIZE\:CoolTime.h}
{\xe \v CoolTime.h\:NTP_PACKET_SIZE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define NTP_PACKET_SIZE\~ 48}}
\par
{\bkmkstart AAAAAAAAOW}
{\bkmkend AAAAAAAAOW}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file CoolTime.h.}\par
{
Referenced by CoolTime::getNtpTime(), and CoolTime::sendNTPpacket().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolWifi.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v CoolWifi.cpp}
{\xe \v CoolWifi.cpp}
{\bkmkstart AAAAAAAAOX}
{\bkmkend AAAAAAAAOX}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi} Source file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FS.h"}\par
{\f2 #include "Arduino.h"}\par
{\f2 #include <ESP8266WiFi.h>}\par
{\f2 #include <ESP8266WiFiMulti.h>}\par
{\f2 #include "internals/WiFiManagerReadFileButton.h"}\par
{\f2 #include <CoolWifi.h>}\par
{\f2 #include "ArduinoJson.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolWifi.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/dff/_cool_wifi_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG}\~ 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi} Source file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG\:CoolWifi.cpp}
{\xe \v CoolWifi.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG\~ 0}}
\par
{\bkmkstart AAAAAAAAOY}
{\bkmkend AAAAAAAAOY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file CoolWifi.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
CoolWifi.h File Reference\par \pard\plain 
{\tc\tcl2 \v CoolWifi.h}
{\xe \v CoolWifi.h}
{\bkmkstart AAAAAAAAOZ}
{\bkmkend AAAAAAAAOZ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi} Header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
{\f2 #include <ESP8266WiFi.h>}\par
{\f2 #include <ESP8266WiFiMulti.h>}\par
{\f2 #include <DNSServer.h>}\par
{\f2 #include <ESP8266WebServer.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for CoolWifi.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d94/_cool_wifi_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d1/d2b/_cool_wifi_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b CoolWifi}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the WiFi connection . }}}
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b CoolWifi} Header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExternalSensor.h File Reference\par \pard\plain 
{\tc\tcl2 \v ExternalSensor.h}
{\xe \v ExternalSensor.h}
{\bkmkstart AAAAAAAAPA}
{\bkmkend AAAAAAAAPA}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensor} Header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "internals/CoolNDIR_I2C.h"}\par
{\f2 #include <DallasTemperature.h>}\par
{\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ExternalSensor.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/df9/_external_sensor_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d2/d63/_external_sensor_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b BaseExternalSensor}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is a generic external Sensor it is a way to access real external sensor methods through run Time polymorphism. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExternalSensor< T >}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
template<class SensorClass> class External Sensor: Derived class from {\b BaseExternalSensor}. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExternalSensor< NDIR_I2C >}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b NDIR_I2C} Specialization Class This is the template specialization for the {\b NDIR_I2C} CO2 sensor. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExternalSensor< DallasTemperature >}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
DallasTemperature Specialization Class This is the template specialization for the Dallas Temperature sensor. }}}
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUGExternal}\~ 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensor} Header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUGExternal\:ExternalSensor.h}
{\xe \v ExternalSensor.h\:DEBUGExternal}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUGExternal\~ 0}}
\par
{\bkmkstart AAAAAAAAPB}
{\bkmkend AAAAAAAAPB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file ExternalSensor.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExternalSensors.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v ExternalSensors.cpp}
{\xe \v ExternalSensors.cpp}
{\bkmkstart AAAAAAAAPC}
{\bkmkend AAAAAAAAPC}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensors} Source file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FS.h"}\par
{\f2 #include "Arduino.h"}\par
{\f2 #include "Wire.h"}\par
{\f2 #include "OneWire.h"}\par
{\f2 #include "ExternalSensors.h"}\par
{\f2 #include "ArduinoJson.h"}\par
{\f2 #include "ExternalSensor.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ExternalSensors.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d80/_external_sensors_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG}\~ 0\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Functions\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
OneWire {\b oneWire} (0)\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensors} Source file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG\:ExternalSensors.cpp}
{\xe \v ExternalSensors.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG\~ 0}}
\par
{\bkmkstart AAAAAAAAPD}
{\bkmkend AAAAAAAAPD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file ExternalSensors.cpp.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Function Documentation\par
\pard\plain 
{\xe \v oneWire\:ExternalSensors.cpp}
{\xe \v ExternalSensors.cpp\:oneWire}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
OneWire oneWire (0 )}}
\par
{\bkmkstart AAAAAAAAPE}
{\bkmkend AAAAAAAAPE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Referenced by ExternalSensors::begin().}\par
Here is the caller graph for this function:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d9/d09/_external_sensors_8cpp_af39fa3dad1ba161b384c0b26b8145e65_icgraph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
ExternalSensors.h File Reference\par \pard\plain 
{\tc\tcl2 \v ExternalSensors.h}
{\xe \v ExternalSensors.h}
{\bkmkstart AAAAAAAAPF}
{\bkmkend AAAAAAAAPF}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensors} header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
{\f2 #include "ExternalSensor.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for ExternalSensors.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d97/_external_sensors_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d76/_external_sensors_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b ExternalSensors}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class handles the external sensors run time defintion , configuartion and actions. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b ExternalSensors::sensor}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b ExternalSensors} header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v ExternalSensors::sensor}
{\bkmkstart AAAAAAAAPG}
{\bkmkend AAAAAAAAPG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct ExternalSensors::sensor\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Array of 50 External Sensors\par
An External Sensor is described by :\par
{\b sensor.reference} : the sensor's reference ( {\b NDIR_I2C}...)\par
{\b sensor.type} : the sensor's Type ( CO2 , Temperature , .... )\par
{\b sensor.address} : the sensor's Address if it has one\par
{\b sensor.exSensor} : pointer to the dynmacially instanciated sensor \par
}{
Definition at line 76 of file ExternalSensors.h.}\par
}
Collaboration diagram for ExternalSensors::sensor:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/db6/struct_external_sensors_1_1sensor__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr String{\bkmkstart AAAAAAAAPH}
{\bkmkend AAAAAAAAPH}
\cell }{reference\cell }{\cell }{\row }
{\qr String{\bkmkstart AAAAAAAAPI}
{\bkmkend AAAAAAAAPI}
\cell }{type\cell }{\cell }{\row }
{\qr uint8_t{\bkmkstart AAAAAAAAPJ}
{\bkmkend AAAAAAAAPJ}
\cell }{address\cell }{\cell }{\row }
{\qr {\b BaseExternalSensor} *{\bkmkstart AAAAAAAAPK}
{\bkmkend AAAAAAAAPK}
\cell }{exSensor\cell }{\cell }{\row }
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Irene3000.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Irene3000.cpp}
{\xe \v Irene3000.cpp}
{\bkmkstart AAAAAAAAPL}
{\bkmkend AAAAAAAAPL}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000} Source file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FS.h"}\par
{\f2 #include <Arduino.h>}\par
{\f2 #include "ArduinoJson.h"}\par
{\f2 #include <math.h>}\par
{\f2 #include <Irene3000.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Irene3000.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/df3/_irene3000_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG}\~ 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000} Source file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG\:Irene3000.cpp}
{\xe \v Irene3000.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG\~ 0}}
\par
{\bkmkstart AAAAAAAAPM}
{\bkmkend AAAAAAAAPM}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file Irene3000.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Irene3000.h File Reference\par \pard\plain 
{\tc\tcl2 \v Irene3000.h}
{\xe \v Irene3000.h}
{\bkmkstart AAAAAAAAPN}
{\bkmkend AAAAAAAAPN}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000} Header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "internals/CoolAdafruit_ADS1015.h"}\par
{\f2 #include <Arduino.h>}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Irene3000.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "df/d34/_irene3000_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "da/d86/_irene3000_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Irene3000}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class is provided to manage the {\b Irene3000} Ph/Temperature Shield. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Irene3000::parameters_T}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Irene3000::state}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ADC_MAXIMUM_VALUE}\~ 32767\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b REFERENCE_VOLTAGE_GAIN_4}\~ 1.024\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b V_GAIN_2}\~ 0.0625\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b V_GAIN_4}\~ 0.03125\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b V_GAIN_8}\~ 0.015625\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b Write_Check}\~ 0x1234\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b button}\~ 0\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b temp}\~ 1\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b freeAdc}\~ 2\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b ph}\~ 3\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Irene3000} Header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Irene3000::parameters_T}
{\bkmkstart AAAAAAAAPO}
{\bkmkend AAAAAAAAPO}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Irene3000::parameters_T\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
PH Sensor Calibration parameters\par
pH7Cal : PH 7 Calibration value\par
pH4Cal : PH 4 Calibration value\par
pHStep : PH Slope Step value \par
}{
Definition at line 111 of file Irene3000.h.}\par
}
Collaboration diagram for Irene3000::parameters_T:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/df5/struct_irene3000_1_1parameters___t__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr unsigned int{\bkmkstart AAAAAAAAPP}
{\bkmkend AAAAAAAAPP}
\cell }{WriteCheck\cell }{\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAPQ}
{\bkmkend AAAAAAAAPQ}
\cell }{pH7Cal\cell }{\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAPR}
{\bkmkend AAAAAAAAPR}
\cell }{pH4Cal\cell }{\cell }{\row }
{\qr float{\bkmkstart AAAAAAAAPS}
{\bkmkend AAAAAAAAPS}
\cell }{pHStep\cell }{\cell }{\row }
}
{\xe \v Irene3000::state}
{\bkmkstart AAAAAAAAPT}
{\bkmkend AAAAAAAAPT}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Irene3000::state\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
Irene sensors state struct\par
active : if the related sensor is active or not\par
gain : what is the used gain for the related sensor (used only for the free channel)\par
type : the type of the used sensor(used only for the free channel ) \par
}{
Definition at line 128 of file Irene3000.h.}\par
}
Collaboration diagram for Irene3000::state:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d72/struct_irene3000_1_1state__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAAPU}
{\bkmkend AAAAAAAAPU}
\cell }{active\cell }{\cell }{\row }
{\qr {\b adsGain_t}{\bkmkstart AAAAAAAAPV}
{\bkmkend AAAAAAAAPV}
\cell }{gain\cell }{\cell }{\row }
{\qr String{\bkmkstart AAAAAAAAPW}
{\bkmkend AAAAAAAAPW}
\cell }{type\cell }{\cell }{\row }
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v ADC_MAXIMUM_VALUE\:Irene3000.h}
{\xe \v Irene3000.h\:ADC_MAXIMUM_VALUE}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ADC_MAXIMUM_VALUE\~ 32767}}
\par
{\bkmkstart AAAAAAAAPX}
{\bkmkend AAAAAAAAPX}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file Irene3000.h.}\par
{
Referenced by Irene3000::readPh().}\par
}
{\xe \v REFERENCE_VOLTAGE_GAIN_4\:Irene3000.h}
{\xe \v Irene3000.h\:REFERENCE_VOLTAGE_GAIN_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define REFERENCE_VOLTAGE_GAIN_4\~ 1.024}}
\par
{\bkmkstart AAAAAAAAPY}
{\bkmkend AAAAAAAAPY}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 42 of file Irene3000.h.}\par
{
Referenced by Irene3000::readPh().}\par
}
{\xe \v V_GAIN_2\:Irene3000.h}
{\xe \v Irene3000.h\:V_GAIN_2}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define V_GAIN_2\~ 0.0625}}
\par
{\bkmkstart AAAAAAAAPZ}
{\bkmkend AAAAAAAAPZ}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 43 of file Irene3000.h.}\par
}
{\xe \v V_GAIN_4\:Irene3000.h}
{\xe \v Irene3000.h\:V_GAIN_4}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define V_GAIN_4\~ 0.03125}}
\par
{\bkmkstart AAAAAAAAQA}
{\bkmkend AAAAAAAAQA}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 44 of file Irene3000.h.}\par
}
{\xe \v V_GAIN_8\:Irene3000.h}
{\xe \v Irene3000.h\:V_GAIN_8}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define V_GAIN_8\~ 0.015625}}
\par
{\bkmkstart AAAAAAAAQB}
{\bkmkend AAAAAAAAQB}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 45 of file Irene3000.h.}\par
{
Referenced by Irene3000::readTemp().}\par
}
{\xe \v Write_Check\:Irene3000.h}
{\xe \v Irene3000.h\:Write_Check}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define Write_Check\~ 0x1234}}
\par
{\bkmkstart AAAAAAAAQC}
{\bkmkend AAAAAAAAQC}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 46 of file Irene3000.h.}\par
{
Referenced by Irene3000::resetParams().}\par
}
{\xe \v button\:Irene3000.h}
{\xe \v Irene3000.h\:button}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define button\~ 0}}
\par
{\bkmkstart AAAAAAAAQD}
{\bkmkend AAAAAAAAQD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 48 of file Irene3000.h.}\par
{
Referenced by Irene3000::readButton().}\par
}
{\xe \v temp\:Irene3000.h}
{\xe \v Irene3000.h\:temp}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define temp\~ 1}}
\par
{\bkmkstart AAAAAAAAQE}
{\bkmkend AAAAAAAAQE}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 49 of file Irene3000.h.}\par
{
Referenced by CoolMQTT::callback(), CoolFileSystem::getsavedData(), CoolFileSystem::getSensorSavedData(), Irene3000::readTemp(), and CoolFileSystem::updateConfigFiles().}\par
}
{\xe \v freeAdc\:Irene3000.h}
{\xe \v Irene3000.h\:freeAdc}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define freeAdc\~ 2}}
\par
{\bkmkstart AAAAAAAAQF}
{\bkmkend AAAAAAAAQF}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 50 of file Irene3000.h.}\par
{
Referenced by Irene3000::readADSChannel2().}\par
}
{\xe \v ph\:Irene3000.h}
{\xe \v Irene3000.h\:ph}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define ph\~ 3}}
\par
{\bkmkstart AAAAAAAAQG}
{\bkmkend AAAAAAAAQG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 51 of file Irene3000.h.}\par
{
Referenced by Irene3000::calibratepH4(), Irene3000::calibratepH7(), and Irene3000::readPh().}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Jetpack.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v Jetpack.cpp}
{\xe \v Jetpack.cpp}
{\bkmkstart AAAAAAAAQH}
{\bkmkend AAAAAAAAQH}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Jetpack} Source file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FS.h"}\par
{\f2 #include "Arduino.h"}\par
{\f2 #include "ArduinoJson.h"}\par
{\f2 #include "Jetpack.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Jetpack.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d5/d45/_jetpack_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b DEBUG}\~ 0\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Jetpack} Source file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v DEBUG\:Jetpack.cpp}
{\xe \v Jetpack.cpp\:DEBUG}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define DEBUG\~ 0}}
\par
{\bkmkstart AAAAAAAAQI}
{\bkmkend AAAAAAAAQI}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file Jetpack.cpp.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
Jetpack.h File Reference\par \pard\plain 
{\tc\tcl2 \v Jetpack.h}
{\xe \v Jetpack.h}
{\bkmkstart AAAAAAAAQJ}
{\bkmkend AAAAAAAAQJ}
\par
{
{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Jetpack} Header file. }}\par
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "Arduino.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for Jetpack.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dc/d77/_jetpack_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d3/d4b/_jetpack_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b Jetpack}\par
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid {\i {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
This class manages the {\b Jetpack} shield. }}}
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
struct {\b Jetpack::state}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Detailed Description\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
{\b Jetpack} Header file. \par
}{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
\par
{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 1.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Mehdi Zemzem \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Version:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 0.0 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Author:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid Simon Juif \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Date:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid 27/06/2017 \par
}{{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Copyright:\par}\pard\plain \s61\li360\widctlpar\ql\adjustright \fs20\cgrid La Cool Co SAS \par
MIT license Copyright (c) 2017 La Cool Co SAS\par
}Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:\par
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.\par
THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. \par
}}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Class Documentation\par
\pard\plain 
{\xe \v Jetpack::state}
{\bkmkstart AAAAAAAAQK}
{\bkmkend AAAAAAAAQK}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
struct Jetpack::state\par
\pard\plain 
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid {\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
the Actor's state \par
}{
Definition at line 95 of file Jetpack.h.}\par
}
Collaboration diagram for Jetpack::state:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "de/da1/struct_jetpack_1_1state__coll__graph.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
{\par
{\s5\sb90\sa30\keepn\widctlpar\adjustright \b\f1\fs20\cgrid 
Class Members:\par}
\pard\plain \s60\li0\widctlpar\ql\adjustright \fs20\cgrid \trowd \trgaph108\trleft426\tblind426\trbrdrt\brdrs\brdrw10\brdrcf15 \trbrdrl\brdrs\brdrw10\brdrcf15 \trbrdrb\brdrs\brdrw10\brdrcf15 \trbrdrr\brdrs\brdrw10\brdrcf15 \trbrdrh\brdrs\brdrw10\brdrcf15 \trbrdrv\brdrs\brdrw10\brdrcf15 
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx2187
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx4374
\clvertalt\clbrdrt\brdrs\brdrw10\brdrcf15 \clbrdrl\brdrs\brdrw10\brdrcf15 \clbrdrb\brdrs\brdrw10\brdrcf15 \clbrdrr \brdrs\brdrw10\brdrcf15 \cltxlrtb \cellx8748
\pard \widctlpar\intbl\adjustright
{\qr bool{\bkmkstart AAAAAAAAQL}
{\bkmkend AAAAAAAAQL}
\cell }{actif\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
actif flag set to 1 when using an actor set to 0 otherwise \par
}\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAAQM}
{\bkmkend AAAAAAAAQM}
\cell }{temporal\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
temporal flag set to 1 to declare a temporal actor set to 0 otherwise \par
}\cell }{\row }
{\qr bool{\bkmkstart AAAAAAAAQN}
{\bkmkend AAAAAAAAQN}
\cell }{inverted\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inverted flag set to 1 to declare an inverted actor set to 0 to declare a normal actor \par
}\cell }{\row }
{\qr String{\bkmkstart AAAAAAAAQO}
{\bkmkend AAAAAAAAQO}
\cell }{primaryType\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"type":["temperature","hour"]\par
the primary type is related to the sensor's type (type[0])\par
if both types are present and valid, the actor is a mixedActor \par
}\cell }{\row }
{\qr String{\bkmkstart AAAAAAAAQP}
{\bkmkend AAAAAAAAQP}
\cell }{secondaryType\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"type":["temperature","hour"]\par
the secondary type if present is hour or minute or hourMinute (type[1])\par
if both types are present and valid, the actor is a mixedActor \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQQ}
{\bkmkend AAAAAAAAQQ}
\cell }{rangeLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
rangeLow : this is the minimum at which the actor becomes actif (low[0]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAAQR}
{\bkmkend AAAAAAAAQR}
\cell }{timeLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
timeLow : this is the time the actor is off in temporal mode (low[1]) (ms) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQS}
{\bkmkend AAAAAAAAQS}
\cell }{hourLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
hour low :this is the hour when to turn off the actor in temporal/hour(hourMinute) mode (low[2] ) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQT}
{\bkmkend AAAAAAAAQT}
\cell }{minuteLow\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"low":[20,5000,18,10]\par
minute low :this is the minute when to turn off the actor in temporal/minute(hourMinute) mode (low[3]) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQU}
{\bkmkend AAAAAAAAQU}
\cell }{rangeHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
rangeHigh : this is the maximum at which the actor becomes inactif(high[0]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAAQV}
{\bkmkend AAAAAAAAQV}
\cell }{timeHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
timeHigh : this is the time the actor is on in temporal mode(high[1]) (ms) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQW}
{\bkmkend AAAAAAAAQW}
\cell }{hourHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
hourHigh : this is the hour when to turn on the actor in temporal/hour(hourMinute) mode(high[2]) \par
}\cell }{\row }
{\qr int{\bkmkstart AAAAAAAAQX}
{\bkmkend AAAAAAAAQX}
\cell }{minuteHigh\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
"high":[30,2000,17,1]\par
minuteHigh : this is the minute when to turn on the actor in temporal/minute(hourMinute) mode (high[3]) \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAAQY}
{\bkmkend AAAAAAAAQY}
\cell }{actifTime\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
actifTime : period of Time spent actif , used in Temporal mode in ms \par
}\cell }{\row }
{\qr unsigned long{\bkmkstart AAAAAAAAQZ}
{\bkmkend AAAAAAAAQZ}
\cell }{inactifTime\cell }{{\s17\sa60\sb30\widctlpar\qj \fs22\cgrid 
inactifTime : period of Time spent inactif , used in Temporal mode in ms \par
}\cell }{\row }
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
parse.js File Reference\par \pard\plain 
{\tc\tcl2 \v parse.js}
{\xe \v parse.js}
{\bkmkstart AAAAAAAARA}
{\bkmkend AAAAAAAARA}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
README.md File Reference\par \pard\plain 
{\tc\tcl2 \v README.md}
{\xe \v README.md}
{\bkmkstart AAAAAAAARB}
{\bkmkend AAAAAAAARB}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
template.h File Reference\par \pard\plain 
{\tc\tcl2 \v template.h}
{\xe \v template.h}
{\bkmkstart AAAAAAAARC}
{\bkmkend AAAAAAAARC}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char HTTP_HEAD [] {\b PROGMEM} = "<!DOCTYPE html><html lang=\\"en\\"><head><meta name=\\"viewport\\"content=\\"width=device-width,initial-scale=1,user-scalable=no\\"/><title>\{v\}</title>"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v PROGMEM\:template.h}
{\xe \v template.h\:PROGMEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char HTTP_END [] PROGMEM = "<!DOCTYPE html><html lang=\\"en\\"><head><meta name=\\"viewport\\"content=\\"width=device-width,initial-scale=1,user-scalable=no\\"/><title>\{v\}</title>"}}
\par
{\bkmkstart AAAAAAAARD}
{\bkmkend AAAAAAAARD}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 1 of file template.h.}\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WiFiManagerReadFileButton.cpp File Reference\par \pard\plain 
{\tc\tcl2 \v WiFiManagerReadFileButton.cpp}
{\xe \v WiFiManagerReadFileButton.cpp}
{\bkmkstart AAAAAAAARE}
{\bkmkend AAAAAAAARE}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include "FS.h"}\par
{\f2 #include "WiFiManagerReadFileButton.h"}\par
{\f2 #include "ArduinoJson.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for WiFiManagerReadFileButton.cpp:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "d8/d2c/_wi_fi_manager_read_file_button_8cpp__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\par \pard\plain 

\pard\plain \sect\sbkpage
\s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
\pard\plain \s2\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs28\kerning28\cgrid 
WiFiManagerReadFileButton.h File Reference\par \pard\plain 
{\tc\tcl2 \v WiFiManagerReadFileButton.h}
{\xe \v WiFiManagerReadFileButton.h}
{\bkmkstart AAAAAAAARF}
{\bkmkend AAAAAAAARF}
{
\pard\plain \s18\widctlpar\fs22\cgrid {\f2 #include <ESP8266WiFi.h>}\par
{\f2 #include <ESP8266WebServer.h>}\par
{\f2 #include <DNSServer.h>}\par
{\f2 #include <memory>}\par
{\f2 #include "user_interface.h"}\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid Include dependency graph for WiFiManagerReadFileButton.h:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d99/_wi_fi_manager_read_file_button_8h__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
{
\pard\plain \s17\sa60\sb30\widctlpar\qj \fs22\cgrid This graph shows which files directly or indirectly include this file:{
\pard\plain 
\par\pard \qc {\field\flddirty {\*\fldinst INCLUDEPICTURE "dd/d5b/_wi_fi_manager_read_file_button_8h__dep__incl.svg" \\d \\*MERGEFORMAT}{\fldrslt IMAGE}}\par
}
\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Classes\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WiFiManagerParameter}\par
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
class {\b WiFiManager}\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macros\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
#define {\b WIFI_MANAGER_MAX_PARAMS}\~ 10\par
}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variables\par
\pard\plain 

{
\pard\plain \s80\fi-360\li360\widctlpar\jclisttab\tx360{\*\pn \pnlvlbody\ilvl0\ls1\pnrnot0\pndec }\ls1\adjustright \fs20\cgrid 
const char HTTP_HEAD [] {\b PROGMEM} = "<!DOCTYPE html><html lang=\\"en\\"><head><meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1, user-scalable=no\\"/><title>\{v\}</title>"\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Macro Definition Documentation\par
\pard\plain 
{\xe \v WIFI_MANAGER_MAX_PARAMS\:WiFiManagerReadFileButton.h}
{\xe \v WiFiManagerReadFileButton.h\:WIFI_MANAGER_MAX_PARAMS}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
#define WIFI_MANAGER_MAX_PARAMS\~ 10}}
\par
{\bkmkstart AAAAAAAARG}
{\bkmkend AAAAAAAARG}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 41 of file WiFiManagerReadFileButton.h.}\par
}
{\pard\widctlpar\brdrb\brdrs\brdrw5\brsp20 \adjustright \par}
\pard\plain \s3\sb240\sa60\keepn\widctlpar\adjustright \b\f1\cgrid 
Variable Documentation\par
\pard\plain 
{\xe \v PROGMEM\:WiFiManagerReadFileButton.h}
{\xe \v WiFiManagerReadFileButton.h\:PROGMEM}
\pard\plain \s4\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs20\cgrid {
{\b 
const char HTTP_END [] PROGMEM = "<!DOCTYPE html><html lang=\\"en\\"><head><meta name=\\"viewport\\" content=\\"width=device-width, initial-scale=1, user-scalable=no\\"/><title>\{v\}</title>"}}
\par
{\bkmkstart AAAAAAAARH}
{\bkmkend AAAAAAAARH}
{
\pard\plain \s51\li360\sa60\sb30\qj\widctlpar\qj\adjustright \fs20\cgrid 
\par
{
Definition at line 28 of file WiFiManagerReadFileButton.h.}\par
}

\pard\plain \sect\sbkpage
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid 
\s1\sb240\sa60\keepn\widctlpar\adjustright \b\f1\fs36\kerning36\cgrid Index\par 
\pard\plain 
{\tc \v Index}
{\field\fldedit {\*\fldinst INDEX \\c2 \\*MERGEFORMAT}{\fldrslt INDEX}}
}