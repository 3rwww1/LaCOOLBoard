.TH "CoolBoardActor" 3 "Mon Sep 4 2017" "CoolBoard API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CoolBoardActor \- This class manages the \fBCoolBoardActor\fP\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <CoolBoardActor\&.h>\fP
.SS "Classes"

.in +1c
.ti -1c
.RI "struct \fBstate\fP"
.br
.in -1c
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "void \fBbegin\fP ()"
.br
.ti -1c
.RI "void \fBwrite\fP (bool action)"
.br
.ti -1c
.RI "void \fBdoAction\fP (const char *data)"
.br
.ti -1c
.RI "void \fBnormalAction\fP (float measurment)"
.br
.ti -1c
.RI "void \fBinvertedAction\fP (float measurment)"
.br
.ti -1c
.RI "void \fBtemporalActionOff\fP ()"
.br
.ti -1c
.RI "void \fBtemporalActionOn\fP ()"
.br
.ti -1c
.RI "void \fBmixedTemporalActionOff\fP (float measurment)"
.br
.ti -1c
.RI "void \fBmixedTemporalActionOn\fP (float measurment)"
.br
.ti -1c
.RI "void \fBhourAction\fP (int hour)"
.br
.ti -1c
.RI "void \fBmixedHourAction\fP (int hour, float measurment)"
.br
.ti -1c
.RI "void \fBminuteAction\fP (int minute)"
.br
.ti -1c
.RI "void \fBmixedMinuteAction\fP (int minute, float measurment)"
.br
.ti -1c
.RI "void \fBhourMinuteAction\fP (int hour, int minute)"
.br
.ti -1c
.RI "void \fBmixedHourMinuteAction\fP (int hour, int minute, float measurment)"
.br
.ti -1c
.RI "bool \fBconfig\fP ()"
.br
.ti -1c
.RI "void \fBprintConf\fP ()"
.br
.in -1c
.SS "Private Attributes"

.in +1c
.ti -1c
.RI "struct \fBCoolBoardActor::state\fP \fBactor\fP"
.br
.ti -1c
.RI "const int \fBpin\fP = 15"
.br
.in -1c
.SH "Detailed Description"
.PP 
This class manages the \fBCoolBoardActor\fP\&. 
.PP
Definition at line 44 of file CoolBoardActor\&.h\&.
.SH "Class Documentation"
.PP 
.SH "struct CoolBoardActor::state"
.PP 
the Actor's state 
.PP
Definition at line 87 of file CoolBoardActor\&.h\&.
.PP
\fBClass Members:\fP
.RS 4
bool \fIactif\fP actif flag set to 1 when using an actor set to 0 otherwise 
.br
.PP
bool \fItemporal\fP temporal flag set to 1 to declare a temporal actor set to 0 otherwise 
.br
.PP
bool \fIinverted\fP inverted flag set to 1 to declare an inverted actor set to 0 to declare a normal actor 
.br
.PP
String \fIprimaryType\fP 'type':['temperature','hour']
.PP
the primary type is related to the sensor's type (type[0])
.PP
if both types are present and valid, the actor is a mixedActor 
.br
.PP
String \fIsecondaryType\fP 'type':['temperature','hour']
.PP
the secondary type if present is hour or minute or hourMinute (type[1])
.PP
if both types are present and valid, the actor is a mixedActor 
.br
.PP
int \fIrangeLow\fP 'low':[20,5000,18,10]
.PP
rangeLow : this is the minimum at which the actor becomes actif (low[0]) 
.br
.PP
unsigned long \fItimeLow\fP 'low':[20,5000,18,10]
.PP
timeLow : this is the time the actor is off in temporal mode (low[1]) (ms) 
.br
.PP
int \fIhourLow\fP 'low':[20,5000,18,10]
.PP
hour low :this is the hour when to turn off the actor in temporal/hour(hourMinute) mode (low[2] ) 
.br
.PP
int \fIminuteLow\fP 'low':[20,5000,18,10]
.PP
minute low :this is the minute when to turn off the actor in temporal/minute(hourMinute) mode (low[3]) 
.br
.PP
int \fIrangeHigh\fP 'high':[30,2000,17,1]
.PP
rangeHigh : this is the maximum at which the actor becomes inactif(high[0]) 
.br
.PP
unsigned long \fItimeHigh\fP 'high':[30,2000,17,1]
.PP
timeHigh : this is the time the actor is on in temporal mode(high[1]) (ms) 
.br
.PP
int \fIhourHigh\fP 'high':[30,2000,17,1]
.PP
hourHigh : this is the hour when to turn on the actor in temporal/hour(hourMinute) mode(high[2]) 
.br
.PP
int \fIminuteHigh\fP 'high':[30,2000,17,1]
.PP
minuteHigh : this is the minute when to turn on the actor in temporal/minute(hourMinute) mode (high[3]) 
.br
.PP
unsigned long \fIactifTime\fP actifTime : period of Time spent actif , used in Temporal mode in ms 
.br
.PP
unsigned long \fIinactifTime\fP inactifTime : period of Time spent inactif , used in Temporal mode in ms 
.br
.PP
.RE
.PP
.SH "Member Function Documentation"
.PP 
.SS "void CoolBoardActor::begin ()"
\fBCoolBoardActor::begin()\fP: This method is provided to initialise the \fBCoolBoardActor\fP pin 
.PP
Definition at line 48 of file CoolBoardActor\&.cpp\&.
.PP
References pin\&.
.PP
Referenced by CoolBoard::begin()\&.
.SS "void CoolBoardActor::write (bool action)"
CoolBoardActor::write(action): This method is provided to write the given action to the \fBCoolBoardActor\fP\&. 
.PP
Definition at line 71 of file CoolBoardActor\&.cpp\&.
.PP
References pin\&.
.PP
Referenced by hourAction(), hourMinuteAction(), invertedAction(), minuteAction(), mixedHourAction(), mixedHourMinuteAction(), mixedMinuteAction(), mixedTemporalActionOff(), mixedTemporalActionOn(), normalAction(), temporalActionOff(), temporalActionOn(), and CoolBoard::update()\&.
.SS "void CoolBoardActor::doAction (const char * data)"
CoolBoardActor::doAction(sensor data ): This method is provided to automate the \fBCoolBoardActor\fP\&.
.PP
The result action is the result of checking the different flags of the actor (actif , temporal ,inverted, primaryType and secondaryType ) and the corresponding call to the appropriate helping method 
.PP
Definition at line 101 of file CoolBoardActor\&.cpp\&.
.PP
References CoolBoardActor::state::actif, actor, hourAction(), hourMinuteAction(), CoolBoardActor::state::inverted, invertedAction(), minuteAction(), mixedHourAction(), mixedHourMinuteAction(), mixedMinuteAction(), mixedTemporalActionOff(), mixedTemporalActionOn(), normalAction(), CoolBoardActor::state::primaryType, CoolBoardActor::state::secondaryType, CoolBoardActor::state::temporal, temporalActionOff(), and temporalActionOn()\&.
.PP
Referenced by CoolBoard::offLineMode(), and CoolBoard::onLineMode()\&.
.SS "void CoolBoardActor::normalAction (float measurment)"
CoolBoardActor::normalAction( measured value): This method is provided to handle normal actors\&. it changes the action according to wether the measured value is: > rangeHigh ( deactivate actor) or < rangeLow (activate actor ) 
.PP
Definition at line 532 of file CoolBoardActor\&.cpp\&.
.PP
References actor, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, and write()\&.
.PP
Referenced by doAction()\&.
.SS "void CoolBoardActor::invertedAction (float measurment)"
CoolBoardActor::invertedAction( measured value): This method is provided to handle inverted actors\&. it changes the action according to wether the measured value is: 
.PP
.RS 4
rangeHigh (activate actor) 
.RE
.PP
< rangeLow ( deactivate actor ) 
.PP
Definition at line 589 of file CoolBoardActor\&.cpp\&.
.PP
References actor, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, and write()\&.
.PP
Referenced by doAction()\&.
.SS "void CoolBoardActor::temporalActionOff ()"
\fBCoolBoardActor::temporalActionOff( )\fP: This method is provided to handle temporal actors\&. it changes the action according to:
.PP
currentTime - startTime > timeHigh : deactivate actor 
.PP
Definition at line 644 of file CoolBoardActor\&.cpp\&.
.PP
References CoolBoardActor::state::actif, CoolBoardActor::state::actifTime, actor, CoolBoardActor::state::inactifTime, CoolBoardActor::state::timeHigh, and write()\&.
.PP
Referenced by doAction()\&.
.SS "void CoolBoardActor::temporalActionOn ()"
\fBCoolBoardActor::temporalActionOn( )\fP: This method is provided to handle temporal actors\&. it changes the action according to :
.PP
currentTime - stopTime > timeLow : activate actor 
.PP
Definition at line 781 of file CoolBoardActor\&.cpp\&.
.PP
References CoolBoardActor::state::actif, CoolBoardActor::state::actifTime, actor, CoolBoardActor::state::inactifTime, CoolBoardActor::state::timeLow, and write()\&.
.PP
Referenced by doAction()\&.
.SS "void CoolBoardActor::mixedTemporalActionOff (float measurment)"
CoolBoardActor::mixedTemporalActionOff( measured value ): This method is provided to handle mixed temporal actors\&. it changes the action according to:
.PP
currentTime - startTime >= timeHigh : measured value >= rangeHigh : deactivate actor measured value < rangeHigh : activate actor 
.PP
Definition at line 695 of file CoolBoardActor\&.cpp\&.
.PP
References CoolBoardActor::state::actif, CoolBoardActor::state::actifTime, actor, CoolBoardActor::state::inactifTime, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::timeHigh, and write()\&.
.PP
Referenced by doAction()\&.
.SS "void CoolBoardActor::mixedTemporalActionOn (float measurment)"
CoolBoardActor::mixedTemporalActionOn( measured value ): This method is provided to handle mixed temporal actors\&. it changes the action according to :
.PP
currentTime - stopTime > timeLow : measured value >= rangeLow : deactivate actor measured value < rangeLow : activate actor 
.PP
Definition at line 833 of file CoolBoardActor\&.cpp\&.
.PP
References CoolBoardActor::state::actif, CoolBoardActor::state::actifTime, actor, CoolBoardActor::state::inactifTime, CoolBoardActor::state::rangeLow, CoolBoardActor::state::timeLow, and write()\&.
.PP
Referenced by doAction()\&.
.SS "void CoolBoardActor::hourAction (int hour)"
CoolBoardActor::hourAction( current hour ): This method is provided to handle hour actors\&. it changes the action according to:
.PP
hour >= hourLow : deactivate the actor hour >= hourHigh : activate the actor 
.PP
Definition at line 922 of file CoolBoardActor\&.cpp\&.
.PP
References actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, and write()\&.
.PP
Referenced by doAction()\&.
.SS "void CoolBoardActor::mixedHourAction (int hour, float measurment)"
CoolBoardActor::mixedHourAction( current hour, measured value ): This method is provided to handle mixed hour actors\&. it changes the action according to :
.PP
hour >= hourLow : -measuredValue >= rangeHigh : deactivate actor -measured < rangeHigh : activate actor
.PP
hour >= hourHigh : -measuredValue < rangeLow : activate actor -measuredValue >=rangeLow : activate actor 
.PP
Definition at line 983 of file CoolBoardActor\&.cpp\&.
.PP
References actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, and write()\&.
.PP
Referenced by doAction()\&.
.SS "void CoolBoardActor::minuteAction (int minute)"
CoolBoardActor::minteAction( current minute ): This method is provided to handle minute actors\&. it changes the action according to:
.PP
minute >= minuteLow : deactivate the actor minute >= minuteHigh : activate the actor 
.PP
Definition at line 1090 of file CoolBoardActor\&.cpp\&.
.PP
References actor, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, and write()\&.
.PP
Referenced by doAction()\&.
.SS "void CoolBoardActor::mixedMinuteAction (int minute, float measurment)"
CoolBoardActor::mixedMinuteAction( current minute, measured value ): This method is provided to handle mixed minute actors\&. it changes the action according to :
.PP
minute >= minuteLow : -measuredValue >= rangeHigh : deactivate actor -measured < rangeHigh : activate actor
.PP
minute >= minuteHigh : -measuredValue < rangeLow : activate actor -measuredValue >=rangeLow : activate actor 
.PP
Definition at line 1150 of file CoolBoardActor\&.cpp\&.
.PP
References actor, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, and write()\&.
.PP
Referenced by doAction()\&.
.SS "void CoolBoardActor::hourMinuteAction (int hour, int minute)"
CoolBoardActor::minteAction( current hour,current minute ): This method is provided to handle hour minute actors\&. it changes the action according to:
.PP
hour == hourLow : minute >= minuteLow : deactivate the actor
.PP
hour > hourLow : deactivate the actor
.PP
hour == hourHigh : minute >= minteHigh : activate the actor
.PP
hour > hourHigh : activate the actor 
.PP
Definition at line 1266 of file CoolBoardActor\&.cpp\&.
.PP
References actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, and write()\&.
.PP
Referenced by doAction()\&.
.SS "void CoolBoardActor::mixedHourMinuteAction (int hour, int minute, float measurment)"
CoolBoardActor::minteAction( current hour,current minute , measured Value ): This method is provided to handle hour minute actors\&. it changes the action according to:
.PP
hour == hourLow : minute >= minuteLow : measuredValue >= rangeHigh : deactivate actor measuredValue < rangeHigh : activate actor
.PP
hour > hourLow : measuredValue >= rangeHigh : deactivate actor measuredValue < rangeHigh : activate actor
.PP
hour == hourHigh : minute >= minteHigh : measuredValue >= rangeLow : deactivate actor measuredValue < rangeLow : activate actor
.PP
hour > hourHigh : measuredValue >= rangeLow : deactivate actor measuredValue < rangeLow : activate actor 
.PP
Definition at line 1371 of file CoolBoardActor\&.cpp\&.
.PP
References actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, and write()\&.
.PP
Referenced by doAction()\&.
.SS "bool CoolBoardActor::config ()"
\fBCoolBoardActor::config()\fP: This method is provided to configure the \fBCoolBoardActor\fP with a configuration file
.PP
\fBReturns:\fP
.RS 4
true if successful,false otherwise 
.RE
.PP

.PP
Definition at line 258 of file CoolBoardActor\&.cpp\&.
.PP
References CoolBoardActor::state::actif, actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, CoolBoardActor::state::inverted, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, CoolBoardActor::state::primaryType, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, CoolBoardActor::state::secondaryType, CoolBoardActor::state::temporal, CoolBoardActor::state::timeHigh, and CoolBoardActor::state::timeLow\&.
.PP
Referenced by CoolBoard::begin()\&.
.SS "void CoolBoardActor::printConf ()"
\fBCoolBoardActor::printConf()\fP: This method is provided to print the configuration to the Serial Monitor 
.PP
Definition at line 458 of file CoolBoardActor\&.cpp\&.
.PP
References CoolBoardActor::state::actif, actor, CoolBoardActor::state::hourHigh, CoolBoardActor::state::hourLow, CoolBoardActor::state::inverted, CoolBoardActor::state::minuteHigh, CoolBoardActor::state::minuteLow, CoolBoardActor::state::primaryType, CoolBoardActor::state::rangeHigh, CoolBoardActor::state::rangeLow, CoolBoardActor::state::secondaryType, CoolBoardActor::state::temporal, CoolBoardActor::state::timeHigh, and CoolBoardActor::state::timeLow\&.
.PP
Referenced by CoolBoard::begin()\&.
.SH "Member Data Documentation"
.PP 
.SS "struct \fBCoolBoardActor::state\fP CoolBoardActor::actor\fC [private]\fP"

.PP
Referenced by config(), doAction(), hourAction(), hourMinuteAction(), invertedAction(), minuteAction(), mixedHourAction(), mixedHourMinuteAction(), mixedMinuteAction(), mixedTemporalActionOff(), mixedTemporalActionOn(), normalAction(), printConf(), temporalActionOff(), and temporalActionOn()\&.
.SS "const int CoolBoardActor::pin = 15\fC [private]\fP"
pin Number value the only available pin that can be used to run a small actor is pin 15 
.PP
Definition at line 205 of file CoolBoardActor\&.h\&.
.PP
Referenced by begin(), and write()\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for CoolBoard API from the source code\&.
