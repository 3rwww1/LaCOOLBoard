.TH "CoolBoardActor.h" 3 "Mon Sep 11 2017" "CoolBoard API" \" -*- nroff -*-
.ad l
.nh
.SH NAME
CoolBoardActor.h \- \fBCoolBoardActor\fP Header file\&.  

.SH SYNOPSIS
.br
.PP
\fC#include 'Arduino\&.h'\fP
.br

.SS "Classes"

.in +1c
.ti -1c
.RI "class \fBCoolBoardActor\fP"
.br
.RI "This class manages the \fBCoolBoardActor\fP\&. "
.ti -1c
.RI "struct \fBCoolBoardActor::state\fP"
.br
.in -1c
.SH "Detailed Description"
.PP 
\fBCoolBoardActor\fP Header file\&. 


.PP
\fBVersion:\fP
.RS 4
1\&.0 
.RE
.PP
\fBAuthor:\fP
.RS 4
Mehdi Zemzem 
.RE
.PP
\fBVersion:\fP
.RS 4
0\&.0 
.RE
.PP
\fBAuthor:\fP
.RS 4
Simon Juif 
.RE
.PP
\fBDate:\fP
.RS 4
27/06/2017 
.RE
.PP
\fBCopyright:\fP
.RS 4
La Cool Co SAS 
.PP
MIT license Copyright (c) 2017 La Cool Co SAS
.RE
.PP
Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the 'Software'), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
.PP
The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software\&.
.PP
THE SOFTWARE IS PROVIDED 'AS IS', WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT\&. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE\&. 
.PP
Definition in file \fBCoolBoardActor\&.h\fP\&.
.SH "Class Documentation"
.PP 
.SH "struct CoolBoardActor::state"
.PP 
the Actor's state 
.PP
Definition at line 87 of file CoolBoardActor\&.h\&.
.PP
\fBClass Members:\fP
.RS 4
bool \fIactif\fP actif flag set to 1 when using an actor set to 0 otherwise 
.br
.PP
bool \fItemporal\fP temporal flag set to 1 to declare a temporal actor set to 0 otherwise 
.br
.PP
bool \fIinverted\fP inverted flag set to 1 to declare an inverted actor set to 0 to declare a normal actor 
.br
.PP
String \fIprimaryType\fP 'type':['temperature','hour']
.PP
the primary type is related to the sensor's type (type[0])
.PP
if both types are present and valid, the actor is a mixedActor 
.br
.PP
String \fIsecondaryType\fP 'type':['temperature','hour']
.PP
the secondary type if present is hour or minute or hourMinute (type[1])
.PP
if both types are present and valid, the actor is a mixedActor 
.br
.PP
int \fIrangeLow\fP 'low':[20,5000,18,10]
.PP
rangeLow : this is the minimum at which the actor becomes actif (low[0]) 
.br
.PP
unsigned long \fItimeLow\fP 'low':[20,5000,18,10]
.PP
timeLow : this is the time the actor is off in temporal mode (low[1]) (ms) 
.br
.PP
int \fIhourLow\fP 'low':[20,5000,18,10]
.PP
hour low :this is the hour when to turn off the actor in temporal/hour(hourMinute) mode (low[2] ) 
.br
.PP
int \fIminuteLow\fP 'low':[20,5000,18,10]
.PP
minute low :this is the minute when to turn off the actor in temporal/minute(hourMinute) mode (low[3]) 
.br
.PP
int \fIrangeHigh\fP 'high':[30,2000,17,1]
.PP
rangeHigh : this is the maximum at which the actor becomes inactif(high[0]) 
.br
.PP
unsigned long \fItimeHigh\fP 'high':[30,2000,17,1]
.PP
timeHigh : this is the time the actor is on in temporal mode(high[1]) (ms) 
.br
.PP
int \fIhourHigh\fP 'high':[30,2000,17,1]
.PP
hourHigh : this is the hour when to turn on the actor in temporal/hour(hourMinute) mode(high[2]) 
.br
.PP
int \fIminuteHigh\fP 'high':[30,2000,17,1]
.PP
minuteHigh : this is the minute when to turn on the actor in temporal/minute(hourMinute) mode (high[3]) 
.br
.PP
unsigned long \fIactifTime\fP actifTime : period of Time spent actif , used in Temporal mode in ms 
.br
.PP
unsigned long \fIinactifTime\fP inactifTime : period of Time spent inactif , used in Temporal mode in ms 
.br
.PP
.RE
.PP
.SH "Author"
.PP 
Generated automatically by Doxygen for CoolBoard API from the source code\&.
