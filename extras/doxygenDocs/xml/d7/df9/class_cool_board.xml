<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.14">
  <compounddef id="d7/df9/class_cool_board" kind="class" language="C++" prot="public">
    <compoundname>CoolBoard</compoundname>
    <includes refid="d5/d51/_cool_board_8h" local="no">CoolBoard.h</includes>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a42c2586fbb13ff7f06538e9284e8538d" prot="private" static="no" mutable="no">
        <type><ref refid="db/d0c/class_cool_file_system" kindref="compound">CoolFileSystem</ref></type>
        <definition>CoolFileSystem CoolBoard::fileSystem</definition>
        <argsstring></argsstring>
        <name>fileSystem</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="70" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="70" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="d9/d50/_cool_board_8cpp" startline="705" endline="890">config</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a8612756d3f73198cdde857a66f0fe690" compoundref="d9/d50/_cool_board_8cpp" startline="943" endline="1120">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1af102be5288bd7f7a8e59b13f86e26a00" prot="private" static="no" mutable="no">
        <type><ref refid="de/d46/class_cool_board_sensors" kindref="compound">CoolBoardSensors</ref></type>
        <definition>CoolBoardSensors CoolBoard::coolBoardSensors</definition>
        <argsstring></argsstring>
        <name>coolBoardSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="72" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="72" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="d9/d50/_cool_board_8cpp" startline="1153" endline="1217">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a1b1d3c684a5baa56b08486e192fd8e97" prot="private" static="no" mutable="no">
        <type><ref refid="de/dc0/class_cool_board_led" kindref="compound">CoolBoardLed</ref></type>
        <definition>CoolBoardLed CoolBoard::coolBoardLed</definition>
        <argsstring></argsstring>
        <name>coolBoardLed</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="74" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="74" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a519de78b807f8ec6463ff484eb925918" compoundref="d9/d50/_cool_board_8cpp" startline="224" endline="280">connect</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="d9/d50/_cool_board_8cpp" startline="705" endline="890">config</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a8612756d3f73198cdde857a66f0fe690" compoundref="d9/d50/_cool_board_8cpp" startline="943" endline="1120">update</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="d9/d50/_cool_board_8cpp" startline="1153" endline="1217">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a50d2a6716879d64a85f3c6b44ad63275" prot="private" static="no" mutable="no">
        <type><ref refid="d6/d49/class_cool_time" kindref="compound">CoolTime</ref></type>
        <definition>CoolTime CoolBoard::rtc</definition>
        <argsstring></argsstring>
        <name>rtc</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="76" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="76" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="d9/d50/_cool_board_8cpp" startline="1153" endline="1217">readSensors</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae7358fb6e623cfc81b775f5f1734909b" compoundref="d9/d50/_cool_board_8cpp" startline="1246" endline="1284">userData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1acd88e6003606b47479ebba81e4aceeca" prot="private" static="no" mutable="no">
        <type><ref refid="d7/d29/class_cool_wifi" kindref="compound">CoolWifi</ref></type>
        <definition>CoolWifi CoolBoard::wifiManager</definition>
        <argsstring></argsstring>
        <name>wifiManager</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="78" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="78" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ad7442cf4b62c7b0d5bd62a0f75ffc065" compoundref="d9/d50/_cool_board_8cpp" startline="176" endline="214">isConnected</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a519de78b807f8ec6463ff484eb925918" compoundref="d9/d50/_cool_board_8cpp" startline="224" endline="280">connect</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a2399f44d7c23c1149a335cb3b46d90f1" prot="private" static="no" mutable="no">
        <type><ref refid="d0/dd0/class_cool_m_q_t_t" kindref="compound">CoolMQTT</ref></type>
        <definition>CoolMQTT CoolBoard::mqtt</definition>
        <argsstring></argsstring>
        <name>mqtt</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="80" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="80" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ad7442cf4b62c7b0d5bd62a0f75ffc065" compoundref="d9/d50/_cool_board_8cpp" startline="176" endline="214">isConnected</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a519de78b807f8ec6463ff484eb925918" compoundref="d9/d50/_cool_board_8cpp" startline="224" endline="280">connect</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a8612756d3f73198cdde857a66f0fe690" compoundref="d9/d50/_cool_board_8cpp" startline="943" endline="1120">update</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae7358fb6e623cfc81b775f5f1734909b" compoundref="d9/d50/_cool_board_8cpp" startline="1246" endline="1284">userData</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a30b1357881b01ccbec676856a91e48e9" prot="private" static="no" mutable="no">
        <type><ref refid="df/d1d/class_jetpack" kindref="compound">Jetpack</ref></type>
        <definition>Jetpack CoolBoard::jetPack</definition>
        <argsstring></argsstring>
        <name>jetPack</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="82" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="82" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a8612756d3f73198cdde857a66f0fe690" compoundref="d9/d50/_cool_board_8cpp" startline="943" endline="1120">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1ad103718ce316006c4695b8eb312eaf11" prot="private" static="no" mutable="no">
        <type><ref refid="d6/d03/class_irene3000" kindref="compound">Irene3000</ref></type>
        <definition>Irene3000 CoolBoard::irene3000</definition>
        <argsstring></argsstring>
        <name>irene3000</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="84" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="84" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="d9/d50/_cool_board_8cpp" startline="1153" endline="1217">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a09e26264839c65873eb56af476eff6b2" prot="private" static="no" mutable="no">
        <type><ref refid="d1/d2f/class_external_sensors" kindref="compound">ExternalSensors</ref></type>
        <definition>ExternalSensors CoolBoard::externalSensors</definition>
        <argsstring></argsstring>
        <name>externalSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="86" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="86" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="d9/d50/_cool_board_8cpp" startline="1153" endline="1217">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a4ac693895c21025b8808653f2a4316e6" prot="private" static="no" mutable="no">
        <type><ref refid="dc/d69/class_cool_board_actor" kindref="compound">CoolBoardActor</ref></type>
        <definition>CoolBoardActor CoolBoard::onBoardActor</definition>
        <argsstring></argsstring>
        <name>onBoardActor</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="88" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="88" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a8612756d3f73198cdde857a66f0fe690" compoundref="d9/d50/_cool_board_8cpp" startline="943" endline="1120">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a6395459131d6889a3005f79c7a35e964" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolBoard::userActive</definition>
        <argsstring></argsstring>
        <name>userActive</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="90" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="90" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="d9/d50/_cool_board_8cpp" startline="705" endline="890">config</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a486507b8f0981d3cc671ed31c2145755" compoundref="d9/d50/_cool_board_8cpp" startline="899" endline="936">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a9c3f7ac625481ee2ae802a25d97a4ae0" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolBoard::ireneActive</definition>
        <argsstring></argsstring>
        <name>ireneActive</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="92" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="92" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="d9/d50/_cool_board_8cpp" startline="705" endline="890">config</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a486507b8f0981d3cc671ed31c2145755" compoundref="d9/d50/_cool_board_8cpp" startline="899" endline="936">printConf</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="d9/d50/_cool_board_8cpp" startline="1153" endline="1217">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a9be03a913d26e558328935ca3b59a75e" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolBoard::jetpackActive</definition>
        <argsstring></argsstring>
        <name>jetpackActive</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="94" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="94" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="d9/d50/_cool_board_8cpp" startline="705" endline="890">config</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a486507b8f0981d3cc671ed31c2145755" compoundref="d9/d50/_cool_board_8cpp" startline="899" endline="936">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a638b00b76aeb819ecfd4c10b8cdd7bb7" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolBoard::externalSensorsActive</definition>
        <argsstring></argsstring>
        <name>externalSensorsActive</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="96" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="96" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="d9/d50/_cool_board_8cpp" startline="705" endline="890">config</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a486507b8f0981d3cc671ed31c2145755" compoundref="d9/d50/_cool_board_8cpp" startline="899" endline="936">printConf</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="d9/d50/_cool_board_8cpp" startline="1153" endline="1217">readSensors</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a0a51b2287139f66c738101fb53139230" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolBoard::sleepActive</definition>
        <argsstring></argsstring>
        <name>sleepActive</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="98" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="98" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="d9/d50/_cool_board_8cpp" startline="705" endline="890">config</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a486507b8f0981d3cc671ed31c2145755" compoundref="d9/d50/_cool_board_8cpp" startline="899" endline="936">printConf</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a7c8e505a5804b109e112d5a03df6ea2b" prot="private" static="no" mutable="no">
        <type>bool</type>
        <definition>bool CoolBoard::manual</definition>
        <argsstring></argsstring>
        <name>manual</name>
        <initializer>=0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="100" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="100" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="d9/d50/_cool_board_8cpp" startline="705" endline="890">config</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a486507b8f0981d3cc671ed31c2145755" compoundref="d9/d50/_cool_board_8cpp" startline="899" endline="936">printConf</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a8612756d3f73198cdde857a66f0fe690" compoundref="d9/d50/_cool_board_8cpp" startline="943" endline="1120">update</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a84bc94413b64973e4aba8c467c97006c" prot="private" static="no" mutable="no">
        <type>unsigned long</type>
        <definition>unsigned long CoolBoard::logInterval</definition>
        <argsstring></argsstring>
        <name>logInterval</name>
        <initializer>=1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="102" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="102" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" compoundref="d9/d50/_cool_board_8cpp" startline="705" endline="890">config</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a486507b8f0981d3cc671ed31c2145755" compoundref="d9/d50/_cool_board_8cpp" startline="899" endline="936">printConf</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a7508e029f2ee17bb747ffab599285e0d" compoundref="d9/d50/_cool_board_8cpp" startline="1129" endline="1143">getLogInterval</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a427fb753dd8575bdf821c70a5c63d695" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String CoolBoard::data</definition>
        <argsstring></argsstring>
        <name>data</name>
        <initializer>=&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="104" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="104" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1a7b835fafd449e5282f7f91d787a2dc15" prot="private" static="no" mutable="no">
        <type>String</type>
        <definition>String CoolBoard::answer</definition>
        <argsstring></argsstring>
        <name>answer</name>
        <initializer>=&quot;&quot;</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="106" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="106" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="variable" id="d7/df9/class_cool_board_1af1fe1376fc66f93dee80b327ca695377" prot="private" static="no" mutable="no">
        <type>const int</type>
        <definition>const int CoolBoard::EnI2C</definition>
        <argsstring></argsstring>
        <name>EnI2C</name>
        <initializer>= 5</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="108" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="108" bodyend="-1"/>
        <referencedby refid="d7/df9/class_cool_board_1a8b88fd781e22e93025dd63474113b7e4" compoundref="d9/d50/_cool_board_8cpp" startline="28" endline="42">CoolBoard</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1a397b46fadab8f530a8cf4d914c561366" compoundref="d9/d50/_cool_board_8cpp" startline="1224" endline="1236">initReadI2C</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="d7/df9/class_cool_board_1a8b88fd781e22e93025dd63474113b7e4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>CoolBoard::CoolBoard</definition>
        <argsstring>()</argsstring>
        <name>CoolBoard</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d7/df9/class_cool_board_1a8b88fd781e22e93025dd63474113b7e4" kindref="member">CoolBoard::CoolBoard()</ref>: This Constructor is provided to start the I2C interface and Init the different used pins </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="39" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="28" bodyend="42"/>
        <references refid="d7/df9/class_cool_board_1af1fe1376fc66f93dee80b327ca695377" compoundref="d5/d51/_cool_board_8h" startline="108">EnI2C</references>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::begin</definition>
        <argsstring>()</argsstring>
        <name>begin</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" kindref="member">CoolBoard::begin()</ref>: This method is provided to configure and start the used CoolKit Parts. It also starts the first connection try If Serial is enabled,it prints the configuration of the used parts. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="41" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="53" bodyend="163"/>
        <references refid="d7/df9/class_cool_board_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="d5/d51/_cool_board_8h" startline="74">coolBoardLed</references>
        <references refid="de/dc0/class_cool_board_led_1a30fadd4cbec17ceea428bf7a32207e87" compoundref="d5/d32/_cool_board_led_8cpp" startline="250" endline="273">CoolBoardLed::write</references>
        <references refid="d7/df9/class_cool_board_1a397b46fadab8f530a8cf4d914c561366" compoundref="d9/d50/_cool_board_8cpp" startline="1224" endline="1236">initReadI2C</references>
        <references refid="d7/df9/class_cool_board_1af102be5288bd7f7a8e59b13f86e26a00" compoundref="d5/d51/_cool_board_8h" startline="72">coolBoardSensors</references>
        <references refid="de/d46/class_cool_board_sensors_1a9a218895c5423375c33c08f2c56fb23a" compoundref="dd/ddb/_cool_board_sensors_8cpp" startline="248" endline="425">CoolBoardSensors::config</references>
        <references refid="de/d46/class_cool_board_sensors_1a97095823ef7c8f5290812f1405b966b3" compoundref="dd/ddb/_cool_board_sensors_8cpp" startline="82" endline="124">CoolBoardSensors::begin</references>
        <references refid="d7/df9/class_cool_board_1a4ac693895c21025b8808653f2a4316e6" compoundref="d5/d51/_cool_board_8h" startline="88">onBoardActor</references>
        <references refid="dc/d69/class_cool_board_actor_1a5af5538fc7d169f63127e06d5219bcd4" compoundref="d2/d4b/_cool_board_actor_8cpp" startline="490" endline="682">CoolBoardActor::config</references>
        <references refid="dc/d69/class_cool_board_actor_1a7f4422fd85a5510bc2cdfd68e109be5e" compoundref="d2/d4b/_cool_board_actor_8cpp" startline="25" endline="39">CoolBoardActor::begin</references>
        <references refid="d7/df9/class_cool_board_1acd88e6003606b47479ebba81e4aceeca" compoundref="d5/d51/_cool_board_8h" startline="78">wifiManager</references>
        <references refid="d7/d29/class_cool_wifi_1a4eb2f6b9b09dd588964b88b6c70122c0" compoundref="dd/d56/_cool_wifi_8cpp" startline="275" endline="442">CoolWifi::config</references>
        <references refid="d7/d29/class_cool_wifi_1a46942fed90e475112cc10b78a32e7aaa" compoundref="dd/d56/_cool_wifi_8cpp" startline="29" endline="43">CoolWifi::begin</references>
        <references refid="d7/df9/class_cool_board_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="d5/d51/_cool_board_8h" startline="80">mqtt</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1a9b703de4f1358f0ee7a5e8c44979c648" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="603" endline="623">CoolMQTT::config</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1ac9248808641ebf3054ed0620ea9d0100" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="30" endline="45">CoolMQTT::begin</references>
        <references refid="de/dc0/class_cool_board_led_1a8ed3053a36f0ed4a131f43b5b17efb61" compoundref="d5/d32/_cool_board_led_8cpp" startline="392" endline="408">CoolBoardLed::printConf</references>
        <references refid="de/d46/class_cool_board_sensors_1af6fd79505815b204c178617ecf54c873" compoundref="dd/ddb/_cool_board_sensors_8cpp" startline="433" endline="470">CoolBoardSensors::printConf</references>
        <references refid="dc/d69/class_cool_board_actor_1aabb10e7aebc3249ffc940530de29f84a" compoundref="d2/d4b/_cool_board_actor_8cpp" startline="690" endline="754">CoolBoardActor::printConf</references>
        <references refid="d7/d29/class_cool_wifi_1a9e6105c6d13d35ec510f6633da9e0223" compoundref="dd/d56/_cool_wifi_8cpp" startline="493" endline="538">CoolWifi::printConf</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1a40553a0ad4b5ecf1cb4411ab54ca85fb" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="630" endline="660">CoolMQTT::printConf</references>
        <references refid="d7/df9/class_cool_board_1a9be03a913d26e558328935ca3b59a75e" compoundref="d5/d51/_cool_board_8h" startline="94">jetpackActive</references>
        <references refid="d7/df9/class_cool_board_1a30b1357881b01ccbec676856a91e48e9" compoundref="d5/d51/_cool_board_8h" startline="82">jetPack</references>
        <references refid="df/d1d/class_jetpack_1ab065ee83e244265a2223a22f3ee4a719" compoundref="d8/dcb/_jetpack_8cpp" startline="550" endline="778">Jetpack::config</references>
        <references refid="df/d1d/class_jetpack_1a5a53e1ebf7aaf3bf3e0d37ea64ca09a7" compoundref="d8/dcb/_jetpack_8cpp" startline="26" endline="42">Jetpack::begin</references>
        <references refid="df/d1d/class_jetpack_1ac54a7bb4f9166bee32052253d9b1d306" compoundref="d8/dcb/_jetpack_8cpp" startline="786" endline="870">Jetpack::printConf</references>
        <references refid="d7/df9/class_cool_board_1a9c3f7ac625481ee2ae802a25d97a4ae0" compoundref="d5/d51/_cool_board_8h" startline="92">ireneActive</references>
        <references refid="d7/df9/class_cool_board_1ad103718ce316006c4695b8eb312eaf11" compoundref="d5/d51/_cool_board_8h" startline="84">irene3000</references>
        <references refid="d6/d03/class_irene3000_1afed5c35e4b23963c157847ef27c11e9c" compoundref="db/dd5/irene3000_8cpp" startline="180" endline="385">Irene3000::config</references>
        <references refid="d6/d03/class_irene3000_1ad5891806c500ae1007afe52b9e304c2b" compoundref="db/dd5/irene3000_8cpp" startline="29" endline="100">Irene3000::begin</references>
        <references refid="d6/d03/class_irene3000_1a7bc2414100b5e19eacc6630fa34b2654" compoundref="db/dd5/irene3000_8cpp" startline="392" endline="426">Irene3000::printConf</references>
        <references refid="d7/df9/class_cool_board_1a638b00b76aeb819ecfd4c10b8cdd7bb7" compoundref="d5/d51/_cool_board_8h" startline="96">externalSensorsActive</references>
        <references refid="d7/df9/class_cool_board_1a09e26264839c65873eb56af476eff6b2" compoundref="d5/d51/_cool_board_8h" startline="86">externalSensors</references>
        <references refid="d1/d2f/class_external_sensors_1a862a4bd11346b37270d0244c2adabe5a" compoundref="d9/d09/_external_sensors_8cpp" startline="152" endline="307">ExternalSensors::config</references>
        <references refid="d1/d2f/class_external_sensors_1a58ede0d786a86417254708870f04a21e" compoundref="d9/d09/_external_sensors_8cpp" startline="35" endline="69">ExternalSensors::begin</references>
        <references refid="d1/d2f/class_external_sensors_1a78c2bf55084435dd51d3c559b2d3c6f3" compoundref="d9/d09/_external_sensors_8cpp" startline="360" endline="393">ExternalSensors::printConf</references>
        <references refid="de/dc0/class_cool_board_led_1a93d545679237e8cc858324367149775c" compoundref="d5/d32/_cool_board_led_8cpp" startline="134" endline="162">CoolBoardLed::fadeOut</references>
        <references refid="d7/df9/class_cool_board_1a519de78b807f8ec6463ff484eb925918" compoundref="d9/d50/_cool_board_8cpp" startline="224" endline="280">connect</references>
        <references refid="d7/df9/class_cool_board_1a50d2a6716879d64a85f3c6b44ad63275" compoundref="d5/d51/_cool_board_8h" startline="76">rtc</references>
        <references refid="d6/d49/class_cool_time_1a87c28260c1bc77091162cbcf1ee2e129" compoundref="db/d75/_cool_time_8cpp" startline="404" endline="526">CoolTime::config</references>
        <references refid="d6/d49/class_cool_time_1ab1976cf718b950bc31e003c3323b8adb" compoundref="db/d75/_cool_time_8cpp" startline="31" endline="46">CoolTime::begin</references>
        <references refid="d6/d49/class_cool_time_1af355e7f9b3898211cd2ff25eab5933b1" compoundref="db/d75/_cool_time_8cpp" startline="658" endline="675">CoolTime::printConf</references>
        <references refid="de/dc0/class_cool_board_led_1a96e1ea13003eee34c9dbcef340404426" compoundref="d5/d32/_cool_board_led_8cpp" startline="66" endline="93">CoolBoardLed::blink</references>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>bool</type>
        <definition>bool CoolBoard::config</definition>
        <argsstring>()</argsstring>
        <name>config</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" kindref="member">CoolBoard::config()</ref>: This method is provided to configure the <ref refid="d7/df9/class_cool_board" kindref="compound">CoolBoard</ref> : -log interval -irene3000 activated/deactivated -jetpack activated/deactivated -external Sensors activated/deactivated -mqtt server timeout</para><para><simplesect kind="return"><para>true if configuration is done, false otherwise </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="43" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="705" bodyend="890"/>
        <references refid="d7/df9/class_cool_board_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="d5/d51/_cool_board_8h" startline="70">fileSystem</references>
        <references refid="db/d0c/class_cool_file_system_1a6ba6f666ed4c530174f8569d2c636748" compoundref="de/d4b/_cool_file_system_8cpp" startline="27" endline="46">CoolFileSystem::begin</references>
        <references refid="d7/df9/class_cool_board_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="d5/d51/_cool_board_8h" startline="74">coolBoardLed</references>
        <references refid="de/dc0/class_cool_board_led_1a1b60e5e30bea96c49ed62ed1bf1ffc8b" compoundref="d5/d32/_cool_board_led_8cpp" startline="283" endline="384">CoolBoardLed::config</references>
        <references refid="de/dc0/class_cool_board_led_1ae3cbde8affcc6f011cbd698c8ef911f6" compoundref="d5/d32/_cool_board_led_8cpp" startline="224" endline="243">CoolBoardLed::begin</references>
        <references refid="de/dc0/class_cool_board_led_1ab778f5e7bed0ab74e3906d82110493c3" compoundref="d5/d32/_cool_board_led_8cpp" startline="99" endline="128">CoolBoardLed::fadeIn</references>
        <references refid="de/dc0/class_cool_board_led_1a96e1ea13003eee34c9dbcef340404426" compoundref="d5/d32/_cool_board_led_8cpp" startline="66" endline="93">CoolBoardLed::blink</references>
        <references refid="d7/df9/class_cool_board_1a6395459131d6889a3005f79c7a35e964" compoundref="d5/d51/_cool_board_8h" startline="90">userActive</references>
        <references refid="d7/df9/class_cool_board_1a84bc94413b64973e4aba8c467c97006c" compoundref="d5/d51/_cool_board_8h" startline="102">logInterval</references>
        <references refid="d7/df9/class_cool_board_1a9c3f7ac625481ee2ae802a25d97a4ae0" compoundref="d5/d51/_cool_board_8h" startline="92">ireneActive</references>
        <references refid="d7/df9/class_cool_board_1a9be03a913d26e558328935ca3b59a75e" compoundref="d5/d51/_cool_board_8h" startline="94">jetpackActive</references>
        <references refid="d7/df9/class_cool_board_1a638b00b76aeb819ecfd4c10b8cdd7bb7" compoundref="d5/d51/_cool_board_8h" startline="96">externalSensorsActive</references>
        <references refid="d7/df9/class_cool_board_1a0a51b2287139f66c738101fb53139230" compoundref="d5/d51/_cool_board_8h" startline="98">sleepActive</references>
        <references refid="d7/df9/class_cool_board_1a7c8e505a5804b109e112d5a03df6ea2b" compoundref="d5/d51/_cool_board_8h" startline="100">manual</references>
        <references refid="de/dc0/class_cool_board_led_1ad5f0de4c628cbfbf49896042831c64ad" compoundref="d5/d32/_cool_board_led_8cpp" startline="168" endline="199">CoolBoardLed::strobe</references>
        <references refid="de/dc0/class_cool_board_led_1a93d545679237e8cc858324367149775c" compoundref="d5/d32/_cool_board_led_8cpp" startline="134" endline="162">CoolBoardLed::fadeOut</references>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1a8612756d3f73198cdde857a66f0fe690" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::update</definition>
        <argsstring>(const char *answer)</argsstring>
        <name>update</name>
        <param>
          <type>const char *</type>
          <declname>answer</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolBoard::update(mqtt answer): This method is provided to handle the configuration update of the different parts </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="45" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="943" bodyend="1120"/>
        <references refid="d7/df9/class_cool_board_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="d5/d51/_cool_board_8h" startline="74">coolBoardLed</references>
        <references refid="de/dc0/class_cool_board_led_1ab778f5e7bed0ab74e3906d82110493c3" compoundref="d5/d32/_cool_board_led_8cpp" startline="99" endline="128">CoolBoardLed::fadeIn</references>
        <references refid="d7/df9/class_cool_board_1a7c8e505a5804b109e112d5a03df6ea2b" compoundref="d5/d51/_cool_board_8h" startline="100">manual</references>
        <references refid="d7/df9/class_cool_board_1a30b1357881b01ccbec676856a91e48e9" compoundref="d5/d51/_cool_board_8h" startline="82">jetPack</references>
        <references refid="df/d1d/class_jetpack_1a79ae7bc3c1828a0551a7c005c4f8bd00" compoundref="d8/dcb/_jetpack_8cpp" startline="84" endline="108">Jetpack::writeBit</references>
        <references refid="d7/df9/class_cool_board_1a4ac693895c21025b8808653f2a4316e6" compoundref="d5/d51/_cool_board_8h" startline="88">onBoardActor</references>
        <references refid="dc/d69/class_cool_board_actor_1a958786ff01ea1056ee72c72d439f86da" compoundref="d2/d4b/_cool_board_actor_8cpp" startline="48" endline="65">CoolBoardActor::write</references>
        <references refid="d7/df9/class_cool_board_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="d5/d51/_cool_board_8h" startline="70">fileSystem</references>
        <references refid="db/d0c/class_cool_file_system_1adfa8e2e80641ae6f0cceabd348a9b841" compoundref="de/d4b/_cool_file_system_8cpp" startline="367" endline="748">CoolFileSystem::updateConfigFiles</references>
        <references refid="d7/df9/class_cool_board_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="d5/d51/_cool_board_8h" startline="80">mqtt</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1ace977b3e90ab14b1199fe5c4fb0a13ec" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="147" endline="188">CoolMQTT::publish</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1aa5eaae967b562b62cbcf2b8d81f6e5d5" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="250" endline="277">CoolMQTT::mqttLoop</references>
        <references refid="de/dc0/class_cool_board_led_1ad5f0de4c628cbfbf49896042831c64ad" compoundref="d5/d32/_cool_board_led_8cpp" startline="168" endline="199">CoolBoardLed::strobe</references>
        <references refid="de/dc0/class_cool_board_led_1a93d545679237e8cc858324367149775c" compoundref="d5/d32/_cool_board_led_8cpp" startline="134" endline="162">CoolBoardLed::fadeOut</references>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::offLineMode</definition>
        <argsstring>()</argsstring>
        <name>offLineMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolBoard::offlineMode(): This method is provided to manage the offLine mode: -read sensors -do actions -save data in the file system -if there is WiFi but no Internet : make data available over AP -if there is no connection : retry to connect </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="47" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="551" bodyend="691"/>
        <references refid="d7/df9/class_cool_board_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="d5/d51/_cool_board_8h" startline="74">coolBoardLed</references>
        <references refid="de/dc0/class_cool_board_led_1af1cacbaa88db8bcf6042c1083ba41155" compoundref="d5/d32/_cool_board_led_8cpp" startline="25" endline="59">CoolBoardLed::fade</references>
        <references refid="d7/df9/class_cool_board_1a6395459131d6889a3005f79c7a35e964" compoundref="d5/d51/_cool_board_8h" startline="90">userActive</references>
        <references refid="de/dc0/class_cool_board_led_1ab778f5e7bed0ab74e3906d82110493c3" compoundref="d5/d32/_cool_board_led_8cpp" startline="99" endline="128">CoolBoardLed::fadeIn</references>
        <references refid="de/dc0/class_cool_board_led_1a96e1ea13003eee34c9dbcef340404426" compoundref="d5/d32/_cool_board_led_8cpp" startline="66" endline="93">CoolBoardLed::blink</references>
        <references refid="d7/df9/class_cool_board_1a427fb753dd8575bdf821c70a5c63d695" compoundref="d5/d51/_cool_board_8h" startline="104">data</references>
        <references refid="d7/df9/class_cool_board_1ae7358fb6e623cfc81b775f5f1734909b" compoundref="d9/d50/_cool_board_8cpp" startline="1246" endline="1284">userData</references>
        <references refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="d9/d50/_cool_board_8cpp" startline="1153" endline="1217">readSensors</references>
        <references refid="de/dc0/class_cool_board_led_1a93d545679237e8cc858324367149775c" compoundref="d5/d32/_cool_board_led_8cpp" startline="134" endline="162">CoolBoardLed::fadeOut</references>
        <references refid="d7/df9/class_cool_board_1a9be03a913d26e558328935ca3b59a75e" compoundref="d5/d51/_cool_board_8h" startline="94">jetpackActive</references>
        <references refid="d7/df9/class_cool_board_1a30b1357881b01ccbec676856a91e48e9" compoundref="d5/d51/_cool_board_8h" startline="82">jetPack</references>
        <references refid="df/d1d/class_jetpack_1a9e703197093094b963f9ad57817495b8" compoundref="d8/dcb/_jetpack_8cpp" startline="166" endline="541">Jetpack::doAction</references>
        <references refid="d7/df9/class_cool_board_1a4ac693895c21025b8808653f2a4316e6" compoundref="d5/d51/_cool_board_8h" startline="88">onBoardActor</references>
        <references refid="dc/d69/class_cool_board_actor_1a96a45658d32c6b95caa2f385c7da32cd" compoundref="d2/d4b/_cool_board_actor_8cpp" startline="123" endline="481">CoolBoardActor::doAction</references>
        <references refid="d7/df9/class_cool_board_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="d5/d51/_cool_board_8h" startline="70">fileSystem</references>
        <references refid="db/d0c/class_cool_file_system_1afa3a4feae94871d4d3b6bebb701c2e67" compoundref="de/d4b/_cool_file_system_8cpp" startline="58" endline="151">CoolFileSystem::saveSensorData</references>
        <references refid="d7/df9/class_cool_board_1acd88e6003606b47479ebba81e4aceeca" compoundref="d5/d51/_cool_board_8h" startline="78">wifiManager</references>
        <references refid="d7/d29/class_cool_wifi_1a1c7b4d82a4098d346e7593dce92039fa" compoundref="dd/d56/_cool_wifi_8cpp" startline="59" endline="72">CoolWifi::state</references>
        <references refid="d7/df9/class_cool_board_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="d5/d51/_cool_board_8h" startline="80">mqtt</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1a5d003307eff78efbd585e42b43b72b6d" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="63" endline="76">CoolMQTT::state</references>
        <references refid="d7/d29/class_cool_wifi_1a7c857f27161782f5ef1d62d552aff971" compoundref="dd/d56/_cool_wifi_8cpp" startline="209" endline="262">CoolWifi::connectAP</references>
        <references refid="d7/df9/class_cool_board_1a519de78b807f8ec6463ff484eb925918" compoundref="d9/d50/_cool_board_8cpp" startline="224" endline="280">connect</references>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::onLineMode</definition>
        <argsstring>()</argsstring>
        <name>onLineMode</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" kindref="member">CoolBoard::onLineMode()</ref>: This method is provided to manage the online mode: -update clock -read sensor -do actions -publish data -read answer -update config </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="49" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="292" bodyend="539"/>
        <references refid="d7/df9/class_cool_board_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="d5/d51/_cool_board_8h" startline="74">coolBoardLed</references>
        <references refid="de/dc0/class_cool_board_led_1ab778f5e7bed0ab74e3906d82110493c3" compoundref="d5/d32/_cool_board_led_8cpp" startline="99" endline="128">CoolBoardLed::fadeIn</references>
        <references refid="d7/df9/class_cool_board_1a427fb753dd8575bdf821c70a5c63d695" compoundref="d5/d51/_cool_board_8h" startline="104">data</references>
        <references refid="d7/df9/class_cool_board_1a7b835fafd449e5282f7f91d787a2dc15" compoundref="d5/d51/_cool_board_8h" startline="106">answer</references>
        <references refid="d7/df9/class_cool_board_1a42c2586fbb13ff7f06538e9284e8538d" compoundref="d5/d51/_cool_board_8h" startline="70">fileSystem</references>
        <references refid="db/d0c/class_cool_file_system_1ac86a40e7c3a1842f7342f698d34324f9" compoundref="de/d4b/_cool_file_system_8cpp" startline="759" endline="805">CoolFileSystem::isDataSaved</references>
        <references refid="de/dc0/class_cool_board_led_1ad5f0de4c628cbfbf49896042831c64ad" compoundref="d5/d32/_cool_board_led_8cpp" startline="168" endline="199">CoolBoardLed::strobe</references>
        <references refid="d7/df9/class_cool_board_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="d5/d51/_cool_board_8h" startline="80">mqtt</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1ace977b3e90ab14b1199fe5c4fb0a13ec" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="147" endline="188">CoolMQTT::publish</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1aa5eaae967b562b62cbcf2b8d81f6e5d5" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="250" endline="277">CoolMQTT::mqttLoop</references>
        <references refid="db/d0c/class_cool_file_system_1a3223ffff4266a6300988fab956d6b4b2" compoundref="de/d4b/_cool_file_system_8cpp" startline="819" endline="969">CoolFileSystem::getSensorSavedData</references>
        <references refid="de/dc0/class_cool_board_led_1a93d545679237e8cc858324367149775c" compoundref="d5/d32/_cool_board_led_8cpp" startline="134" endline="162">CoolBoardLed::fadeOut</references>
        <references refid="de/dc0/class_cool_board_led_1a96e1ea13003eee34c9dbcef340404426" compoundref="d5/d32/_cool_board_led_8cpp" startline="66" endline="93">CoolBoardLed::blink</references>
        <references refid="d7/df9/class_cool_board_1a50d2a6716879d64a85f3c6b44ad63275" compoundref="d5/d51/_cool_board_8h" startline="76">rtc</references>
        <references refid="d6/d49/class_cool_time_1aae601f795452cfa48d9fb337aed483a8" compoundref="db/d75/_cool_time_8cpp" startline="53" endline="79">CoolTime::update</references>
        <references refid="d7/df9/class_cool_board_1a6395459131d6889a3005f79c7a35e964" compoundref="d5/d51/_cool_board_8h" startline="90">userActive</references>
        <references refid="d7/df9/class_cool_board_1ae7358fb6e623cfc81b775f5f1734909b" compoundref="d9/d50/_cool_board_8cpp" startline="1246" endline="1284">userData</references>
        <references refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="d9/d50/_cool_board_8cpp" startline="1153" endline="1217">readSensors</references>
        <references refid="de/dc0/class_cool_board_led_1af1cacbaa88db8bcf6042c1083ba41155" compoundref="d5/d32/_cool_board_led_8cpp" startline="25" endline="59">CoolBoardLed::fade</references>
        <references refid="d7/df9/class_cool_board_1a9be03a913d26e558328935ca3b59a75e" compoundref="d5/d51/_cool_board_8h" startline="94">jetpackActive</references>
        <references refid="d7/df9/class_cool_board_1a7c8e505a5804b109e112d5a03df6ea2b" compoundref="d5/d51/_cool_board_8h" startline="100">manual</references>
        <references refid="d7/df9/class_cool_board_1a30b1357881b01ccbec676856a91e48e9" compoundref="d5/d51/_cool_board_8h" startline="82">jetPack</references>
        <references refid="df/d1d/class_jetpack_1a9e703197093094b963f9ad57817495b8" compoundref="d8/dcb/_jetpack_8cpp" startline="166" endline="541">Jetpack::doAction</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1ae3c18f6ae9723746d32765f1c8f176ca" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="365" endline="393">CoolMQTT::read</references>
        <references refid="d7/df9/class_cool_board_1a8612756d3f73198cdde857a66f0fe690" compoundref="d9/d50/_cool_board_8cpp" startline="943" endline="1120">update</references>
        <references refid="d7/df9/class_cool_board_1a4ac693895c21025b8808653f2a4316e6" compoundref="d5/d51/_cool_board_8h" startline="88">onBoardActor</references>
        <references refid="dc/d69/class_cool_board_actor_1a96a45658d32c6b95caa2f385c7da32cd" compoundref="d2/d4b/_cool_board_actor_8cpp" startline="123" endline="481">CoolBoardActor::doAction</references>
        <references refid="d7/df9/class_cool_board_1a0a51b2287139f66c738101fb53139230" compoundref="d5/d51/_cool_board_8h" startline="98">sleepActive</references>
        <references refid="d7/df9/class_cool_board_1a7508e029f2ee17bb747ffab599285e0d" compoundref="d9/d50/_cool_board_8cpp" startline="1129" endline="1143">getLogInterval</references>
        <references refid="d7/df9/class_cool_board_1a069952cdcb2e7f68518aa429eceadb6e" compoundref="d9/d50/_cool_board_8cpp" startline="1293" endline="1305">sleep</references>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1a519de78b807f8ec6463ff484eb925918" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CoolBoard::connect</definition>
        <argsstring>()</argsstring>
        <name>connect</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d7/df9/class_cool_board_1a519de78b807f8ec6463ff484eb925918" kindref="member">CoolBoard::connect()</ref>: This method is provided to manage the network connection and the mqtt connection.</para><para><simplesect kind="return"><para>mqtt client state </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="51" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="224" bodyend="280"/>
        <references refid="d7/df9/class_cool_board_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="d5/d51/_cool_board_8h" startline="74">coolBoardLed</references>
        <references refid="de/dc0/class_cool_board_led_1a30fadd4cbec17ceea428bf7a32207e87" compoundref="d5/d32/_cool_board_led_8cpp" startline="250" endline="273">CoolBoardLed::write</references>
        <references refid="d7/df9/class_cool_board_1acd88e6003606b47479ebba81e4aceeca" compoundref="d5/d51/_cool_board_8h" startline="78">wifiManager</references>
        <references refid="d7/d29/class_cool_wifi_1ad060353050f40d032a2dbf9e54a768bf" compoundref="dd/d56/_cool_wifi_8cpp" startline="82" endline="149">CoolWifi::connect</references>
        <references refid="d7/d29/class_cool_wifi_1a1c7b4d82a4098d346e7593dce92039fa" compoundref="dd/d56/_cool_wifi_8cpp" startline="59" endline="72">CoolWifi::state</references>
        <references refid="d7/df9/class_cool_board_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="d5/d51/_cool_board_8h" startline="80">mqtt</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1a50075d0ab23a327ab897fd6adad20eda" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="86" endline="137">CoolMQTT::connect</references>
        <references refid="d7/df9/class_cool_board_1a7508e029f2ee17bb747ffab599285e0d" compoundref="d9/d50/_cool_board_8cpp" startline="1129" endline="1143">getLogInterval</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1a5d003307eff78efbd585e42b43b72b6d" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="63" endline="76">CoolMQTT::state</references>
        <references refid="de/dc0/class_cool_board_led_1a96e1ea13003eee34c9dbcef340404426" compoundref="d5/d32/_cool_board_led_8cpp" startline="66" endline="93">CoolBoardLed::blink</references>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1ad7442cf4b62c7b0d5bd62a0f75ffc065" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int CoolBoard::isConnected</definition>
        <argsstring>()</argsstring>
        <name>isConnected</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d7/df9/class_cool_board_1ad7442cf4b62c7b0d5bd62a0f75ffc065" kindref="member">CoolBoard::isConnected()</ref></para><para>This method is provided to check if the card is connected to Wifi and MQTT</para><para><simplesect kind="return"><para>0 : connected -1: Wifi Not Connected -2: MQTT Not Connected </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="53" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="176" bodyend="214"/>
        <references refid="d7/df9/class_cool_board_1acd88e6003606b47479ebba81e4aceeca" compoundref="d5/d51/_cool_board_8h" startline="78">wifiManager</references>
        <references refid="d7/d29/class_cool_wifi_1a1c7b4d82a4098d346e7593dce92039fa" compoundref="dd/d56/_cool_wifi_8cpp" startline="59" endline="72">CoolWifi::state</references>
        <references refid="d7/df9/class_cool_board_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="d5/d51/_cool_board_8h" startline="80">mqtt</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1a5d003307eff78efbd585e42b43b72b6d" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="63" endline="76">CoolMQTT::state</references>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1a7508e029f2ee17bb747ffab599285e0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>unsigned long</type>
        <definition>unsigned long CoolBoard::getLogInterval</definition>
        <argsstring>()</argsstring>
        <name>getLogInterval</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d7/df9/class_cool_board_1a7508e029f2ee17bb747ffab599285e0d" kindref="member">CoolBoard::getLogInterval()</ref>: This method is provided to get the log interval</para><para><simplesect kind="return"><para>interval value in s </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="55" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="1129" bodyend="1143"/>
        <references refid="d7/df9/class_cool_board_1a84bc94413b64973e4aba8c467c97006c" compoundref="d5/d51/_cool_board_8h" startline="102">logInterval</references>
        <referencedby refid="d7/df9/class_cool_board_1a519de78b807f8ec6463ff484eb925918" compoundref="d9/d50/_cool_board_8cpp" startline="224" endline="280">connect</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1a486507b8f0981d3cc671ed31c2145755" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::printConf</definition>
        <argsstring>()</argsstring>
        <name>printConf</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d7/df9/class_cool_board_1a486507b8f0981d3cc671ed31c2145755" kindref="member">CoolBoard::printConf()</ref>: This method is provided to print the configuration to the Serial Monitor. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="57" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="899" bodyend="936"/>
        <references refid="d7/df9/class_cool_board_1a84bc94413b64973e4aba8c467c97006c" compoundref="d5/d51/_cool_board_8h" startline="102">logInterval</references>
        <references refid="d7/df9/class_cool_board_1a9c3f7ac625481ee2ae802a25d97a4ae0" compoundref="d5/d51/_cool_board_8h" startline="92">ireneActive</references>
        <references refid="d7/df9/class_cool_board_1a9be03a913d26e558328935ca3b59a75e" compoundref="d5/d51/_cool_board_8h" startline="94">jetpackActive</references>
        <references refid="d7/df9/class_cool_board_1a638b00b76aeb819ecfd4c10b8cdd7bb7" compoundref="d5/d51/_cool_board_8h" startline="96">externalSensorsActive</references>
        <references refid="d7/df9/class_cool_board_1a0a51b2287139f66c738101fb53139230" compoundref="d5/d51/_cool_board_8h" startline="98">sleepActive</references>
        <references refid="d7/df9/class_cool_board_1a6395459131d6889a3005f79c7a35e964" compoundref="d5/d51/_cool_board_8h" startline="90">userActive</references>
        <references refid="d7/df9/class_cool_board_1a7c8e505a5804b109e112d5a03df6ea2b" compoundref="d5/d51/_cool_board_8h" startline="100">manual</references>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1a069952cdcb2e7f68518aa429eceadb6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::sleep</definition>
        <argsstring>(unsigned long interval)</argsstring>
        <name>sleep</name>
        <param>
          <type>unsigned long</type>
          <declname>interval</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>CoolBoard::sleep(int interval): This method is provided to allow the board to enter deepSleep mode for a period of time equal to interval in s </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="59" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="1293" bodyend="1305"/>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String CoolBoard::readSensors</definition>
        <argsstring>()</argsstring>
        <name>readSensors</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" kindref="member">CoolBoard::readSensors()</ref>: This method is provided to read and format all the sensors data in a single json.</para><para><simplesect kind="return"><para>json string of all the sensors read. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="61" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="1153" bodyend="1217"/>
        <references refid="d7/df9/class_cool_board_1a1b1d3c684a5baa56b08486e192fd8e97" compoundref="d5/d51/_cool_board_8h" startline="74">coolBoardLed</references>
        <references refid="de/dc0/class_cool_board_led_1ab778f5e7bed0ab74e3906d82110493c3" compoundref="d5/d32/_cool_board_led_8cpp" startline="99" endline="128">CoolBoardLed::fadeIn</references>
        <references refid="de/dc0/class_cool_board_led_1ad5f0de4c628cbfbf49896042831c64ad" compoundref="d5/d32/_cool_board_led_8cpp" startline="168" endline="199">CoolBoardLed::strobe</references>
        <references refid="d7/df9/class_cool_board_1a397b46fadab8f530a8cf4d914c561366" compoundref="d9/d50/_cool_board_8cpp" startline="1224" endline="1236">initReadI2C</references>
        <references refid="d7/df9/class_cool_board_1af102be5288bd7f7a8e59b13f86e26a00" compoundref="d5/d51/_cool_board_8h" startline="72">coolBoardSensors</references>
        <references refid="de/d46/class_cool_board_sensors_1a91badb2539d91fda8679f2a597874c48" compoundref="dd/ddb/_cool_board_sensors_8cpp" startline="152" endline="237">CoolBoardSensors::read</references>
        <references refid="d7/df9/class_cool_board_1a638b00b76aeb819ecfd4c10b8cdd7bb7" compoundref="d5/d51/_cool_board_8h" startline="96">externalSensorsActive</references>
        <references refid="d7/df9/class_cool_board_1a09e26264839c65873eb56af476eff6b2" compoundref="d5/d51/_cool_board_8h" startline="86">externalSensors</references>
        <references refid="d1/d2f/class_external_sensors_1a53177b81eca3be89508b5511ddcd00fc" compoundref="d9/d09/_external_sensors_8cpp" startline="79" endline="142">ExternalSensors::read</references>
        <references refid="d7/df9/class_cool_board_1a9c3f7ac625481ee2ae802a25d97a4ae0" compoundref="d5/d51/_cool_board_8h" startline="92">ireneActive</references>
        <references refid="d7/df9/class_cool_board_1ad103718ce316006c4695b8eb312eaf11" compoundref="d5/d51/_cool_board_8h" startline="84">irene3000</references>
        <references refid="d6/d03/class_irene3000_1a852a170feea994ea1df01c6b245b5d9a" compoundref="db/dd5/irene3000_8cpp" startline="110" endline="171">Irene3000::read</references>
        <references refid="d7/df9/class_cool_board_1a50d2a6716879d64a85f3c6b44ad63275" compoundref="d5/d51/_cool_board_8h" startline="76">rtc</references>
        <references refid="d6/d49/class_cool_time_1a7a7501c5ca77dd1248bea704c44f986c" compoundref="db/d75/_cool_time_8cpp" startline="140" endline="173">CoolTime::getTimeDate</references>
        <references refid="de/dc0/class_cool_board_led_1a93d545679237e8cc858324367149775c" compoundref="d5/d32/_cool_board_led_8cpp" startline="134" endline="162">CoolBoardLed::fadeOut</references>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1a397b46fadab8f530a8cf4d914c561366" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void CoolBoard::initReadI2C</definition>
        <argsstring>()</argsstring>
        <name>initReadI2C</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d7/df9/class_cool_board_1a397b46fadab8f530a8cf4d914c561366" kindref="member">CoolBoard::initReadI2C()</ref>: This method is provided to enable the I2C Interface. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="63" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="1224" bodyend="1236"/>
        <references refid="d7/df9/class_cool_board_1af1fe1376fc66f93dee80b327ca695377" compoundref="d5/d51/_cool_board_8h" startline="108">EnI2C</references>
        <referencedby refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" compoundref="d9/d50/_cool_board_8cpp" startline="53" endline="163">begin</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" compoundref="d9/d50/_cool_board_8cpp" startline="1153" endline="1217">readSensors</referencedby>
      </memberdef>
      <memberdef kind="function" id="d7/df9/class_cool_board_1ae7358fb6e623cfc81b775f5f1734909b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>String</type>
        <definition>String CoolBoard::userData</definition>
        <argsstring>()</argsstring>
        <name>userData</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para><ref refid="d7/df9/class_cool_board_1ae7358fb6e623cfc81b775f5f1734909b" kindref="member">CoolBoard::userData()</ref>: This method is provided to return the user&apos;s data.</para><para><simplesect kind="return"><para>json string of the user&apos;s data </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="65" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.cpp" bodystart="1246" bodyend="1284"/>
        <references refid="d7/df9/class_cool_board_1a2399f44d7c23c1149a335cb3b46d90f1" compoundref="d5/d51/_cool_board_8h" startline="80">mqtt</references>
        <references refid="d0/dd0/class_cool_m_q_t_t_1a373cc92fca7760d886f02d8a6e5b3f63" compoundref="dc/d73/_cool_m_q_t_t_8cpp" startline="666" endline="679">CoolMQTT::getUser</references>
        <references refid="d7/df9/class_cool_board_1a50d2a6716879d64a85f3c6b44ad63275" compoundref="d5/d51/_cool_board_8h" startline="76">rtc</references>
        <references refid="d6/d49/class_cool_time_1ac4f32ee513c1328d984306645e8785a4" compoundref="db/d75/_cool_time_8cpp" startline="183" endline="211">CoolTime::getESDate</references>
        <referencedby refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" compoundref="d9/d50/_cool_board_8cpp" startline="292" endline="539">onLineMode</referencedby>
        <referencedby refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" compoundref="d9/d50/_cool_board_8cpp" startline="551" endline="691">offLineMode</referencedby>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>This class manages the <ref refid="d7/df9/class_cool_board" kindref="compound">CoolBoard</ref> and all of Its functions. </para>    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <collaborationgraph>
      <node id="40">
        <label>CoolBoardActor</label>
        <link refid="dc/d69/class_cool_board_actor"/>
        <childnode refid="41" relation="usage">
          <edgelabel>-actor</edgelabel>
        </childnode>
      </node>
      <node id="33">
        <label>CoolBoardSensors::lightActive</label>
        <link refid="df/da3/struct_cool_board_sensors_1_1light_active"/>
      </node>
      <node id="36">
        <label>Adafruit_ADS1115</label>
        <link refid="d8/dab/class_adafruit___a_d_s1115"/>
        <childnode refid="37" relation="public-inheritance">
        </childnode>
      </node>
      <node id="24">
        <label>ExternalSensors</label>
        <link refid="d1/d2f/class_external_sensors"/>
        <childnode refid="25" relation="usage">
          <edgelabel>-sensors</edgelabel>
        </childnode>
      </node>
      <node id="38">
        <label>Irene3000::parameters_T</label>
        <link refid="df/d27/struct_irene3000_1_1parameters___t"/>
      </node>
      <node id="26">
        <label>BaseExternalSensor</label>
        <link refid="d1/d68/class_base_external_sensor"/>
      </node>
      <node id="31">
        <label>SensorCalibration</label>
        <link refid="d0/d9c/struct_sensor_calibration"/>
      </node>
      <node id="28">
        <label>CoolSI114X</label>
        <link refid="dd/d67/class_cool_s_i114_x"/>
      </node>
      <node id="22">
        <label>CoolWifi</label>
        <link refid="d7/d29/class_cool_wifi"/>
      </node>
      <node id="25">
        <label>ExternalSensors::sensor</label>
        <link refid="dd/d58/struct_external_sensors_1_1sensor"/>
        <childnode refid="26" relation="usage">
          <edgelabel>+exSensor</edgelabel>
        </childnode>
      </node>
      <node id="20">
        <label>CoolMQTT</label>
        <link refid="d0/dd0/class_cool_m_q_t_t"/>
        <childnode refid="21" relation="usage">
          <edgelabel>-client</edgelabel>
        </childnode>
      </node>
      <node id="27">
        <label>CoolBoardSensors</label>
        <link refid="de/d46/class_cool_board_sensors"/>
        <childnode refid="28" relation="usage">
          <edgelabel>+lightSensor</edgelabel>
        </childnode>
        <childnode refid="29" relation="usage">
          <edgelabel>+envSensor</edgelabel>
        </childnode>
        <childnode refid="32" relation="usage">
          <edgelabel>-airDataActive</edgelabel>
        </childnode>
        <childnode refid="33" relation="usage">
          <edgelabel>-lightDataActive</edgelabel>
        </childnode>
      </node>
      <node id="34">
        <label>Irene3000</label>
        <link refid="d6/d03/class_irene3000"/>
        <childnode refid="35" relation="usage">
          <edgelabel>-waterTemp</edgelabel>
          <edgelabel>-phProbe</edgelabel>
          <edgelabel>-adc2</edgelabel>
        </childnode>
        <childnode refid="36" relation="usage">
          <edgelabel>-ads</edgelabel>
        </childnode>
        <childnode refid="38" relation="usage">
          <edgelabel>-params</edgelabel>
        </childnode>
      </node>
      <node id="30">
        <label>SensorSettings</label>
        <link refid="d8/dd4/struct_sensor_settings"/>
      </node>
      <node id="42">
        <label>Jetpack</label>
        <link refid="df/d1d/class_jetpack"/>
        <childnode refid="43" relation="usage">
          <edgelabel>-actors</edgelabel>
        </childnode>
      </node>
      <node id="44">
        <label>CoolTime</label>
        <link refid="d6/d49/class_cool_time"/>
      </node>
      <node id="32">
        <label>CoolBoardSensors::airActive</label>
        <link refid="d7/db6/struct_cool_board_sensors_1_1air_active"/>
      </node>
      <node id="41">
        <label>CoolBoardActor::state</label>
        <link refid="d5/ddc/struct_cool_board_actor_1_1state"/>
      </node>
      <node id="35">
        <label>Irene3000::state</label>
        <link refid="d2/d18/struct_irene3000_1_1state"/>
      </node>
      <node id="43">
        <label>Jetpack::state</label>
        <link refid="da/d35/struct_jetpack_1_1state"/>
      </node>
      <node id="39">
        <label>CoolFileSystem</label>
        <link refid="db/d0c/class_cool_file_system"/>
      </node>
      <node id="29">
        <label>BME280</label>
        <link refid="df/dcf/class_b_m_e280"/>
        <childnode refid="30" relation="usage">
          <edgelabel>+settings</edgelabel>
        </childnode>
        <childnode refid="31" relation="usage">
          <edgelabel>+calibration</edgelabel>
        </childnode>
      </node>
      <node id="19">
        <label>CoolBoard</label>
        <link refid="d7/df9/class_cool_board"/>
        <childnode refid="20" relation="usage">
          <edgelabel>-mqtt</edgelabel>
        </childnode>
        <childnode refid="22" relation="usage">
          <edgelabel>-wifiManager</edgelabel>
        </childnode>
        <childnode refid="23" relation="usage">
          <edgelabel>-coolBoardLed</edgelabel>
        </childnode>
        <childnode refid="24" relation="usage">
          <edgelabel>-externalSensors</edgelabel>
        </childnode>
        <childnode refid="27" relation="usage">
          <edgelabel>-coolBoardSensors</edgelabel>
        </childnode>
        <childnode refid="34" relation="usage">
          <edgelabel>-irene3000</edgelabel>
        </childnode>
        <childnode refid="39" relation="usage">
          <edgelabel>-fileSystem</edgelabel>
        </childnode>
        <childnode refid="40" relation="usage">
          <edgelabel>-onBoardActor</edgelabel>
        </childnode>
        <childnode refid="42" relation="usage">
          <edgelabel>-jetPack</edgelabel>
        </childnode>
        <childnode refid="44" relation="usage">
          <edgelabel>-rtc</edgelabel>
        </childnode>
      </node>
      <node id="23">
        <label>CoolBoardLed</label>
        <link refid="de/dc0/class_cool_board_led"/>
      </node>
      <node id="37">
        <label>Adafruit_ADS1015</label>
        <link refid="df/df6/class_adafruit___a_d_s1015"/>
      </node>
      <node id="21">
        <label>CoolPubSubClient</label>
        <link refid="d8/d4b/class_cool_pub_sub_client"/>
      </node>
    </collaborationgraph>
    <location file="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" line="35" column="1" bodyfile="/home/ashiroji/Arduino/libraries/CoolBoard/src/CoolBoard.h" bodystart="34" bodyend="113"/>
    <listofallmembers>
      <member refid="d7/df9/class_cool_board_1a7b835fafd449e5282f7f91d787a2dc15" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>answer</name></member>
      <member refid="d7/df9/class_cool_board_1acba7c5aef7268b2c0044bdb54d3b9d76" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>begin</name></member>
      <member refid="d7/df9/class_cool_board_1a583a874c09c07e70a6eb9229fc4beddb" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>config</name></member>
      <member refid="d7/df9/class_cool_board_1a519de78b807f8ec6463ff484eb925918" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>connect</name></member>
      <member refid="d7/df9/class_cool_board_1a8b88fd781e22e93025dd63474113b7e4" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>CoolBoard</name></member>
      <member refid="d7/df9/class_cool_board_1a1b1d3c684a5baa56b08486e192fd8e97" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>coolBoardLed</name></member>
      <member refid="d7/df9/class_cool_board_1af102be5288bd7f7a8e59b13f86e26a00" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>coolBoardSensors</name></member>
      <member refid="d7/df9/class_cool_board_1a427fb753dd8575bdf821c70a5c63d695" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>data</name></member>
      <member refid="d7/df9/class_cool_board_1af1fe1376fc66f93dee80b327ca695377" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>EnI2C</name></member>
      <member refid="d7/df9/class_cool_board_1a09e26264839c65873eb56af476eff6b2" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>externalSensors</name></member>
      <member refid="d7/df9/class_cool_board_1a638b00b76aeb819ecfd4c10b8cdd7bb7" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>externalSensorsActive</name></member>
      <member refid="d7/df9/class_cool_board_1a42c2586fbb13ff7f06538e9284e8538d" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>fileSystem</name></member>
      <member refid="d7/df9/class_cool_board_1a7508e029f2ee17bb747ffab599285e0d" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>getLogInterval</name></member>
      <member refid="d7/df9/class_cool_board_1a397b46fadab8f530a8cf4d914c561366" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>initReadI2C</name></member>
      <member refid="d7/df9/class_cool_board_1ad103718ce316006c4695b8eb312eaf11" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>irene3000</name></member>
      <member refid="d7/df9/class_cool_board_1a9c3f7ac625481ee2ae802a25d97a4ae0" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>ireneActive</name></member>
      <member refid="d7/df9/class_cool_board_1ad7442cf4b62c7b0d5bd62a0f75ffc065" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>isConnected</name></member>
      <member refid="d7/df9/class_cool_board_1a30b1357881b01ccbec676856a91e48e9" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>jetPack</name></member>
      <member refid="d7/df9/class_cool_board_1a9be03a913d26e558328935ca3b59a75e" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>jetpackActive</name></member>
      <member refid="d7/df9/class_cool_board_1a84bc94413b64973e4aba8c467c97006c" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>logInterval</name></member>
      <member refid="d7/df9/class_cool_board_1a7c8e505a5804b109e112d5a03df6ea2b" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>manual</name></member>
      <member refid="d7/df9/class_cool_board_1a2399f44d7c23c1149a335cb3b46d90f1" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>mqtt</name></member>
      <member refid="d7/df9/class_cool_board_1ae6b5e1274d760462290192acea4adca8" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>offLineMode</name></member>
      <member refid="d7/df9/class_cool_board_1a4ac693895c21025b8808653f2a4316e6" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>onBoardActor</name></member>
      <member refid="d7/df9/class_cool_board_1aa0bbc4bc605e35618d18e68795c61363" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>onLineMode</name></member>
      <member refid="d7/df9/class_cool_board_1a486507b8f0981d3cc671ed31c2145755" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>printConf</name></member>
      <member refid="d7/df9/class_cool_board_1ad03abdce2e65f520bbf2cff0f2d083cf" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>readSensors</name></member>
      <member refid="d7/df9/class_cool_board_1a50d2a6716879d64a85f3c6b44ad63275" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>rtc</name></member>
      <member refid="d7/df9/class_cool_board_1a069952cdcb2e7f68518aa429eceadb6e" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>sleep</name></member>
      <member refid="d7/df9/class_cool_board_1a0a51b2287139f66c738101fb53139230" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>sleepActive</name></member>
      <member refid="d7/df9/class_cool_board_1a8612756d3f73198cdde857a66f0fe690" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>update</name></member>
      <member refid="d7/df9/class_cool_board_1a6395459131d6889a3005f79c7a35e964" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>userActive</name></member>
      <member refid="d7/df9/class_cool_board_1ae7358fb6e623cfc81b775f5f1734909b" prot="public" virt="non-virtual"><scope>CoolBoard</scope><name>userData</name></member>
      <member refid="d7/df9/class_cool_board_1acd88e6003606b47479ebba81e4aceeca" prot="private" virt="non-virtual"><scope>CoolBoard</scope><name>wifiManager</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
