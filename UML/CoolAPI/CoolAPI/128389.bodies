class CoolBoardLed
!!!129029.cpp!!!	begin() : void

#if DEBUG == 1

	Serial.println("Entering CoolBoardLed.begin() ");

#endif

	pinMode(5,OUTPUT);
	digitalWrite(5,HIGH);
	neoPixelLed = new NeoPixelBus<NeoGrbFeature, Neo800KbpsMethod>(1,2); 
	neoPixelLed->Begin();
	neoPixelLed->Show();
!!!129157.cpp!!!	write(in R : int, in G : int, in B : int) : void

#if DEBUG == 1

	Serial.println("Entering CoolBoardLed.write()");
	Serial.println();
	Serial.print("R : ");
	Serial.println(R);
	Serial.print("G	: ");
	Serial.println(G);
	Serial.print("B	: ");
	Serial.println(B);
	Serial.println();	

#endif

	neoPixelLed->SetPixelColor(0, RgbColor(R, G, B));
	neoPixelLed->Show();
!!!129285.cpp!!!	end() : void

#if DEBUG == 1 
	
	Serial.println("Entering CoolBoardLed.end()");

#endif

	delete neoPixelLed;
!!!129413.cpp!!!	config() : bool

#if DEBUG == 1 
		
	Serial.println("Entering CoolBoardLed.config()");
	Serial.println();

#endif
	
	File coolBoardLedConfig = SPIFFS.open("/coolBoardLedConfig.json", "r");

	if (!coolBoardLedConfig) 
	{
	
	#if DEBUG == 1

		Serial.println("failed to read /coolBoardLedConfig.json");
		Serial.println();

	#endif

		return(false);
	}
	else
	{
		size_t size = coolBoardLedConfig.size();
		// Allocate a buffer to store contents of the file.
		std::unique_ptr<char[]> buf(new char[size]);

		coolBoardLedConfig.readBytes(buf.get(), size);
		DynamicJsonBuffer jsonBuffer;
		JsonObject& json = jsonBuffer.parseObject(buf.get());
		if (!json.success()) 
		{
		
		#if DEBUG == 1

			Serial.println("failed to parse json");
			Serial.println();
		
		#endif

			return(false);
		} 
		else
		{
		
		#if DEBUG == 1
  	
			Serial.println("read configuration file : ");
			json.printTo(Serial);
			Serial.println();
		
		#endif
  
			if(json["ledActive"].success() )
			{
				this->ledActive = json["ledActive"]; 
			}
			else
			{
				this->ledActive=this->ledActive;			
			}
			
			json["ledActive"]=this->ledActive;
			coolBoardLedConfig.close();
			
			coolBoardLedConfig = SPIFFS.open("/coolBoardLedConfig.json", "w");
			if(!coolBoardLedConfig)
			{
			
			#if DEBUG == 1 

				Serial.println("failed to write to /coolBoardLedConfig.json");
				Serial.println();

			#endif

				return(false);			
			}

			json.printTo(coolBoardLedConfig);
			coolBoardLedConfig.close();

		#if DEBUG == 1
	
			Serial.println("saved Led Config is : ");
			json.printTo(Serial);
			Serial.println();

		#endif

			return(true); 
		}
	}	

!!!129541.cpp!!!	printConf() : void

#if DEBUG == 1 

	Serial.println("Entering CoolBoardLed.printConf()");
	Serial.println();

#endif

	Serial.println("Led Configuration");

	Serial.print("ledActive : ");
	Serial.println(ledActive);

	Serial.println();	
!!!129669.cpp!!!	colorFade(in R : int, in G : int, in B : int, in T : int) : void

#if DEBUG == 1

	Serial.println("Entering CoolBoardLed.colorFade()");
	Serial.println();
	Serial.print("R : ");
	Serial.println(R);
	Serial.print("G	: ");
	Serial.println(G);
	Serial.print("B	: ");
	Serial.println(B);
	Serial.print("Time :");
	Serial.println(T);
	Serial.println();

#endif	

	for (int k = 0; k < 1000; k++) 
	{
		neoPixelLed->SetPixelColor(0, RgbColor(k * R / 1000, k * G / 1000, k * B / 1000));
		neoPixelLed->Show();
		delay(T);
	}
	for (int k = 1000; k >= 0; k--) 
	{
		neoPixelLed->SetPixelColor(0, RgbColor(k * R / 1000, k * G / 1000, k * B / 1000));
		neoPixelLed->Show();
		delay(T);
	}
!!!129797.cpp!!!	blink(in R : int, in G : int, in B : int, in T : int) : void

#if DEBUG == 1

	Serial.println("Entering CoolBoardLed.blink()");
	Serial.println();
	Serial.print("R : ");
	Serial.println(R);
	Serial.print("G	: ");
	Serial.println(G);
	Serial.print("B	: ");
	Serial.println(B);
	Serial.print("Time :");
	Serial.println(T);
	Serial.println();

#endif	

	neoPixelLed->SetPixelColor(0, RgbColor(R, G, B));
	neoPixelLed->Show();
	delay(T);
	neoPixelLed->SetPixelColor(0, RgbColor(0, 0, 0));
	neoPixelLed->Show();
!!!129925.cpp!!!	fadeIn(in R : int, in G : int, in B : int, in T : int) : void

#if DEBUG == 1

	Serial.println("Entering CoolBoardLed.fadeIn()");
	Serial.println();
	Serial.print("R : ");
	Serial.println(R);
	Serial.print("G	: ");
	Serial.println(G);
	Serial.print("B	: ");
	Serial.println(B);
	Serial.print("Time :");
	Serial.println(T);
	Serial.println();

#endif	

	for (int k = 0; k < 1000; k++) 
	{
		neoPixelLed->SetPixelColor(0, RgbColor(k * R / 1000, k * G / 1000, k * B / 1000));
		neoPixelLed->Show();
		delay(T);
	}
!!!130053.cpp!!!	fadeOut(in R : int, in G : int, in B : int, in T : int) : void

#if DEBUG == 1 

	Serial.println("Entering CoolBoardLed.fadeOut()");
	Serial.println();
	Serial.print("R : ");
	Serial.println(R);
	Serial.print("G	: ");
	Serial.println(G);
	Serial.print("B	: ");
	Serial.println(B);
	Serial.print("Time :");
	Serial.println(T);
	Serial.println();

#endif	


	for (int k = 1000; k >= 0; k--) 
	{
		neoPixelLed->SetPixelColor(0, RgbColor(k * R / 1000, k * G / 1000, k * B / 1000));
		neoPixelLed->Show();
		delay(T);
	}
!!!130181.cpp!!!	strobe(in R : int, in G : int, in B : int, in T : int) : void

#if DEBUG == 1

	Serial.println("Entering CoolBoardLed.strobe()");
	Serial.println();
	Serial.print("R : ");
	Serial.println(R);
	Serial.print("G	: ");
	Serial.println(G);
	Serial.print("B	: ");
	Serial.println(B);
	Serial.print("Time :");
	Serial.println(T);
	Serial.println();

#endif	

	
	for (int k = 1000; k >= 0; k--) 
	{
		neoPixelLed->SetPixelColor(0, RgbColor(R, G, B));
		neoPixelLed->Show();
		delay(T);
		neoPixelLed->SetPixelColor(0, RgbColor(0, 0, 0));
		neoPixelLed->Show();
		delay(T);
	}
